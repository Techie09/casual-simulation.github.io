(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{145:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));n(59),n(31),n(22),n(23),n(60),n(0);var a=n(172),o=n(140);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var c={id:"listen-tags",title:"Listen Tags",sidebar_label:"Listen Tags",description:"Listen tags are tags that can receive shouts and whispers from other bots and actoins that happen from the user."},s=[{value:"Whisper Tags",id:"whisper-tags",children:[{value:"@onCreate",id:"oncreate",children:[]},{value:"@onDestroy",id:"ondestroy",children:[]},{value:"@onModDrop",id:"onmoddrop",children:[]},{value:"@onModDropEnter",id:"onmoddropenter",children:[]},{value:"@onModDropExit",id:"onmoddropexit",children:[]},{value:"@onClick",id:"onclick",children:[]},{value:"@onPointerEnter",id:"onpointerenter",children:[]},{value:"@onPointerExit",id:"onpointerexit",children:[]},{value:"@onPointerDown",id:"onpointerdown",children:[]},{value:"@onPointerUp",id:"onpointerup",children:[]},{value:"@onDrag",id:"ondrag",children:[]},{value:"@onDrop",id:"ondrop",children:[]},{value:"@onDropEnter",id:"ondropenter",children:[]},{value:"@onDropExit",id:"ondropexit",children:[]},{value:"@onSaveInput",id:"onsaveinput",children:[]},{value:"@onCloseInput",id:"oncloseinput",children:[]},{value:"@onListen",id:"onlisten",children:[]}]},{value:"Shout Tags",id:"shout-tags",children:[{value:"@onAnyBotClicked",id:"onanybotclicked",children:[]},{value:"@onGridClick",id:"ongridclick",children:[]},{value:"@onPlayerEnterContext",id:"onplayerentercontext",children:[]},{value:"@onBarcodeScanned",id:"onbarcodescanned",children:[]},{value:"@onBarcodeScannerOpened",id:"onbarcodescanneropened",children:[]},{value:"@onBarcodeScannerClosed",id:"onbarcodescannerclosed",children:[]},{value:"@onQRCodeScanned",id:"onqrcodescanned",children:[]},{value:"@onQRCodeScannerOpened",id:"onqrcodescanneropened",children:[]},{value:"@onQRCodeScannerClosed",id:"onqrcodescannerclosed",children:[]},{value:"@onTapCode",id:"ontapcode",children:[]},{value:"@onKeyDown",id:"onkeydown",children:[]},{value:"@onKeyUp",id:"onkeyup",children:[]},{value:"@onChannelSubscribed",id:"onchannelsubscribed",children:[]},{value:"@onChannelUnsubscribed",id:"onchannelunsubscribed",children:[]},{value:"@onChannelStreaming",id:"onchannelstreaming",children:[]},{value:"@onChannelStreamLost",id:"onchannelstreamlost",children:[]},{value:"@onCheckout",id:"oncheckout",children:[]},{value:"@onPaymentSuccessful",id:"onpaymentsuccessful",children:[]},{value:"@onPaymentFailed",id:"onpaymentfailed",children:[]},{value:"@onAnyBotDrag",id:"onanybotdrag",children:[]},{value:"@onAnyBotDrop",id:"onanybotdrop",children:[]},{value:"@onAnyListen",id:"onanylisten",children:[]},{value:"@onWebhook",id:"onwebhook",children:[]},{value:"@onChannelAction",id:"onchannelaction",children:[]}]}],b={rightToc:s},i="wrapper";function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(i,r({},b,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,'Listen tags are tags that can receive shouts and whispers from other bots and actions that happen from the user.\nTo create a listen tag, you make a normal tag and enter a "@" as the first character of the tag\'s value.'),Object(a.b)("h2",{id:"whisper-tags"},"Whisper Tags"),Object(a.b)("p",null,"Whispers are shouts that are sent to specific bots instead of all bots."),Object(a.b)("h3",{id:"oncreate"},Object(a.b)("inlineCode",{parentName:"h3"},"@onCreate")),Object(a.b)("p",null,"A whisper that is sent to a bot when it is first created."),Object(a.b)("h3",{id:"ondestroy"},Object(a.b)("inlineCode",{parentName:"h3"},"@onDestroy")),Object(a.b)("p",null,"A whisper that is sent to a bot when it is being destroyed."),Object(a.b)("h3",{id:"onmoddrop"},Object(a.b)("inlineCode",{parentName:"h3"},"@onModDrop")),Object(a.b)("p",null,"A whisper that is sent to a bot that a mod was dropped on.\nIf a custom ",Object(a.b)("inlineCode",{parentName:"p"},"@onModDrop")," is not specified, then the mod will be applied automatically.\nIf a custom ",Object(a.b)("inlineCode",{parentName:"p"},"@onModDrop")," is specified, then the mod needs to be applied manually via ",Object(a.b)(o.ActionLink,{action:"applyMod(bot, ...mods)",mdxType:"ActionLink"}),"."),Object(a.b)("h4",{id:"arguments"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"\ninterface Mod {\n  [tag: string]: any;\n}\n\nlet that: {\n  mod: Mod\n};\n")),Object(a.b)("h3",{id:"onmoddropenter"},Object(a.b)("inlineCode",{parentName:"h3"},"@onModDropEnter")),Object(a.b)("p",null,"A whisper that is sent to the bot that a mod started to be dragged onto."),Object(a.b)("h4",{id:"arguments-1"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  mod: Mod,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onmoddropexit"},Object(a.b)("inlineCode",{parentName:"h3"},"@onModDropExit")),Object(a.b)("p",null,"A whisper that is sent to the bot that a mod was just dragged off of."),Object(a.b)("h4",{id:"arguments-2"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  mod: Mod,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onclick"},Object(a.b)("inlineCode",{parentName:"h3"},"@onClick")),Object(a.b)("p",null,"A whisper that is sent to the bot that was clicked."),Object(a.b)("h4",{id:"arguments-3"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  context: string\n};\n")),Object(a.b)("h3",{id:"onpointerenter"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPointerEnter")),Object(a.b)("p",null,"A whisper that is sent to a bot when the mouse cursor starts to hover over it."),Object(a.b)("h4",{id:"arguments-4"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onpointerexit"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPointerExit")),Object(a.b)("p",null,"A whisper that is sent to a bot when the mouse cursor stops hovering over it."),Object(a.b)("h4",{id:"arguments-5"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onpointerdown"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPointerDown")),Object(a.b)("p",null,"A whipser that is sent to a bot when the user starts clicking it."),Object(a.b)("h4",{id:"arguments-6"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onpointerup"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPointerUp")),Object(a.b)("p",null,"A whisper that is sent to a bot when the user stops clicking it."),Object(a.b)("h4",{id:"arguments-7"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"ondrag"},Object(a.b)("inlineCode",{parentName:"h3"},"@onDrag")),Object(a.b)("p",null,"A whisper that is sent whenever a bot is starting to be dragged."),Object(a.b)("h4",{id:"arguments-8"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  from: {\n    x: number,\n    y: number,\n    context: string\n  }\n};\n")),Object(a.b)("h3",{id:"ondrop"},Object(a.b)("inlineCode",{parentName:"h3"},"@onDrop")),Object(a.b)("p",null,"A whisper that is sent whenever a bot has been dropped after being dragged.\nThe whisper is sent to both the bot that was dropped and the bot that was dropped on."),Object(a.b)("h4",{id:"arguments-9"},"Arguments"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  to: {\n    x: number,\n    y: number,\n    context: string\n  },\n  from: {\n    x: number,\n    y: number,\n    context: string\n  }\n};\n")),Object(a.b)("h3",{id:"ondropenter"},Object(a.b)("inlineCode",{parentName:"h3"},"@onDropEnter")),Object(a.b)("p",null,"A whisper that is sent to both bots when a bot is dragged onto another bot."),Object(a.b)("h4",{id:"arguments-10"},"Arguments"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  draggedBot: Bot,\n  otherBot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"ondropexit"},Object(a.b)("inlineCode",{parentName:"h3"},"@onDropExit")),Object(a.b)("p",null,"A whisper that is sent to both bots when a bot is dragged off of another bot."),Object(a.b)("h4",{id:"arguments-11"},"Arguments"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  draggedBot: Bot,\n  otherBot: Bot,\n  context: string\n};\n")),Object(a.b)("h3",{id:"onsaveinput"},Object(a.b)("inlineCode",{parentName:"h3"},"@onSaveInput")),Object(a.b)("p",null,"A whisper that is sent when the input box for a bot has been changed by the user."),Object(a.b)("h4",{id:"arguments-12"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that = null;\n")),Object(a.b)("h3",{id:"oncloseinput"},Object(a.b)("inlineCode",{parentName:"h3"},"@onCloseInput")),Object(a.b)("p",null,"A whisper that is sent when the input box for a bot has been closed by the user."),Object(a.b)("h4",{id:"arguments-13"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that = null;\n")),Object(a.b)("h3",{id:"onlisten"},Object(a.b)("inlineCode",{parentName:"h3"},"@onListen")),Object(a.b)("p",null,"A whisper that is sent whenever a whisper or shout is sent to this bot."),Object(a.b)("h4",{id:"arguments-14"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  name: string,\n  that: any,\n  targets: Bot[],\n  listeners: Bot[],\n  responses: any[]\n};\n")),Object(a.b)("h2",{id:"shout-tags"},"Shout Tags"),Object(a.b)("p",null,"Shouts are events which are sent to all bots."),Object(a.b)("h3",{id:"onanybotclicked"},Object(a.b)("inlineCode",{parentName:"h3"},"@onAnyBotClicked")),Object(a.b)("p",null,"A shout that is sent to all bots when a bot is clicked."),Object(a.b)("h4",{id:"arguments-15"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  face: 'left' | 'right' | 'front' | 'back' | 'top' | 'bottom',\n  context: string\n};\n")),Object(a.b)("h3",{id:"ongridclick"},Object(a.b)("inlineCode",{parentName:"h3"},"@onGridClick")),Object(a.b)("p",null,"A shout that is sent to all bots when the user clicks on empty space."),Object(a.b)("h4",{id:"arguments-16"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  position: {\n    x: number,\n    y: number\n  },\n  context: string\n};\n")),Object(a.b)("h3",{id:"onplayerentercontext"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPlayerEnterContext")),Object(a.b)("p",null,"A shout that is sent to all bots when the player enters a context."),Object(a.b)("h4",{id:"arguments-17"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  context: string\n};\n")),Object(a.b)("h3",{id:"onbarcodescanned"},Object(a.b)("inlineCode",{parentName:"h3"},"@onBarcodeScanned")),Object(a.b)("p",null,"A shout that is sent to all bots when the player scans a barcode."),Object(a.b)("h4",{id:"arguments-18"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: string;\n")),Object(a.b)("h3",{id:"onbarcodescanneropened"},Object(a.b)("inlineCode",{parentName:"h3"},"@onBarcodeScannerOpened")),Object(a.b)("p",null,"A shout that is sent to all bots when the barcode scanner is opened."),Object(a.b)("h3",{id:"onbarcodescannerclosed"},Object(a.b)("inlineCode",{parentName:"h3"},"@onBarcodeScannerClosed")),Object(a.b)("p",null,"A shout that is sent to all bots when the barcode scanner is closed."),Object(a.b)("h3",{id:"onqrcodescanned"},Object(a.b)("inlineCode",{parentName:"h3"},"@onQRCodeScanned")),Object(a.b)("p",null,"A shout that is sent to all bots when a QR Code is scanned."),Object(a.b)("h4",{id:"arguments-19"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: string;\n")),Object(a.b)("h3",{id:"onqrcodescanneropened"},Object(a.b)("inlineCode",{parentName:"h3"},"@onQRCodeScannerOpened")),Object(a.b)("p",null,"A shout that is sent to all bots when the QR Code Scanner is opened."),Object(a.b)("h3",{id:"onqrcodescannerclosed"},Object(a.b)("inlineCode",{parentName:"h3"},"@onQRCodeScannerClosed")),Object(a.b)("p",null,"A shout that is sent to all bots when the QR Code Scanner is closed."),Object(a.b)("h3",{id:"ontapcode"},Object(a.b)("inlineCode",{parentName:"h3"},"@onTapCode")),Object(a.b)("p",null,"A shout that is sent to all bots whenever a 4-digit tap code is entered."),Object(a.b)("h4",{id:"arguments-20"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: string;\n")),Object(a.b)("h3",{id:"onkeydown"},Object(a.b)("inlineCode",{parentName:"h3"},"@onKeyDown")),Object(a.b)("p",null,"A shout that is sent to all bots whenever the user starts pressing a key."),Object(a.b)("h4",{id:"arguments-21"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  keys: string[]\n};\n")),Object(a.b)("h3",{id:"onkeyup"},Object(a.b)("inlineCode",{parentName:"h3"},"@onKeyUp")),Object(a.b)("p",null,"A shout that is sent to all bots whenever the user stops pressing a key."),Object(a.b)("h4",{id:"arguments-22"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  keys: string[]\n};\n")),Object(a.b)("h3",{id:"onchannelsubscribed"},Object(a.b)("inlineCode",{parentName:"h3"},"@onChannelSubscribed")),Object(a.b)("p",null,"A shout that is sent when a channel is loaded.\nSent to every channel that is loaded."),Object(a.b)("h4",{id:"arguments-23"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  channel: string\n};\n")),Object(a.b)("h3",{id:"onchannelunsubscribed"},Object(a.b)("inlineCode",{parentName:"h3"},"@onChannelUnsubscribed")),Object(a.b)("p",null,"A shout that is sent when a channel is unloaded.\nSent to every channel that is loaded."),Object(a.b)("h4",{id:"arguments-24"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  channel: string\n};\n")),Object(a.b)("h3",{id:"onchannelstreaming"},Object(a.b)("inlineCode",{parentName:"h3"},"@onChannelStreaming")),Object(a.b)("p",null,"A shout that is sent when a channel is connected and fully synced.\nSent to every channel that is loaded."),Object(a.b)("h4",{id:"arguments-25"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  channel: string\n};\n")),Object(a.b)("h3",{id:"onchannelstreamlost"},Object(a.b)("inlineCode",{parentName:"h3"},"@onChannelStreamLost")),Object(a.b)("p",null,"A shout that is sent when a channel has been temporarily disconnected from the server.\nSent to every channel that is loaded."),Object(a.b)("h4",{id:"arguments-26"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  channel: string\n};\n")),Object(a.b)("h3",{id:"oncheckout"},Object(a.b)("inlineCode",{parentName:"h3"},"@onCheckout")),Object(a.b)("p",null,"A shout that is sent when the user submits their credit card info to purchase something."),Object(a.b)("h4",{id:"arguments-27"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  token: string, \n  productId: string, \n  user: { \n    username: string, \n    device: string, \n    token: string\n  }\n};\n")),Object(a.b)("h3",{id:"onpaymentsuccessful"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPaymentSuccessful")),Object(a.b)("p",null,"A shout that is sent when payment has been approved for a checkout."),Object(a.b)("h4",{id:"arguments-28"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  /**\n   * The bot that was created for the transaction.\n   */\n  bot: Bot,\n  charge: any,\n  extra: any\n};\n")),Object(a.b)("h3",{id:"onpaymentfailed"},Object(a.b)("inlineCode",{parentName:"h3"},"@onPaymentFailed")),Object(a.b)("p",null,"A shout that is sent when payment has been rejected for a checkout."),Object(a.b)("h4",{id:"arguments-29"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  /**\n   * The bot that was created for the transaction.\n   */\n  bot: Bot,\n  error: any,\n  extra: any\n};\n")),Object(a.b)("h3",{id:"onanybotdrag"},Object(a.b)("inlineCode",{parentName:"h3"},"@onAnyBotDrag")),Object(a.b)("p",null,"A shout that is sent whenever a bot starts to be dragged."),Object(a.b)("h4",{id:"arguments-30"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  from: {\n    x: number,\n    y: number,\n    context: string\n  }\n};\n")),Object(a.b)("h3",{id:"onanybotdrop"},Object(a.b)("inlineCode",{parentName:"h3"},"@onAnyBotDrop")),Object(a.b)("p",null,"A shout that is sent whenever a bot is dropped after being dragged."),Object(a.b)("h4",{id:"arguments-31"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  bot: Bot,\n  to: {\n    x: number,\n    y: number,\n    context: string\n  },\n  from: {\n    x: number,\n    y: number,\n    context: string\n  }\n};\n")),Object(a.b)("h3",{id:"onanylisten"},Object(a.b)("inlineCode",{parentName:"h3"},"@onAnyListen")),Object(a.b)("p",null,"A shout that is sent whenever a whisper or shout is issued."),Object(a.b)("h4",{id:"arguments-32"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  name: string,\n  that: any,\n  targets: Bot[],\n  listeners: Bot[],\n  responses: any[]\n};\n")),Object(a.b)("h3",{id:"onwebhook"},Object(a.b)("inlineCode",{parentName:"h3"},"@onWebhook")),Object(a.b)("p",null,"A shout that is sent whenever a webhook is received."),Object(a.b)("h4",{id:"arguments-33"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  method: string,\n  url: string,\n  data: any,\n  headers: any\n};\n")),Object(a.b)("h3",{id:"onchannelaction"},Object(a.b)("inlineCode",{parentName:"h3"},"@onChannelAction")),Object(a.b)("p",null,"A whisper that is sent to the config bot whenever an action happens."),Object(a.b)("h4",{id:"arguments-34"},"Arguments:"),Object(a.b)("pre",null,Object(a.b)("code",r({parentName:"pre"},{className:"language-typescript"}),"let that: {\n  action: any\n};\n")))}l.isMDXComponent=!0}}]);