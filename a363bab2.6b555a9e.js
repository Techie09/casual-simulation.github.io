(window.webpackJsonp=window.webpackJsonp||[]).push([[12,11],{126:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return d})),a.d(t,"PossibleValuesTable",(function(){return h})),a.d(t,"PossibleValue",(function(){return m})),a.d(t,"PossibleValueCode",(function(){return u})),a.d(t,"AnyColorValues",(function(){return O})),a.d(t,"TagLink",(function(){return j})),a.d(t,"DataTagLink",(function(){return g})),a.d(t,"ListenTagLink",(function(){return f})),a.d(t,"ActionLink",(function(){return v})),a.d(t,"NormalCode",(function(){return y})),a.d(t,"LabelAnchorValues",(function(){return N})),a.d(t,"Badges",(function(){return T})),a.d(t,"Badge",(function(){return w})),a.d(t,"ReadOnlyBadge",(function(){return x})),a.d(t,"VideoBadge",(function(){return k})),a.d(t,"ConfigBotBadge",(function(){return C})),a.d(t,"HistoryBotBadge",(function(){return P})),a.d(t,"AutomaticBadge",(function(){return L})),a.d(t,"PagePortalBadge",(function(){return S})),a.d(t,"InventoryPortalBadge",(function(){return A})),a.d(t,"MenuPortalBadge",(function(){return R})),a.d(t,"MeetPortalBadge",(function(){return I})),a.d(t,"LeftWristPortalBadge",(function(){return E})),a.d(t,"RightWristPortalBadge",(function(){return D})),a.d(t,"SheetPortalBadge",(function(){return B})),a.d(t,"TagPortalBadge",(function(){return V})),a.d(t,"ImuPortalBadge",(function(){return U})),a.d(t,"Alert",(function(){return M})),a.d(t,"Example",(function(){return G})),a.d(t,"ExampleIframe",(function(){return _})),a.d(t,"default",(function(){return F}));a(165),a(164);function n(e){if(null==e)throw new TypeError("Cannot destructure undefined")}var o=a(2),i=a(9),r=a(0),s=a.n(r),l=a(160),c=a(162),b={},p={id:"components",title:"components",description:"export const PossibleValuesTable = ({children}) => (",source:"@site/docs/components.mdx",permalink:"/docs/components",editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/components.mdx"},d=[],h=function(e){var t=e.children;return Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Value"),Object(l.b)("th",null,"Description"))),Object(l.b)("tbody",null,t))},m=function(e){var t=e.value,a=e.children,n=Object(i.a)(e,["value","children"]);return Object(l.b)("tr",n,Object(l.b)("td",null,t),Object(l.b)("td",null,a))},u=function(e){var t=e.value,a=e.children,n=Object(i.a)(e,["value","children"]);return Object(l.b)(m,Object(o.a)({value:Object(l.b)("code",null,t)},n,{mdxType:"PossibleValue"}),a)},O=function(e){return n(e),Object(l.b)(s.a.Fragment,null,Object(l.b)(m,{value:"Any X11 Color",mdxType:"PossibleValue"},Object(l.b)("a",{href:"https://en.wikipedia.org/wiki/X11_color_names",target:"_blank"},"X11 colors")," are a list of standard colors that web browsers support."),Object(l.b)(m,{value:"Any Hex Color",mdxType:"PossibleValue"},Object(l.b)("a",{href:"https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",target:"_blank"},"Hex colors")," are three or six digit numbers that specify a color by its red, green, and blue components."))},j=function(e){var t=e.tag;return t.startsWith("@")?Object(l.b)(f,{tag:t,mdxType:"ListenTagLink"}):Object(l.b)(g,{tag:t,mdxType:"DataTagLink"})},g=function(e){var t=e.tag;return Object(l.b)("a",{href:Object(c.a)("docs/tags")+"#"+t.replace(/\./g,"").toLowerCase()},Object(l.b)(y,{mdxType:"NormalCode"},"#",t))},f=function(e){var t=e.tag;return Object(l.b)("a",{href:Object(c.a)("docs/listen-tags/tags")+"#"+t.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()},Object(l.b)(y,{mdxType:"NormalCode"},t))},v=function(e){var t=e.action,a=e.children;return Object(l.b)("a",{href:Object(c.a)("docs/actions")+"#"+t.replace(/[\.\(\)\,\?]/g,"").replace(/\s/g,"-").toLowerCase()},a||Object(l.b)(y,{mdxType:"NormalCode"},t))},y=function(e){var t=e.children;return s.a.createElement.apply(s.a,["code",{}].concat(t))},N=function(e){return n(e),Object(l.b)(s.a.Fragment,null,Object(l.b)(u,{value:"top",mdxType:"PossibleValueCode"},"Top of the bot facing world oriented up. (default)"),Object(l.b)(u,{value:"front",mdxType:"PossibleValueCode"},"Front of the bot facing world oriented forward."),Object(l.b)(u,{value:"back",mdxType:"PossibleValueCode"},"Back of the bot facing world oriented back."),Object(l.b)(u,{value:"right",mdxType:"PossibleValueCode"},"Right of the bot facing world oriented right."),Object(l.b)(u,{value:"left",mdxType:"PossibleValueCode"},"Left of the bot facing world oriented left."),Object(l.b)(u,{value:"floating",mdxType:"PossibleValueCode"},"Floating above the bot."))},T=function(e){var t=e.children;return Object(l.b)("div",{className:"row badge-row"},Object(l.b)("div",{className:"col"},t))},w=function(e){var t=e.type,a=e.title,n=e.children;return Object(l.b)("span",{title:a,className:"badge badge--"+t},n)},x=function(e){return n(e),Object(l.b)(w,{type:"warning",mdxType:"Badge"},"Read-Only")},k=function(e){var t=e.url;return Object(l.b)(w,{type:"info",mdxType:"Badge"},Object(l.b)("a",{href:t,target:"_blank"},"Video"))},C=function(e){e.url;return Object(l.b)(w,{type:"primary",mdxType:"Badge"},"Config Bot")},P=function(e){e.url;return Object(l.b)(w,{type:"primary",mdxType:"Badge"},"History Bot")},L=function(e){e.url;return Object(l.b)(w,{type:"success",title:"This tag is automatically set by CasualOS.",mdxType:"Badge"},"Automatic")},S=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the page portal bot.",mdxType:"Badge"},"pagePortalBot")},A=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the inventory portal bot.",mdxType:"Badge"},"inventoryPortalBot")},R=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the menu portal bot.",mdxType:"Badge"},"menuPortalBot")},I=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the meet portal bot.",mdxType:"Badge"},"meetPortalBot")},E=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the left wrist portal bot.",mdxType:"Badge"},"leftWristPortalBot")},D=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the right wrist portal bot.",mdxType:"Badge"},"rightWristPortalBot")},B=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the sheet portal bot.",mdxType:"Badge"},"sheetPortalBot")},V=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the tag portal bot.",mdxType:"Badge"},"tagPortalBot")},U=function(e){e.url;return Object(l.b)(w,{type:"normal",title:"This tag is available on the IMU portal bot.",mdxType:"Badge"},"imuPortalBot")},M=function(e){var t=e.type,a=e.children;return Object(l.b)("div",{className:"alert alert--"+t,role:"alert"},a)},G=function(e){var t=e.code;return Object(l.b)(w,{type:"info",mdxType:"Badge"},Object(l.b)("a",{target:"_blank",href:"https://casualos.com?auxCode="+t},"Example"))},_=function(e){var t=e.code;return Object(l.b)("iframe",{className:"example",src:"https://casualos.com?auxCode="+t})},W={rightToc:d,PossibleValuesTable:h,PossibleValue:m,PossibleValueCode:u,AnyColorValues:O,TagLink:j,DataTagLink:g,ListenTagLink:f,ActionLink:v,NormalCode:y,LabelAnchorValues:N,Badges:T,Badge:w,ReadOnlyBadge:x,VideoBadge:k,ConfigBotBadge:C,HistoryBotBadge:P,AutomaticBadge:L,PagePortalBadge:S,Alert:M,Example:G,ExampleIframe:_};function F(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(o.a)({},W,a,{components:t,mdxType:"MDXLayout"}))}F.isMDXComponent=!0},147:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),o=a(9),i=(a(0),a(160)),r=a(126),s={id:"actions",title:"Actions",sidebar_label:"Actions",description:"Actions affect the data in bots and also do things to the outside world."},l={id:"actions",title:"Actions",description:"Actions affect the data in bots and also do things to the outside world.",source:"@site/docs/actions.mdx",permalink:"/docs/actions",editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions.mdx",sidebar_label:"Actions",sidebar:"docs",previous:{title:"Listen Tag Variables",permalink:"/docs/listen-tags/variables"},next:{title:"Getting started with Custom Portals",permalink:"/docs/custom-portals/introduction"}},c=[{value:"Data Actions",id:"data-actions",children:[{value:"<code>create(...mods)</code>",id:"createmods",children:[]},{value:"<code>destroy(bot)</code>",id:"destroybot",children:[]},{value:"<code>applyMod(bot, ...mods)</code>",id:"applymodbot-mods",children:[]},{value:"<code>subtractMods(bot, ...mods)</code>",id:"subtractmodsbot-mods",children:[]},{value:"<code>removeTags(bot, tagSection)</code>",id:"removetagsbot-tagsection",children:[]},{value:"<code>renameTag(bot, originalTag, newTag)</code>",id:"renametagbot-originaltag-newtag",children:[]},{value:"<code>changeState(bot, stateName, groupName?)</code>",id:"changestatebot-statename-groupname",children:[]},{value:"<code>getBots(..filters)</code>",id:"getbotsfilters",children:[]},{value:"<code>getBots(tag, value?)</code>",id:"getbotstag-value",children:[]},{value:"<code>getBot(...filters)</code>",id:"getbotfilters",children:[]},{value:"<code>getBot(tag, filter?)</code>",id:"getbottag-filter",children:[]},{value:"<code>getBotTagValues(tag, filter?)</code>",id:"getbottagvaluestag-filter",children:[]},{value:"<code>getID(bot)</code>",id:"getidbot",children:[]},{value:"<code>getJSON(data)</code>",id:"getjsondata",children:[]},{value:"<code>getMod(bot)</code>",id:"getmodbot",children:[]},{value:"<code>getBotPosition(bot, dimension)</code>",id:"getbotpositionbot-dimension",children:[]},{value:"<code>uuid()</code>",id:"uuid",children:[]}]},{value:"Web Actions",id:"web-actions",children:[{value:"<code>web.hook(options)</code>",id:"webhookoptions",children:[]},{value:"<code>web.get(url, options?)</code>",id:"webgeturl-options",children:[]},{value:"<code>web.post(url, data?, options?)</code>",id:"webposturl-data-options",children:[]}]},{value:"Utility Actions",id:"utility-actions",children:[{value:"<code>animateTag(bot, tag, options)</code>",id:"animatetagbot-tag-options",children:[]},{value:"<code>animateTag(bot, options)</code>",id:"animatetagbot-options",children:[]},{value:"<code>clearAnimations(bot, tag?)</code>",id:"clearanimationsbot-tag",children:[]},{value:"<code>setTag(bot, tag, value)</code>",id:"settagbot-tag-value",children:[]},{value:"<code>getTag(bot, tag)</code>",id:"gettagbot-tag",children:[]},{value:"<code>setTagMask(bot, tag, value, space?)</code>",id:"settagmaskbot-tag-value-space",children:[]},{value:"<code>clearTagMasks(bot, space?)</code>",id:"cleartagmasksbot-space",children:[]},{value:"<code>insertTagText(bot, tag, index, text)</code>",id:"inserttagtextbot-tag-index-text",children:[]},{value:"<code>insertTagMaskText(bot, tag, index, text, space?)</code>",id:"inserttagmasktextbot-tag-index-text-space",children:[]},{value:"<code>deleteTagText(bot, tag, index, count)</code>",id:"deletetagtextbot-tag-index-count",children:[]},{value:"<code>deleteTagMaskText(bot, tag, index, count, space?)</code>",id:"deletetagmasktextbot-tag-index-count-space",children:[]}]},{value:"Bot Filters",id:"bot-filters",children:[{value:"<code>byTag(tag, value?)</code>",id:"bytagtag-value",children:[]},{value:"<code>inDimension(dimension)</code>",id:"indimensiondimension",children:[]},{value:"<code>atPosition(dimension, x, y)</code>",id:"atpositiondimension-x-y",children:[]},{value:"<code>inStack(bot, dimension)</code>",id:"instackbot-dimension",children:[]},{value:"<code>byCreator(bot)</code>",id:"bycreatorbot",children:[]},{value:"<code>bySpace(space)</code>",id:"byspacespace",children:[]},{value:"<code>byMod(mod)</code>",id:"bymodmod",children:[]},{value:"<code>neighboring(bot, dimension, direction)</code>",id:"neighboringbot-dimension-direction",children:[]},{value:"<code>either(...filters)</code>",id:"eitherfilters",children:[]},{value:"<code>not(filter)</code>",id:"notfilter",children:[]}]},{value:"Event Actions",id:"event-actions",children:[{value:"<code>shout(name, arg?)</code>",id:"shoutname-arg",children:[]},{value:"<code>whisper(bot, name, arg?)</code>",id:"whisperbot-name-arg",children:[]},{value:"<code>superShout(name, arg?)</code>",id:"supershoutname-arg",children:[]},{value:"<code>remote(action, target?)</code>",id:"remoteaction-target",children:[]},{value:"<code>sendRemoteData(remoteId, name, arg?)</code>",id:"sendremotedataremoteid-name-arg",children:[]},{value:"<code>action.reject(action)</code>",id:"actionrejectaction",children:[]}]},{value:"OS Actions",id:"os-actions",children:[{value:"<code>os.sleep(time)</code>",id:"ossleeptime",children:[]},{value:"<code>os.log(...args)</code>",id:"oslogargs",children:[]},{value:"<code>os.getGeolocation()</code>",id:"osgetgeolocation",children:[]},{value:"<code>os.checkout(options)</code>",id:"oscheckoutoptions",children:[]},{value:"<code>os.download(data, filename, mimeType?)</code>",id:"osdownloaddata-filename-mimetype",children:[]},{value:"<code>os.downloadBots(bots, filename)</code>",id:"osdownloadbotsbots-filename",children:[]},{value:"<code>os.run(script)</code>",id:"osrunscript",children:[]},{value:"<code>os.replaceDragBot(botOrMod)</code>",id:"osreplacedragbotbotormod",children:[]},{value:"<code>os.addDropSnap(...targets)</code>",id:"osadddropsnaptargets",children:[]},{value:"<code>os.addBotDropSnap(bot, ...targets)</code>",id:"osaddbotdropsnapbot-targets",children:[]},{value:"<code>os.showChat(placeholder?)</code>",id:"osshowchatplaceholder",children:[]},{value:"<code>os.showChat(options)</code>",id:"osshowchatoptions",children:[]},{value:"<code>os.hideChat()</code>",id:"oshidechat",children:[]},{value:"<code>os.showHtml(html)</code>",id:"osshowhtmlhtml",children:[]},{value:"<code>os.hideHtml()</code>",id:"oshidehtml",children:[]},{value:"<code>os.share(options)</code>",id:"osshareoptions",children:[]},{value:"<code>os.openCircleWipe(options?)</code>",id:"osopencirclewipeoptions",children:[]},{value:"<code>os.closeCircleWipe(options?)</code>",id:"osclosecirclewipeoptions",children:[]},{value:"<code>os.toast(message, duration?)</code>",id:"ostoastmessage-duration",children:[]},{value:"<code>os.focusOn(botOrPosition, options?)</code>",id:"osfocusonbotorposition-options",children:[]},{value:"<code>os.openQRCodeScanner(camera?)</code>",id:"osopenqrcodescannercamera",children:[]},{value:"<code>os.closeQRCodeScanner(camera?)</code>",id:"oscloseqrcodescannercamera",children:[]},{value:"<code>os.showQRCode(code)</code>",id:"osshowqrcodecode",children:[]},{value:"<code>os.hideQRCode()</code>",id:"oshideqrcode",children:[]},{value:"<code>os.showJoinCode(server?, dimension?)</code>",id:"osshowjoincodeserver-dimension",children:[]},{value:"<code>os.openBarcodeScanner(camera?)</code>",id:"osopenbarcodescannercamera",children:[]},{value:"<code>os.closeBarcodeScanner(camera?)</code>",id:"osclosebarcodescannercamera",children:[]},{value:"<code>os.showBarcode(code, format?)</code>",id:"osshowbarcodecode-format",children:[]},{value:"<code>os.hideBarcode()</code>",id:"oshidebarcode",children:[]},{value:"<code>os.showInput(value?, options?)</code>",id:"osshowinputvalue-options",children:[]},{value:"<code>os.showInputForTag(bot, tag, options?)</code>",id:"osshowinputfortagbot-tag-options",children:[]},{value:"<code>os.setClipboard(text)</code>",id:"ossetclipboardtext",children:[]},{value:"<code>os.showUploadFiles()</code>",id:"osshowuploadfiles",children:[]},{value:"<code>os.showUploadAuxFile()</code>",id:"osshowuploadauxfile",children:[]},{value:"<code>os.loadServer(server)</code>",id:"osloadserverserver",children:[]},{value:"<code>os.unloadServer()</code>",id:"osunloadserver",children:[]},{value:"<code>os.downloadServer()</code>",id:"osdownloadserver",children:[]},{value:"<code>os.enableAR()</code>",id:"osenablear",children:[]},{value:"<code>os.disableAR()</code>",id:"osdisablear",children:[]},{value:"<code>os.enableVR()</code>",id:"osenablevr",children:[]},{value:"<code>os.disableVR()</code>",id:"osdisablevr",children:[]},{value:"<code>os.enablePointOfView(center?)</code>",id:"osenablepointofviewcenter",children:[]},{value:"<code>os.disablePointOfView()</code>",id:"osdisablepointofview",children:[]},{value:"<code>os.getCurrentServer()</code>",id:"osgetcurrentserver",children:[]},{value:"<code>os.getCurrentDimension()</code>",id:"osgetcurrentdimension",children:[]},{value:"<code>os.getMenuDimension()</code>",id:"osgetmenudimension",children:[]},{value:"<code>os.getInventoryDimension()</code>",id:"osgetinventorydimension",children:[]},{value:"<code>os.hasBotInInventory(bot)</code>",id:"oshasbotininventorybot",children:[]},{value:"<code>os.getPortalDimension(portal)</code>",id:"osgetportaldimensionportal",children:[]},{value:"<code>os.getDimensionalDepth(dimension)</code>",id:"osgetdimensionaldepthdimension",children:[]},{value:"<code>configBot</code>",id:"configbot",children:[]},{value:"<code>os.getCameraPosition(portal?)</code>",id:"osgetcamerapositionportal",children:[]},{value:"<code>os.getCameraRotation(portal?)</code>",id:"osgetcamerarotationportal",children:[]},{value:"<code>os.getFocusPoint(portal?)</code>",id:"osgetfocuspointportal",children:[]},{value:"<code>os.getPointerPosition(pointer?)</code>",id:"osgetpointerpositionpointer",children:[]},{value:"<code>os.getPointerRotation(pointer?)</code>",id:"osgetpointerrotationpointer",children:[]},{value:"<code>os.getPointerDirection(pointer?)</code>",id:"osgetpointerdirectionpointer",children:[]},{value:"<code>os.getInputState(controller, button)</code>",id:"osgetinputstatecontroller-button",children:[]},{value:"<code>os.getInputList()</code>",id:"osgetinputlist",children:[]},{value:"<code>os.goToDimension(dimension)</code>",id:"osgotodimensiondimension",children:[]},{value:"<code>os.goToURL(url)</code>",id:"osgotourlurl",children:[]},{value:"<code>os.openURL(url)</code>",id:"osopenurlurl",children:[]},{value:"<code>os.openDevConsole()</code>",id:"osopendevconsole",children:[]},{value:"<code>os.playSound(url)</code>",id:"osplaysoundurl",children:[]},{value:"<code>os.bufferSound(url)</code>",id:"osbuffersoundurl",children:[]},{value:"<code>os.cancelSound(soundID)</code>",id:"oscancelsoundsoundid",children:[]},{value:"<code>os.isInDimension(dimension)</code>",id:"osisindimensiondimension",children:[]},{value:"<code>os.inSheet()</code>",id:"osinsheet",children:[]},{value:"<code>os.importAUX(urlOrJSON)</code>",id:"osimportauxurlorjson",children:[]},{value:"<code>os.version()</code>",id:"osversion",children:[]},{value:"<code>os.device()</code>",id:"osdevice",children:[]},{value:"<code>os.isCollaborative()</code>",id:"osiscollaborative",children:[]},{value:"<code>os.requestFullscreenMode()</code>",id:"osrequestfullscreenmode",children:[]},{value:"<code>os.exitFullscreenMode()</code>",id:"osexitfullscreenmode",children:[]}]},{value:"Server Actions",id:"server-actions",children:[{value:"<code>server.backupToGithub(auth)</code>",id:"serverbackuptogithubauth",children:[]},{value:"<code>server.backupAsDownload(target)</code>",id:"serverbackupasdownloadtarget",children:[]},{value:"<code>server.finishCheckout(options)</code>",id:"serverfinishcheckoutoptions",children:[]},{value:"<code>server.setupServer(server, botOrMod?)</code>",id:"serversetupserverserver-botormod",children:[]},{value:"<code>server.exportGpio(pin, mode)</code>",id:"serverexportgpiopin-mode",children:[]},{value:"<code>server.unexportGpio(pin, mode)</code>",id:"serverunexportgpiopin-mode",children:[]},{value:"<code>server.setGpio(pin, value)</code>",id:"serversetgpiopin-value",children:[]},{value:"<code>server.getGpio(pin)</code>",id:"servergetgpiopin",children:[]},{value:"<code>server.rpioInit(options)</code>",id:"serverrpioinitoptions",children:[]},{value:"<code>server.rpioExit()</code>",id:"serverrpioexit",children:[]},{value:"<code>server.rpioOpen(pin, mode, options)</code>",id:"serverrpioopenpin-mode-options",children:[]},{value:"<code>server.rpioMode(pin, mode, options)</code>",id:"serverrpiomodepin-mode-options",children:[]},{value:"<code>server.rpioRead(pin)</code>",id:"serverrpioreadpin",children:[]},{value:"<code>server.rpioReadSequence(pin, length)</code>",id:"serverrpioreadsequencepin-length",children:[]},{value:"<code>server.rpioWrite(pin, value)</code>",id:"serverrpiowritepin-value",children:[]},{value:"<code>server.rpioWriteSequence(pin, buffer)</code>",id:"serverrpiowritesequencepin-buffer",children:[]},{value:"<code>server.rpioReadpad(group, bitmask)</code>",id:"serverrpioreadpadgroup-bitmask",children:[]},{value:"<code>server.rpioWritepad(group, slew?, hysteresis?, current?)</code>",id:"serverrpiowritepadgroup-slew-hysteresis-current",children:[]},{value:"<code>server.rpioPud(pin, state)</code>",id:"serverrpiopudpin-state",children:[]},{value:"<code>server.rpioPoll(pin, cb, options)</code>",id:"serverrpiopollpin-cb-options",children:[]},{value:"<code>server.rpioClose(pin, options)</code>",id:"serverrpioclosepin-options",children:[]},{value:"<code>server.rpioI2CBegin()</code>",id:"serverrpioi2cbegin",children:[]},{value:"<code>server.rpioI2CSetSlaveAddress()</code>",id:"serverrpioi2csetslaveaddress",children:[]},{value:"<code>server.rpioI2CSetBaudRate(rate)</code>",id:"serverrpioi2csetbaudraterate",children:[]},{value:"<code>server.rpioI2CSetClockDivider(rate)</code>",id:"serverrpioi2csetclockdividerrate",children:[]},{value:"<code>server.rpioI2CRead(rx, length?)</code>",id:"serverrpioi2creadrx-length",children:[]},{value:"<code>server.rpioI2CWrite(tx, length?)</code>",id:"serverrpioi2cwritetx-length",children:[]},{value:"<code>server.rpioI2CEnd()</code>",id:"serverrpioi2cend",children:[]},{value:"<code>server.rpioPWMSetClockDivider(rate)</code>",id:"serverrpiopwmsetclockdividerrate",children:[]},{value:"<code>server.rpioPWMSetRange(pin, range)</code>",id:"serverrpiopwmsetrangepin-range",children:[]},{value:"<code>server.rpioPWMSetData(pin, width)</code>",id:"serverrpiopwmsetdatapin-width",children:[]},{value:"<code>server.rpioSPIBegin()</code>",id:"serverrpiospibegin",children:[]},{value:"<code>server.rpioSPIChipSelect(value)</code>",id:"serverrpiospichipselectvalue",children:[]},{value:"<code>server.rpioSPISetCSPolarity(value, polarity)</code>",id:"serverrpiospisetcspolarityvalue-polarity",children:[]},{value:"<code>server.rpioSPISetClockDivider(rate)</code>",id:"serverrpiospisetclockdividerrate",children:[]},{value:"<code>server.rpioSPISetDataMode(mode)</code>",id:"serverrpiospisetdatamodemode",children:[]},{value:"<code>server.rpioSPITransfer(tx)</code>",id:"serverrpiospitransfertx",children:[]},{value:"<code>server.rpioSPIWrite(tx)</code>",id:"serverrpiospiwritetx",children:[]},{value:"<code>server.rpioSPIEnd()</code>",id:"serverrpiospiend",children:[]},{value:"<code>server.serialConnect()</code>",id:"serverserialconnect",children:[]},{value:"<code>server.serialStream()</code>",id:"serverserialstream",children:[]},{value:"<code>server.serialOpen()</code>",id:"serverserialopen",children:[]},{value:"<code>server.serialUpdate()</code>",id:"serverserialupdate",children:[]},{value:"<code>server.serialWrite()</code>",id:"serverserialwrite",children:[]},{value:"<code>server.serialRead()</code>",id:"serverserialread",children:[]},{value:"<code>server.serialClose()</code>",id:"serverserialclose",children:[]},{value:"<code>server.serialFlush()</code>",id:"serverserialflush",children:[]},{value:"<code>server.serialDrain()</code>",id:"serverserialdrain",children:[]},{value:"<code>server.serialPause()</code>",id:"serverserialpause",children:[]},{value:"<code>server.serialResume()</code>",id:"serverserialresume",children:[]},{value:"<code>server.browseHistory()</code>",id:"serverbrowsehistory",children:[]},{value:"<code>server.markHistory(options)</code>",id:"servermarkhistoryoptions",children:[]},{value:"<code>server.restoreHistoryMark(mark)</code>",id:"serverrestorehistorymarkmark",children:[]},{value:"<code>server.restoreHistoryMarkToServer(mark, server)</code>",id:"serverrestorehistorymarktoservermark-server",children:[]},{value:"<code>server.shell(script)</code>",id:"servershellscript",children:[]},{value:"<code>server.loadFile(path, options?)</code>",id:"serverloadfilepath-options",children:[]},{value:"<code>server.saveFile(path, data, options?)</code>",id:"serversavefilepath-data-options",children:[]},{value:"<code>server.serverRemoteCount(server?)</code>",id:"serverserverremotecountserver",children:[]},{value:"<code>server.totalRemoteCount()</code>",id:"servertotalremotecount",children:[]},{value:"<code>server.servers()</code>",id:"serverservers",children:[]},{value:"<code>server.serverStatuses()</code>",id:"serverserverstatuses",children:[]},{value:"<code>server.remotes()</code>",id:"serverremotes",children:[]}]},{value:"Math Actions",id:"math-actions",children:[{value:"<code>math.sum(list)</code>",id:"mathsumlist",children:[]},{value:"<code>math.avg(list)</code>",id:"mathavglist",children:[]},{value:"<code>math.sqrt(value)</code>",id:"mathsqrtvalue",children:[]},{value:"<code>math.abs(number)</code>",id:"mathabsnumber",children:[]},{value:"<code>math.stdDev(list)</code>",id:"mathstddevlist",children:[]},{value:"<code>math.randomInt(min, max)</code>",id:"mathrandomintmin-max",children:[]},{value:"<code>math.random(min, max)</code>",id:"mathrandommin-max",children:[]},{value:"<code>math.getForwardDirection(rotation)</code>",id:"mathgetforwarddirectionrotation",children:[]},{value:"<code>math.intersectPlane(origin, direction)</code>",id:"mathintersectplaneorigin-direction",children:[]},{value:"<code>math.getAnchorPointOffset(anchorPoint)</code>",id:"mathgetanchorpointoffsetanchorpoint",children:[]},{value:"<code>math.addVectors(...vectors)</code>",id:"mathaddvectorsvectors",children:[]},{value:"<code>math.subtractVectors(...vectors)</code>",id:"mathsubtractvectorsvectors",children:[]},{value:"<code>math.negateVector(vector)</code>",id:"mathnegatevectorvector",children:[]},{value:"<code>math.scaleVector(vector, scale)</code>",id:"mathscalevectorvector-scale",children:[]},{value:"<code>math.areClose(first, second)</code>",id:"mathareclosefirst-second",children:[]}]},{value:"Mod Actions",id:"mod-actions",children:[{value:"<code>mod.cameraPositionOffset(position)</code>",id:"modcamerapositionoffsetposition",children:[]},{value:"<code>mod.cameraRotationOffset(rotation)</code>",id:"modcamerarotationoffsetrotation",children:[]}]},{value:"Crypto Actions",id:"crypto-actions",children:[{value:"<code>crypto.sha256(...data)</code>",id:"cryptosha256data",children:[]},{value:"<code>crypto.sha512(...data)</code>",id:"cryptosha512data",children:[]},{value:"<code>crypto.hmacSha256(key, ...data)</code>",id:"cryptohmacsha256key-data",children:[]},{value:"<code>crypto.hmacSha512(key, ...data)</code>",id:"cryptohmacsha512key-data",children:[]},{value:"<code>crypto.encrypt(secret, data)</code>",id:"cryptoencryptsecret-data",children:[]},{value:"<code>crypto.decrypt(secret, data)</code>",id:"cryptodecryptsecret-data",children:[]},{value:"<code>crypto.isEncrypted(cyphertext)</code>",id:"cryptoisencryptedcyphertext",children:[]},{value:"<code>crypto.keypair(secret)</code>",id:"cryptokeypairsecret",children:[]},{value:"<code>crypt.sign(keypair, secret, data)</code>",id:"cryptsignkeypair-secret-data",children:[]},{value:"<code>crypto.verify(keypair, signature, data)</code>",id:"cryptoverifykeypair-signature-data",children:[]},{value:"<code>crypto.asymmetric.keypair(secret)</code>",id:"cryptoasymmetrickeypairsecret",children:[]},{value:"<code>crypto.asymmetric.isKeypair(keypair)</code>",id:"cryptoasymmetriciskeypairkeypair",children:[]},{value:"<code>crypto.asymmetric.encrypt(keypair, data)</code>",id:"cryptoasymmetricencryptkeypair-data",children:[]},{value:"<code>crypto.asymmetric.decrypt(keypair, secret, data)</code>",id:"cryptoasymmetricdecryptkeypair-secret-data",children:[]},{value:"<code>crypto.asymmetric.isEncrypted(cyphertext)</code>",id:"cryptoasymmetricisencryptedcyphertext",children:[]},{value:"<code>crypto.createCertificate(certificate, secret, keypair)</code>",id:"cryptocreatecertificatecertificate-secret-keypair",children:[]},{value:"<code>crypto.signTag(certificate, secret, bot, tag)</code>",id:"cryptosigntagcertificate-secret-bot-tag",children:[]},{value:"<code>crypto.verifyTag(bot, tag)</code>",id:"cryptoverifytagbot-tag",children:[]},{value:"<code>crypto.revokeCertificate(certificate, secret, signer?)</code>",id:"cryptorevokecertificatecertificate-secret-signer",children:[]}]},{value:"Admin Actions",id:"admin-actions",children:[{value:"<code>adminSpace.unlock(password)</code>",id:"adminspaceunlockpassword",children:[]},{value:"<code>adminSpace.setPassword(oldPassword, newPassword)</code>",id:"adminspacesetpasswordoldpassword-newpassword",children:[]}]},{value:"Custom Portal Actions",id:"custom-portal-actions",children:[{value:"<code>portal.open(portalId, bot, tag?, options?)</code>",id:"portalopenportalid-bot-tag-options",children:[]},{value:"<code>portal.registerPrefix(prefix, options?)</code>",id:"portalregisterprefixprefix-options",children:[]},{value:"<code>portal.buildBundle(tag)</code>",id:"portalbuildbundletag",children:[]}]},{value:"Experimental Actions",id:"experimental-actions",children:[{value:"<code>experiment.localFormAnimation(bot, animation)</code>",id:"experimentlocalformanimationbot-animation",children:[]},{value:"<code>experiment.localPositionTween(bot, dimension, position, easing?)</code>",id:"experimentlocalpositiontweenbot-dimension-position-easing",children:[]},{value:"<code>experiment.localRotationTween(bot, dimension, rotation, easing?)</code>",id:"experimentlocalrotationtweenbot-dimension-rotation-easing",children:[]},{value:"<code>experiment.getAnchorPointPosition(bot, dimension, anchorPoint)</code>",id:"experimentgetanchorpointpositionbot-dimension-anchorpoint",children:[]},{value:"<code>experiment.beginRecording(options?)</code>",id:"experimentbeginrecordingoptions",children:[]},{value:"<code>experiment.endRecording()</code>",id:"experimentendrecording",children:[]},{value:"<code>experiment.beginAudioRecording()</code>",id:"experimentbeginaudiorecording",children:[]},{value:"<code>experiment.endAudioRecording()</code>",id:"experimentendaudiorecording",children:[]},{value:"<code>experiment.getVoices()</code>",id:"experimentgetvoices",children:[]},{value:"<code>experiment.speakText(text, options?)</code>",id:"experimentspeaktexttext-options",children:[]},{value:"<code>perf.getStats()</code>",id:"perfgetstats",children:[]}]}],b={rightToc:c};function p(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"data-actions"},"Data Actions"),Object(i.b)("h3",{id:"createmods"},Object(i.b)("inlineCode",{parentName:"h3"},"create(...mods)")),Object(i.b)("p",null,"Creates a new bot or combination of bots with the given mods. Also triggers ",Object(i.b)(r.TagLink,{tag:"@onCreate",mdxType:"TagLink"})," on all the created bots.\nBy default, bots are created with a unique ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"}),", ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the current ",Object(i.b)("inlineCode",{parentName:"p"},"bot.id"),", and ",Object(i.b)(r.TagLink,{tag:"space",mdxType:"TagLink"})," set to ",Object(i.b)("inlineCode",{parentName:"p"},"shared"),".\nBots must be created with at least one tag. If ",Object(i.b)("inlineCode",{parentName:"p"},"create()")," tries to make a bot with zero tags then an error will be thrown."),Object(i.b)("p",null,"If ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," references a non-existent bot or a bot with a different ",Object(i.b)(r.TagLink,{tag:"space",mdxType:"TagLink"})," than the created bot, then ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," will be set to ",Object(i.b)("inlineCode",{parentName:"p"},"null"),"."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a mod that should be applied to the new bot(s).\nIf no parameters are specified, then the new bot will have its ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," set to ",Object(i.b)("inlineCode",{parentName:"p"},"bot.id")," and ",Object(i.b)(r.TagLink,{tag:"space",mdxType:"TagLink"})," set to ",Object(i.b)("inlineCode",{parentName:"p"},"shared"),".\nIf an array of mods is used for a parameter, then one bot will be created for ",Object(i.b)("em",{parentName:"p"},"each unique combination of mods"),"."),Object(i.b)("h4",{id:"examples"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a red bot:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myRedBot = create({\n    color: "red"\n});\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Create a parent and a child bot:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myParentBot = create({\n    creator: null,\n    label: "Parent"\n});\nlet myChildBot = create({\n    creator: getID(myParentBot),\n    label: "Child"\n});\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Create a red bot in the ",Object(i.b)("inlineCode",{parentName:"li"},"tempLocal")," space:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myBot = create({ space: "tempLocal", color: "red" });\n')),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Create a bot from multiple mods:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// myBot is placed in the "myDimension" dimension and is colored green\nlet myBot = create({ myDimension: true }, {\n    color: "green"\n});\n')),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},"Create a red bot and a blue bot:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let [myRedBot, myBlueBot] = create({ creator: null}, [\n    {\n        "color": "red"\n    },\n    {\n        "color": "blue"\n    }\n]);\n')),Object(i.b)("h3",{id:"destroybot"},Object(i.b)("inlineCode",{parentName:"h3"},"destroy(bot)")),Object(i.b)("p",null,"Removes the given bot, list of bots, or bot by ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," and triggers ",Object(i.b)(r.TagLink,{tag:"@onDestroy",mdxType:"TagLink"})," for each of the destroyed bots."),Object(i.b)("p",null,"Note that only destroyable bots will be destroyed.\nBots that have ",Object(i.b)(r.TagLink,{tag:"destroyable",mdxType:"TagLink"})," set to ",Object(i.b)("inlineCode",{parentName:"p"},"false")," will not be destroyed."),Object(i.b)("p",null,"Also note that all bots that have ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," of a destroyed bot will also be destroyed (unless they are not destroyable).\nThis happens recursively until there are no more bots to destroy."),Object(i.b)("h4",{id:"examples-1"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Destroying a single bot:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy a single bot that has #name set to "bob"\ndestroy(getBot("#name", "bob"));\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Destroying a list of bots:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy all the bots that have #color set to "red"\ndestroy(getBots("#color", "red"));\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Destroying a bot by its id")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy the bot with the #id: "config"\ndestroy("config");\n')),Object(i.b)("h3",{id:"applymodbot-mods"},Object(i.b)("inlineCode",{parentName:"h3"},"applyMod(bot, ...mods)")),Object(i.b)("p",null,"Applies the given mods to the given bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that the mods should be applied to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the mods that should be applied to the bot. If two mods have the same tag, then the mod that is last in the list will win."),Object(i.b)("h4",{id:"examples-2"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Set the "test" tag and "name" tag on a bot.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'applyMod(bot, {\n    test: true,\n    name: "bob"\n});\n')),Object(i.b)("h3",{id:"subtractmodsbot-mods"},Object(i.b)("inlineCode",{parentName:"h3"},"subtractMods(bot, ...mods)")),Object(i.b)("p",null,"Removes the tags contained in the given mod(s) from the given bot or mod."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that the tags should be removed from."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the bots or mods that contain the tags which should be removed from the original bot."),Object(i.b)("h4",{id:"examples-3"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Remove a mod from this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const mod = {\n    color: 'red',\n    name: 'bob'\n};\n\nsubtractMods(this, mod);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Remove multiple mods from this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"subtractMods(this, {\n    color: 'red'\n}, {\n    name: 'bob'\n});\n")),Object(i.b)("h3",{id:"removetagsbot-tagsection"},Object(i.b)("inlineCode",{parentName:"h3"},"removeTags(bot, tagSection)")),Object(i.b)("p",null,"Removes all the tags from the given bot that match the given tag section."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that should have the tags removed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a string or regex that specifies which tags to remove.\nIf given a string, then all the tags that start with the given string will be removed.\nIf given a regex, then all the tags which match the regex will be removed."),Object(i.b)("h4",{id:"examples-4"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Remove tags started with ",Object(i.b)("inlineCode",{parentName:"li"},"abc")," from the ",Object(i.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'removeTags(this, "abc");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Remove tags named ",Object(i.b)("inlineCode",{parentName:"li"},"hello")," using a case-insensitive regex from the ",Object(i.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"removeTags(this, /^hello$/gi)\n")),Object(i.b)("h3",{id:"renametagbot-originaltag-newtag"},Object(i.b)("inlineCode",{parentName:"h3"},"renameTag(bot, originalTag, newTag)")),Object(i.b)("p",null,"Renames the given original tag on the given bot or list of bots to the given new tag.\nIf the original tag does not exist on the bot, then no changes will take place.\nIf the new tag already exists on the bot, then it will be overwritten with the contents of the original tag."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that should have the tag renamed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the tag that should be renamed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the new name that the tag should have."),Object(i.b)("h4",{id:"examples-5"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Rename the ",Object(i.b)("inlineCode",{parentName:"li"},"auxColor")," tag to ",Object(i.b)("inlineCode",{parentName:"li"},"color"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'renameTag(this, "auxColor", "color");\n')),Object(i.b)("h3",{id:"changestatebot-statename-groupname"},Object(i.b)("inlineCode",{parentName:"h3"},"changeState(bot, stateName, groupName?)")),Object(i.b)("p",null,"Changes the state that the given bot occupies in the given group.\nIf the state was changed, then the ",Object(i.b)(r.TagLink,{tag:"@[groupName][stateName]OnExit",mdxType:"TagLink"})," and ",Object(i.b)(r.TagLink,{tag:"@[groupName][stateName]OnEnter",mdxType:"TagLink"})," whispers are sent to the ",Object(i.b)("inlineCode",{parentName:"p"},"bot"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot whose state should be changed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the value that should be set on the bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the name of the tag that should be changed on the bot. If not specified, then the ",Object(i.b)("inlineCode",{parentName:"p"},"#state")," tag will be used."),Object(i.b)("h4",{id:"examples-6"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Change the ",Object(i.b)("inlineCode",{parentName:"li"},"#state"),' of the bot to "Running".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Triggers @stateRunningOnEnter\nchangeState(bot, "Running");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Change the ",Object(i.b)("inlineCode",{parentName:"li"},"#playbackState"),' of the bot to "Playing".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Triggers @playbackStatePlayingOnEnter\nchangeState(bot, "Playing", "playbackState");\n')),Object(i.b)("h3",{id:"getbotsfilters"},Object(i.b)("inlineCode",{parentName:"h3"},"getBots(..filters)")),Object(i.b)("p",null,"Gets an array of bots that match all of the given filter(s). The returned array is sorted alphabetically by the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," tag."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#bot-filters"}),"bot filter"),". If no filters are specified, then all bots in the server are returned.\nIf multiple filters are specified, then only the bots that match all of the filters are returned."),Object(i.b)("h4",{id:"examples-7"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#test"));\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find all bots with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob" ',Object(i.b)("em",{parentName:"li"},"and"),' in the "people" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#name", "bob"), inDimension("people"));\n')),Object(i.b)("h3",{id:"getbotstag-value"},Object(i.b)("inlineCode",{parentName:"h3"},"getBots(tag, value?)")),Object(i.b)("p",null,"Gets an array of bots that match the given tag and value. The returned array is sorted alphabetically by the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," tag."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag. Bots that have this tag will be included as long as they also match the second parameter."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the value the tag should match. If not specified, then all bots with the tag will be included.\nIf specified, then only bots that have the same tag and value will be included. If you specify a function as the value, then it will be used to match tag values."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"})," with ",Object(i.b)(r.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})),Object(i.b)("h4",{id:"examples-8"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all the bots with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#name", "bob");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find all bots with a height larger than 2.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#height", height => height > 2);\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#test");\n')),Object(i.b)("h3",{id:"getbotfilters"},Object(i.b)("inlineCode",{parentName:"h3"},"getBot(...filters)")),Object(i.b)("p",null,"Get the first bot that matches all of the given filter(s). If multiple bots match the given filter(s), then bots are sorted alphabetically by the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," tag and the first one is returned. If no bots match the given filter(s), then ",Object(i.b)("inlineCode",{parentName:"p"},"undefined")," is returned."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"#bot-filters"}),"bot filter"),". If no filters are specified, then the first bot in the server is returned.\nIf multiple filters are specified, then the first bot that matches all of the filters is returned."),Object(i.b)("h4",{id:"examples-9"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Find a bot with the "test" tag.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot(byTag("#test"));\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find a bot with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob" ',Object(i.b)("em",{parentName:"li"},"and"),' in the "people" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot(byTag("#name", "bob"), inDimension("people"));\n')),Object(i.b)("h3",{id:"getbottag-filter"},Object(i.b)("inlineCode",{parentName:"h3"},"getBot(tag, filter?)")),Object(i.b)("p",null,"Gets the first bot that matches the given tag and value. If multiple bots match the given tag and value, then bots are sorted alphabetically by the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," tag and the first one is returned. If no bots match the given tag and value, then ",Object(i.b)("inlineCode",{parentName:"p"},"undefined")," is returned."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag to search for."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the value the tag should match. If not specified, then the first bot with the tag will be returned.\nIf specified, then the first bot that has the same tag and value will be returned. If you specify a function as the value, then it will be used to match tag values."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"getBot(...filters)",mdxType:"ActionLink"})," with ",Object(i.b)(r.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})),Object(i.b)("h4",{id:"examples-10"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find the first bot with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#name", "bob");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find the first bot with a height larger than 2.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#height", height => height > 2);\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Find the first bot with the "test" tag.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#test");\n')),Object(i.b)("h3",{id:"getbottagvaluestag-filter"},Object(i.b)("inlineCode",{parentName:"h3"},"getBotTagValues(tag, filter?)")),Object(i.b)("p",null,"Gets a list of all the values in the server for the given tag. Optionally accepts a filter for the tag values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag to search for."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the filter that the tag values should match. If not specified, then all the tag values are included.\nIf it is a function, then it will be used to match values. Otherwise, only tags that match the value will be included."),Object(i.b)("h4",{id:"examples-11"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find the number of bots named bot and print it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfBobs = getBotTagValues("#name", "bob").length;\nos.toast(numberOfBobs);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find all the bot ages above ",Object(i.b)("inlineCode",{parentName:"li"},"10"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const agesOver10 = getBotTagValues("#age", age => age > 10);\n')),Object(i.b)("h3",{id:"getidbot"},Object(i.b)("inlineCode",{parentName:"h3"},"getID(bot)")),Object(i.b)("p",null,"Gets the ID of the given bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot whose ID should be retrieved.\nIf given a bot ID, then it will be returned. If given ",Object(i.b)("inlineCode",{parentName:"p"},"null")," or something that is not a bot, then ",Object(i.b)("inlineCode",{parentName:"p"},"null")," will be returned."),Object(i.b)("h4",{id:"examples-12"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the ID of the current bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let id = getID(bot);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the ID of a bot with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let id = getID(getBot("#name", "bob"));\n')),Object(i.b)("h3",{id:"getjsondata"},Object(i.b)("inlineCode",{parentName:"h3"},"getJSON(data)")),Object(i.b)("p",null,"Gets the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/JSON"}),"JSON")," representation of the given data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the data that should be ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Serialization"}),"cloned")," into the JSON format.\nIf given a bot, then the returned JSON will be able to be able to be converted back into a mod via ",Object(i.b)(r.ActionLink,{action:"getMod(bot)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-13"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Store a copy of a bot in a tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bob = getBot("#name", "bob");\ntags.savedBot = getJSON(bob);\n')),Object(i.b)("h3",{id:"getmodbot"},Object(i.b)("inlineCode",{parentName:"h3"},"getMod(bot)")),Object(i.b)("p",null,"Gets a mod for the given bot and list of tags. The returned mod will only contain tags that are contained in the given list."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or JSON string that should be cloned into a mod."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the tags that should be included in the returned mod.\nIf no other parameters are specified, then all tags are included.\nIf a parameter is a RegEx (",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"}),"Regular Expression"),"), then it will include all the tags that match the expression."),Object(i.b)("h4",{id:"examples-14"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get a mod with the current bot's tags.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = getMod(bot);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get a mod with only the ",Object(i.b)(r.TagLink,{tag:"color",mdxType:"TagLink"})," and ",Object(i.b)(r.TagLink,{tag:"label",mdxType:"TagLink"})," tags.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let mod = getMod(bot, "color", "label");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Get a mod with every tag that starts with "on".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = getMod(bot, /^on/g);\n")),Object(i.b)("h3",{id:"getbotpositionbot-dimension"},Object(i.b)("inlineCode",{parentName:"h3"},"getBotPosition(bot, dimension)")),Object(i.b)("p",null,"Gets the 3D position of the given bot in the given dimension."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID whose position should be retrieved."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the position should be retrieved for."),Object(i.b)("h4",{id:"examples-15"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the position of this bot in the ",Object(i.b)("inlineCode",{parentName:"li"},"home")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let position = getBotPosition(thisBot, "home");\n')),Object(i.b)("h3",{id:"uuid"},Object(i.b)("inlineCode",{parentName:"h3"},"uuid()")),Object(i.b)("p",null,"Creates a new UUID. Useful for generating a random identifier that is guaranteed to be unique."),Object(i.b)("h4",{id:"examples-16"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Generate a new UUID and toast it:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const id = uuid();\n\nos.toast(id);\n")),Object(i.b)("h2",{id:"web-actions"},"Web Actions"),Object(i.b)("h3",{id:"webhookoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"web.hook(options)")),Object(i.b)("p",null,"Sends a HTTP request using the given options."),Object(i.b)("p",null,"Returns a Promise that resolves with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"{\n    data: any,\n    status: number,\n    statusText: string,\n    headers: any\n}\n")),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The HTTP Method that the request should use.\n     */\n    method: string;\n\n    /**\n     * The URL that the request should be made to.\n     */\n    url: string;\n\n    /**\n     * The headers to include in the request.\n     */\n    headers?: {\n        [key: string]: string;\n    };\n\n    /**\n     * The data to send with the request.\n     */\n    data?: any;\n\n    /**\n     * The shout that should be made when the request finishes.\n     * This is for legacy code. New code should await the returned promise.\n     */\n    responseShout?: string;\n};\n")),Object(i.b)("h4",{id:"examples-17"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a HTTP GET request to ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com")," and toast the result.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const response = await web.hook({\n    method: 'GET',\n    url: 'https://example.com',\n});\n\nos.toast(response);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Send a HTTP PUT request to ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com")," with some data.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"web.hook({\n    method: 'PUT',\n    url: 'https://example.com',\n    data: {\n        some: 'data'\n    }\n});\n")),Object(i.b)("h3",{id:"webgeturl-options"},Object(i.b)("inlineCode",{parentName:"h3"},"web.get(url, options?)")),Object(i.b)("p",null,"Sends a HTTP GET request for the given URL using the given options."),Object(i.b)("p",null,"Returns a promise that resolves with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"{\n    data: any,\n    status: number,\n    statusText: string,\n    headers: any\n}\n")),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the URL that the request should be sent to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The headers to include in the request.\n     */\n    headers?: {\n        [key: string]: string;\n    };\n\n    /**\n     * The shout that should be made when the request finishes.\n     */\n    responseShout?: string;\n};\n")),Object(i.b)("h4",{id:"examples-18"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a HTTP GET request for ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com")," and toast the result.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const response = await web.get('https://example.com');\nos.toast(response);\n")),Object(i.b)("h3",{id:"webposturl-data-options"},Object(i.b)("inlineCode",{parentName:"h3"},"web.post(url, data?, options?)")),Object(i.b)("p",null,"Sends a HTTP POST request to the URL with the given data and using the given options."),Object(i.b)("p",null,"Returns a Promise that resolves with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"{\n    data: any,\n    status: number,\n    statusText: string,\n    headers: any\n}\n")),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the URL that the request should be sent to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the data that should be included in the request."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is an optional object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The headers to include in the request.\n     */\n    headers?: {\n        [key: string]: string;\n    };\n\n    /**\n     * The shout that should be made when the request finishes.\n     */\n    responseShout?: string;\n};\n")),Object(i.b)("h4",{id:"examples-19"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a HTTP POST request to ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com")," and toast the result.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const response = await web.post('https://example.com', {\n    some: 'data'\n});\n\nos.toast(response);\n")),Object(i.b)("h2",{id:"utility-actions"},"Utility Actions"),Object(i.b)("h3",{id:"animatetagbot-tag-options"},Object(i.b)("inlineCode",{parentName:"h3"},"animateTag(bot, tag, options)")),Object(i.b)("p",null,"Animates the tag on the given bot based on the specified parameters.\nReturns a promise that resolves when the animation is finished and throws an error when the animation is canceled.\nThis is useful for gradually changing a tag on a bot over time. For example, moving a bot from point A to point B without teleporting it."),Object(i.b)(r.ActionLink,{action:"animateTag(bot, tag, options)",mdxType:"ActionLink"})," is fully integrated with tag masks. This lets you animate tag values in the `tempLocal`, `local`, `player`, and `shared` spaces.",Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that the tag should be animated on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be animated."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," are the options that should be used to animate the tag.\nIf ",Object(i.b)("inlineCode",{parentName:"p"},"null")," is used, then any active animations for the tag on these bots will be canceled.\nIt should be an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n\n    /**\n     * The value that the animation should start at.\n     * If omitted, then the current tag value will be used.\n     */\n    fromValue?: number;\n\n    /**\n     * The value that the animation should end at.\n     */\n    toValue: number;\n\n    /**\n     * The number of seconds that the animation should take to complete.\n     */\n    duration: number;\n\n    /**\n     * The space that the tag should be animated in.\n     * If not specified, then \"tempLocal\" will be used.\n     * If set to false, then the bot will be edited instead of using tag masks.\n     * Additionally, if the specified space is the same as the space the bot lives in\n     * then the bot will be edited directly.\n     */\n    tagMaskSpace?: 'tempLocal' | 'local' | 'tempShared' | 'shared' | false;\n\n    /**\n     * The options for easing.\n     * Can be an \"easing type\" or an object that specifies the type and mode.\n     * If an easing type is specified, then \"inout\" mode is used.\n     * If omitted, then \"linear\" \"inout\" is used.\n     */\n    easing?: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic' \n            | {\n        /**\n         * The type of easing.\n        */\n        type: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic';\n\n        /**\n         * Whether to apply the easing at the\n         * start (in), end (out), or start and end (inout) of the tween.\n         */\n        mode: 'in' | 'out' | 'inout';\n    }\n};\n")),Object(i.b)("h4",{id:"examples-20"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Animate the ",Object(i.b)("inlineCode",{parentName:"li"},"#count")," tag from 0 to 1 over 5 seconds.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await animateTag(bot, "count", {\n    fromValue: 0,\n    toValue: 1,\n    duration: 5\n});\n\nos.toast("Animation finished!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Run 2 animations in sequence.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await animateTag(bot, "homeX", {\n    fromValue: 0,\n    toValue: 5,\n    duration: 2\n});\n\nawait animateTag(bot, "homeY", {\n    fromValue: 0,\n    toValue: 5,\n    duration: 2\n});\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Run an animation while the ",Object(i.b)("inlineCode",{parentName:"li"},"#loop")," tag is true.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'while(tags.loop) {\n    await animateTag(bot, "homeX", {\n        fromValue: 0,\n        toValue: 5,\n        duration: 2\n    });\n}\n')),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},'Run an animation with a "bouncy" easing mode.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await animateTag(bot, "homeX", {\n    fromValue: 0,\n    toValue: 5,\n    duration: 2,\n    easing: {\n        mode: "elastic",\n        type: "out"\n    }\n});\n')),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},"Animate a tag in ",Object(i.b)("inlineCode",{parentName:"li"},"tempShared")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await animateTag(bot, \"homeX\", {\n    fromValue: 0,\n    toValue: 5,\n    duration: 2,\n    tagMaskSpace: 'tempShared'\n});\n")),Object(i.b)("ol",{start:6},Object(i.b)("li",{parentName:"ol"},"Cancel animations on the ",Object(i.b)("inlineCode",{parentName:"li"},"#homeX")," tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'animateTag(bot, "homeX", {\n    fromValue: 0,\n    toValue: 5,\n    duration: 2\n}).then(() => {\n    os.toast("Animation Finished!");\n}).catch(() => {\n    os.toast("Animation Canceled!");\n});\n\nawait os.sleep(500);\n\nanimateTag(bot, "homeX", null);\n')),Object(i.b)("h3",{id:"animatetagbot-options"},Object(i.b)("inlineCode",{parentName:"h3"},"animateTag(bot, options)")),Object(i.b)("p",null,"Animates multiple tags on the given bot based on the specified parameters."),Object(i.b)("p",null,"This works similarly to ",Object(i.b)(r.ActionLink,{action:"animateTag(bot, tag, options)",mdxType:"ActionLink"})," but instead of providing a tag name, you instead provide an object for the ",Object(i.b)("inlineCode",{parentName:"p"},"fromValue")," and ",Object(i.b)("inlineCode",{parentName:"p"},"toValue")," options which contains the tags that should be animated."),Object(i.b)("p",null,"Returns a promise that resolves when the animation is finished and throws an error when the animation is canceled.\nThis is useful for gradually changing a set of tags on a bot over time. For example, moving a bot from point A to point B without teleporting it."),Object(i.b)("p",null,"Unlike calling ",Object(i.b)(r.ActionLink,{action:"animateTag(bot, tag, options)",mdxType:"ActionLink"})," multiple times, animations started with this function are grouped together.\nThis means that canceling one animation in the group will also cancel the others."),Object(i.b)("p",null,"This function is fully integrated with tag masks.\nThis lets you animate tag values in the ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal"),", ",Object(i.b)("inlineCode",{parentName:"p"},"local"),", ",Object(i.b)("inlineCode",{parentName:"p"},"player"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"shared")," spaces."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that the tag should be animated on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," are the options that should be used to animate the tag.\nIt should be an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n\n    /**\n     * The tags values that the animation should start at.\n     * Each property should be the name of a tag that should be animated.\n     * The values should be the starting values for the tags.\n     */\n    fromValue: object;\n\n    /**\n     * The tag values that the animation should end at.\n     * Each property should be the name of a tag that should be animated.\n     * The values should be the starting values for the tags.\n     */\n    toValue: object;\n\n    /**\n     * The number of seconds that the animation should take to complete.\n     */\n    duration: number;\n\n    /**\n     * The space that the tag should be animated in.\n     * If not specified, then \"tempLocal\" will be used.\n     * If set to false, then the bot will be edited instead of using tag masks.\n     * Additionally, if the specified space is the same as the space the bot lives in\n     * then the bot will be edited directly.\n     */\n    tagMaskSpace?: 'tempLocal' | 'local' | 'tempShared' | 'shared' | false;\n\n    /**\n     * The options for easing.\n     * Can be an \"easing type\" or an object that specifies the type and mode.\n     * If an easing type is specified, then \"inout\" mode is used.\n     * If omitted, then \"linear\" \"inout\" is used.\n     */\n    easing?: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic' \n            | {\n        /**\n         * The type of easing.\n        */\n        type: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic';\n\n        /**\n         * Whether to apply the easing at the\n         * start (in), end (out), or start and end (inout) of the tween.\n         */\n        mode: 'in' | 'out' | 'inout';\n    }\n};\n")),Object(i.b)("h4",{id:"examples-21"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Animate the ",Object(i.b)("inlineCode",{parentName:"li"},"#homeX")," and",Object(i.b)("inlineCode",{parentName:"li"},"#homeY")," tags from 0 to 1 over 5 seconds.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await animateTag(bot, {\n    fromValue: {\n        homeX: 0,\n        homeY: 0,\n    },\n    toValue: {\n        homeX: 1,\n        homeY: 1\n    },\n    duration: 5\n});\n\nos.toast("Animation finished!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Animate tags in ",Object(i.b)("inlineCode",{parentName:"li"},"tempShared")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await animateTag(bot, {\n    fromValue: {\n        homeX: 0,\n        homeY: 0,\n    },\n    toValue: {\n        homeX: 5,\n        homeY: 5\n    },\n    duration: 2,\n    tagMaskSpace: 'tempShared'\n});\n")),Object(i.b)("h3",{id:"clearanimationsbot-tag"},Object(i.b)("inlineCode",{parentName:"h3"},"clearAnimations(bot, tag?)")),Object(i.b)("p",null,"Cancels the animations that are running on the given bot(s).\nIf a tag is specified then only animations for the given tag will be canceled."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that should cancel their animations."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the tag or list of tags that the animations should be canceled for."),Object(i.b)("h4",{id:"examples-22"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Cancel all animations on a bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"clearAnimations(bot);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Cancel animations for ",Object(i.b)("inlineCode",{parentName:"li"},"#myTag")," on a bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"clearAnimations(bot, 'myTag');\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Cancel animations on all bots.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"clearAnimations(getBots());\n")),Object(i.b)("h3",{id:"settagbot-tag-value"},Object(i.b)("inlineCode",{parentName:"h3"},"setTag(bot, tag, value)")),Object(i.b)("p",null,"Sets the given tag to the given value on the given bot, list of bots, or mod."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot, list of bots, or mod that the tag should be set on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be changed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the value that should be placed into the tag(s)."),Object(i.b)("h4",{id:"examples-23"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set a bot's ",Object(i.b)(r.TagLink,{tag:"color",mdxType:"TagLink"})," to ",Object(i.b)("inlineCode",{parentName:"li"},"green"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'setTag(this, "#color", "green");\n')),Object(i.b)("h3",{id:"gettagbot-tag"},Object(i.b)("inlineCode",{parentName:"h3"},"getTag(bot, tag)")),Object(i.b)("p",null,"Gets the given tag value from the given bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that the tag should be retrieved from."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be retrieved."),Object(i.b)("h4",{id:"examples-24"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the ",Object(i.b)(r.TagLink,{tag:"color",mdxType:"TagLink"})," tag from ",Object(i.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const color = getTag(this, "#color");\n')),Object(i.b)("h3",{id:"settagmaskbot-tag-value-space"},Object(i.b)("inlineCode",{parentName:"h3"},"setTagMask(bot, tag, value, space?)")),Object(i.b)("p",null,"Sets the given tag mask to the given value on the given bot or list of bots.\nIf a space is specified, then the tag mask will be set inside that space."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that the tag mask should be set on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be changed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the value that should be placed into the tag(s)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the space that the tag mask should exist in.\nIf omitted, then the tag mask will be created in the ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal")," space."),Object(i.b)("h4",{id:"examples-25"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set a bot's ",Object(i.b)(r.TagLink,{tag:"color",mdxType:"TagLink"})," to ",Object(i.b)("inlineCode",{parentName:"li"},"green"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'setTagMask(this, "#color", "green");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Set a bot's ",Object(i.b)(r.TagLink,{tag:"color",mdxType:"TagLink"})," to ",Object(i.b)("inlineCode",{parentName:"li"},"green")," in the ",Object(i.b)("inlineCode",{parentName:"li"},"local")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'setTagMask(this, "#color", "green", "local");\n')),Object(i.b)("h3",{id:"cleartagmasksbot-space"},Object(i.b)("inlineCode",{parentName:"h3"},"clearTagMasks(bot, space?)")),Object(i.b)("p",null,"Clears the tag masks on the given bot or list of bots.\nIf a space is specified, then only the tag masks in that space will be deleted."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that the tag mask should be set on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the space that the tag mask should exist in.\nIf omitted, then the tag masks in all spaces will be deleted."),Object(i.b)("h4",{id:"examples-26"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Clear all tag masks on a bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"clearTagMasks(this);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Clear all tag masks in the local space/")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'clearTagMasks(this, "local");\n')),Object(i.b)("h3",{id:"inserttagtextbot-tag-index-text"},Object(i.b)("inlineCode",{parentName:"h3"},"insertTagText(bot, tag, index, text)")),Object(i.b)("p",null,"Inserts the given text into the tag at the given index.\nUseful for editing the text in a tag without interrupting other players that are editing the same tag.\nReturns the resulting raw tag value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the zero-based index that the text should be inserted at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is the string of text that should be inserted."),Object(i.b)("h4",{id:"examples-27"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add some text to the end of a tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'insertTagText(bot, "myTag", tags.myTag.length, "xyz");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Add some text to the beginning of a tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'insertTagText(bot, "myTag", 0, "abc");\n')),Object(i.b)("h3",{id:"inserttagmasktextbot-tag-index-text-space"},Object(i.b)("inlineCode",{parentName:"h3"},"insertTagMaskText(bot, tag, index, text, space?)")),Object(i.b)("p",null,"Inserts the given text into the tag mask at the given index.\nUseful for editing the text in a tag without interrupting other players that are editing the same tag.\nIf a space is specified, then only the tag mask in that space will be changed."),Object(i.b)("p",null,"Returns the resulting raw tag value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the zero-based index that the text should be inserted at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is the string of text that should be inserted."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fifth parameter")," is the space that the tag mask is in. If omitted, then the ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal")," space will be used."),Object(i.b)("h4",{id:"examples-28"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add some text to the end of a tag mask.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'insertTagMaskText(bot, "myTag", tags.myTag.length, "xyz");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Add some text to the beginning of a tag mask that is in the ",Object(i.b)("inlineCode",{parentName:"li"},"local")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'insertTagMaskText(bot, "myTag", 0, "abc", "local");\n')),Object(i.b)("h3",{id:"deletetagtextbot-tag-index-count"},Object(i.b)("inlineCode",{parentName:"h3"},"deleteTagText(bot, tag, index, count)")),Object(i.b)("p",null,"Deletes the specified number of characters from the given tag at the given index.\nUseful for editing the text in a tag without interrupting other players that are editing the same tag.\nReturns the resulting raw tag value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the zero-based index that the text should be deleted at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is the number of characters that should be deleted."),Object(i.b)("h4",{id:"examples-29"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Delete the last two characters from a tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'deleteTagText(bot, "myTag", tags.myTag.length - 2, 2);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Delete the first 3 characters from a tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'deleteTagText(bot, "myTag", 0, 3);\n')),Object(i.b)("h3",{id:"deletetagmasktextbot-tag-index-count-space"},Object(i.b)("inlineCode",{parentName:"h3"},"deleteTagMaskText(bot, tag, index, count, space?)")),Object(i.b)("p",null,"Deletes the specified number of characters from the given tag mask at the given index.\nUseful for editing the text in a tag without interrupting other players that are editing the same tag.\nIf a space is specified, then only the tag mask in that space will be changed."),Object(i.b)("p",null,"Returns the resulting raw tag value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the zero-based index that the text should be deleted at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is the number of characters that should be deleted."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fifth parameter")," is the space that the tag mask is in. If omitted, then the ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal")," space will be used."),Object(i.b)("h4",{id:"examples-30"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Delete the last two characters from a tag mask.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'deleteTagText(bot, "myTag", tags.myTag.length - 2, 2);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Delete the first 3 characters from a tag mask in the ",Object(i.b)("inlineCode",{parentName:"li"},"local")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'deleteTagText(bot, "myTag", 0, 3, "local");\n')),Object(i.b)("h2",{id:"bot-filters"},"Bot Filters"),Object(i.b)("h3",{id:"bytagtag-value"},Object(i.b)("inlineCode",{parentName:"h3"},"byTag(tag, value?)")),Object(i.b)("p",null,"Creates a bot filter that includes bots that have the given tag that matches the given value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag. Bots that have this tag will be included as long as they also match the second parameter."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the value that the tag should match. If not specified, then all bots with the tag will be included.\nIf specified, then only bots that have the same tag value will be included. If you specify a function as the value, then it will be used to match tag values."),Object(i.b)("h4",{id:"examples-31"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all the bots with ",Object(i.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#name", "bob"));\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Find all bots with a height larger than 2.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#height", height => height > 2));\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#test"));\n')),Object(i.b)("h3",{id:"indimensiondimension"},Object(i.b)("inlineCode",{parentName:"h3"},"inDimension(dimension)")),Object(i.b)("p",null,"Creates a bot filter that includes bots that are in the given dimension. That is, they have the given tag set to ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the dimension."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})," with the `value` parameter set to `true`."),Object(i.b)("h4",{id:"examples-32"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Find all the bots in the "test" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(inDimension("test"));\n')),Object(i.b)("h3",{id:"atpositiondimension-x-y"},Object(i.b)("inlineCode",{parentName:"h3"},"atPosition(dimension, x, y)")),Object(i.b)("p",null,"Creates a bot filter that includes bots that are in the given dimension and at the given X and Y position."),Object(i.b)("p",null,"When this filter is used with ",Object(i.b)(r.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"}),", the returned bots are sorted in the same order that they are stacked.\nThis means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they're stackable)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the dimension."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the X position. That is, the left-right position of the bots in the dimension."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the Y position. That is, the forward-backward position of the bots in the dimension."),Object(i.b)("h4",{id:"examples-33"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Find all the bots at (1, 2) in the "test" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(atPosition("test", 1, 2));\n')),Object(i.b)("h3",{id:"instackbot-dimension"},Object(i.b)("inlineCode",{parentName:"h3"},"inStack(bot, dimension)")),Object(i.b)("p",null,"Creates a bot filter that includes bots in the same stack as the given bot. The given bot will always be included by this filter as long the given bot is in the given dimension."),Object(i.b)("p",null,"When this filter is used with ",Object(i.b)(r.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"}),", the returned bots are sorted in the same order that they are stacked.\nThis means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they're stackable)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that other bots should be in the same stack with."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the dimension."),Object(i.b)("h4",{id:"examples-34"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots in the same stack as ",Object(i.b)("inlineCode",{parentName:"li"},"this"),' in the "test" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(inStack(this, "test"));\n')),Object(i.b)("h3",{id:"bycreatorbot"},Object(i.b)("inlineCode",{parentName:"h3"},"byCreator(bot)")),Object(i.b)("p",null,"Creates a bot filter that includes bots created by the given bot. That is, they have ",Object(i.b)(r.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," of the given bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that created the other bots."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.NormalCode,{mdxType:"NormalCode"},'byTag("creator", getID(bot))'),"."),Object(i.b)("h4",{id:"examples-35"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all the bots created by this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let bots = getBots(byCreator(this));\n")),Object(i.b)("h3",{id:"byspacespace"},Object(i.b)("inlineCode",{parentName:"h3"},"bySpace(space)")),Object(i.b)("p",null,"Creates a bot filter that includes bots in the given space. That is, they have ",Object(i.b)(r.TagLink,{tag:"space",mdxType:"TagLink"})," set to the given value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the space that the bots are in."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.NormalCode,{mdxType:"NormalCode"},'byTag("space", space)'),"."),Object(i.b)("h4",{id:"examples-36"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots in the ",Object(i.b)("inlineCode",{parentName:"li"},"tempLocal")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(bySpace("tempLocal"));\n')),Object(i.b)("h3",{id:"bymodmod"},Object(i.b)("inlineCode",{parentName:"h3"},"byMod(mod)")),Object(i.b)("p",null,"Creates a bot filter that includes bots that match the given mod."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that the other bots should match."),Object(i.b)("h4",{id:"examples-37"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all the bots with ",Object(i.b)("inlineCode",{parentName:"li"},"#height")," set to ",Object(i.b)("inlineCode",{parentName:"li"},"1")," and ",Object(i.b)("inlineCode",{parentName:"li"},"#color")," set to ",Object(i.b)("inlineCode",{parentName:"li"},"red"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(byMod({\n    height: 1,\n    color: "red"\n}));\n')),Object(i.b)("h3",{id:"neighboringbot-dimension-direction"},Object(i.b)("inlineCode",{parentName:"h3"},"neighboring(bot, dimension, direction)")),Object(i.b)("p",null,"Creates a bot filter that includes bots which are neighboring the given bot.\nOptionally takes a direction that the neighboring bots must be in."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that the other bots need to be neighboring."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the other bots need to be in."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the neighboring direction to check. If not specified, then all of the supported directions will be checked.\nCurrently, the supported directions are ",Object(i.b)("inlineCode",{parentName:"p"},"front"),", ",Object(i.b)("inlineCode",{parentName:"p"},"right"),", ",Object(i.b)("inlineCode",{parentName:"p"},"back"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"left"),". If an unsupported direction is specified, then no bots will be included."),Object(i.b)("h4",{id:"examples-38"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots in front of ",Object(i.b)("inlineCode",{parentName:"li"},"this")," bot in the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(neighboring(this, "test", "front"));\n')),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots around ",Object(i.b)("inlineCode",{parentName:"li"},"this")," bot in the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(neighboring(this, "test"));\n')),Object(i.b)("h3",{id:"eitherfilters"},Object(i.b)("inlineCode",{parentName:"h3"},"either(...filters)")),Object(i.b)("p",null,"Creates a bot filter that includes bots which match any (i.e. one or more) of the given filters."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a bot filter."),Object(i.b)("h4",{id:"examples-39"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots with the ",Object(i.b)("inlineCode",{parentName:"li"},"#name")," ",Object(i.b)("inlineCode",{parentName:"li"},"bob")," or a ",Object(i.b)("inlineCode",{parentName:"li"},"#height")," of 2.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(\n    either(\n        byTag("#name", "bob"),\n        byTag("height", 2)\n    )\n);\n')),Object(i.b)("h3",{id:"notfilter"},Object(i.b)("inlineCode",{parentName:"h3"},"not(filter)")),Object(i.b)("p",null,"Creates a function that includes bots which ",Object(i.b)("em",{parentName:"p"},"do not")," match the given filter."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot filter whose results should be negated."),Object(i.b)("h4",{id:"examples-40"},"Examples."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Find all bots that are not in the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(not(inDimension("test")));\n')),Object(i.b)("h2",{id:"event-actions"},"Event Actions"),Object(i.b)("h3",{id:"shoutname-arg"},Object(i.b)("inlineCode",{parentName:"h3"},"shout(name, arg?)")),Object(i.b)("p",null,"Sends a shout to all bots that are ",Object(i.b)(r.TagLink,{tag:"listening",mdxType:"TagLink"})," and have a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"docs/listen-tags"}),"listen tag")," for the specified name. Optionally includes a custom ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument.\nAlso triggers ",Object(i.b)(r.TagLink,{tag:"@onListen",mdxType:"TagLink"})," and ",Object(i.b)(r.TagLink,{tag:"@onAnyListen",mdxType:"TagLink"}),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the shout. e.g. Using ",Object(i.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger all ",Object(i.b)(r.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listeners."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(i.b)("h4",{id:"examples-41"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a ",Object(i.b)("inlineCode",{parentName:"li"},"@reset")," event to all bots:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'shout("reset");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Send a ",Object(i.b)("inlineCode",{parentName:"li"},"@hello")," event with your name:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'shout("hello", "Bob");\n')),Object(i.b)("h3",{id:"whisperbot-name-arg"},Object(i.b)("inlineCode",{parentName:"h3"},"whisper(bot, name, arg?)")),Object(i.b)("p",null,"Sends a whisper to the specified bot(s) that are ",Object(i.b)(r.TagLink,{tag:"listening",mdxType:"TagLink"})," and have a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"docs/listen-tags"}),"listen tag")," for the given name. Optionally includes a custom ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument.\nAlso triggers ",Object(i.b)(r.TagLink,{tag:"@onListen",mdxType:"TagLink"})," and ",Object(i.b)(r.TagLink,{tag:"@onAnyListen",mdxType:"TagLink"}),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot, array of bots, bot ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"}),", or array of bot ",Object(i.b)(r.TagLink,{tag:"id",mdxType:"TagLink"})," that the whisper should be sent to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the whisper. e.g. Using ",Object(i.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger the ",Object(i.b)(r.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listener for the specified bots."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(i.b)("h4",{id:"examples-42"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a ",Object(i.b)("inlineCode",{parentName:"li"},"@reset")," event to all bots named ",Object(i.b)("inlineCode",{parentName:"li"},"Bob"),":")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#name", "Bob");\nwhisper(bots, "reset");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Send a ",Object(i.b)("inlineCode",{parentName:"li"},"@setColor")," event to ourself:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'whisper(this, "setColor", "red");\n')),Object(i.b)("h3",{id:"supershoutname-arg"},Object(i.b)("inlineCode",{parentName:"h3"},"superShout(name, arg?)")),Object(i.b)("p",null,"Sends a shout to all of the other servers that are loaded."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the shout. e.g. Using ",Object(i.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger all the ",Object(i.b)(r.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listeners."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the optional ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument to include with the shout."),Object(i.b)("h4",{id:"examples-43"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a ",Object(i.b)("inlineCode",{parentName:"li"},"hello")," super shout to all the loaded servers.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'superShout("hello");\n')),Object(i.b)("h3",{id:"remoteaction-target"},Object(i.b)("inlineCode",{parentName:"h3"},"remote(action, target?)")),Object(i.b)("p",null,"Sends the given action to another remote."),Object(i.b)("p",null,"In CasualOS, all actions are messages which are placed in a queue and processed one at at time."),Object(i.b)("p",null,"For example, the ",Object(i.b)(r.ActionLink,{action:"os.toast(message, duration?)",mdxType:"ActionLink"})," action queues a message which, when processed, will show a toast message.\nHowever, before any action is performed, it is run through the ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener which can decide whether reject an action using ",Object(i.b)(r.ActionLink,{action:"action.reject(action)",mdxType:"ActionLink"}),".\nThis lets you write rules for what actions each player is allowed to take."),Object(i.b)("p",null,"There are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the ",Object(i.b)(r.ActionLink,{action:"remote(action)",mdxType:"ActionLink"})," function), it won't run by default.\nInstead it is wrapped as a ",Object(i.b)("inlineCode",{parentName:"p"},"device")," action and sent to ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\nIf you want to perform the action, you can use ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"})," on the inner device action to queue it for execution."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the action to send."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is a object specifing which remote to send the action to. If not specified, then the action is sent to the server.\nIf specified, then the action is sent to all remotes that match the given values. If given a string, then the action is sent to the remote with the matching ID."),Object(i.b)("h4",{id:"examples-44"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a toast message to another remote.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"// TODO: Get the bot ID of the other remote.\nconst otherRemoteId = 'otherRemoteId';\n\n// Create a toast action\nconst toastAction = os.toast('My message!');\n\n// Send the action to the other remote\n// The toastAction will not be performed locally because\n// it is being sent to another remote.\nremote(toastAction, otherRemoteId);\n")),Object(i.b)("h3",{id:"sendremotedataremoteid-name-arg"},Object(i.b)("inlineCode",{parentName:"h3"},"sendRemoteData(remoteId, name, arg?)")),Object(i.b)("p",null,"Sends a ",Object(i.b)(r.TagLink,{tag:"@onRemoteData",mdxType:"TagLink"})," shout to the remote with the given ID or remotes if given a list of IDs.\nThis is useful for sending arbitrary messages to specific remotes."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the remote ID or list of remote IDs that the shout should be sent to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the event that is being sent. This is useful for telling the difference between different messages."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the ",Object(i.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(i.b)("h4",{id:"examples-45"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Send a "custom" message to another remote.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const otherRemoteId = "otherRemoteId";\n\n// The other remote will receive a @onRemoteData with \n// that.name === "custom" and that.that === "Hello"\nsendRemoteData(otherRemoteId, "custom", "Hello");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Send a message to all other remotes.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const remotes = await server.remotes();\nconst remoteId = getID(configBot);\nconst otherRemotes = remotes.filter(id => id !== remoteId);\n\n// All other remotes will receive a @onRemoteData with\n// that.name === "custom" and that.that === "Hello"\nsendRemoteData(otherRemotes, "custom", "Hello");\n')),Object(i.b)("h3",{id:"actionrejectaction"},Object(i.b)("inlineCode",{parentName:"h3"},"action.reject(action)")),Object(i.b)("p",null,"Prevents a previous action from being performed."),Object(i.b)("p",null,"This is especially useful when used in a ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener since it lets you reject actions before they are performed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the action that should be prevented/rejected."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Prevent a toast message from being performed.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const toastAction = os.toast("my message");\naction.reject(toastAction);\n')),Object(i.b)("h2",{id:"os-actions"},"OS Actions"),Object(i.b)("h3",{id:"ossleeptime"},Object(i.b)("inlineCode",{parentName:"h3"},"os.sleep(time)")),Object(i.b)("p",null,"Waits the amount of time provided, in ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Millisecond"}),"miliseconds"),"."),Object(i.b)("p",null,"Returns a promise that resolves when the time has been waited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is time in ms to wait. 1 second is 1000ms."),Object(i.b)("h4",{id:"examples-46"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Wait 2 seconds before proceeding.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.toast("Stop!");\nawait os.sleep(2000);\nos.toast("Hammer Time!");\n')),Object(i.b)("h3",{id:"oslogargs"},Object(i.b)("inlineCode",{parentName:"h3"},"os.log(...args)")),Object(i.b)("p",null,"Logs the given data to the developer console."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Every parameter")," is the data that should be logged."),Object(i.b)("h4",{id:"examples-47"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Log "Hello, World!" to the browser developer console.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.log("Hello, World!");\n')),Object(i.b)("h3",{id:"osgetgeolocation"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getGeolocation()")),Object(i.b)("p",null,"Gets the geographic location that the current device is at in the world."),Object(i.b)("p",null,"Returns a promise that resolves with the location. The location is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let location: {\n    /**\n     * Whether the operation was successful.\n     */\n    success: boolean;\n\n    /**\n     * The code of the error that occurred.\n     * Only defined if the operation was unsuccessful.\n     */\n     errorCode?: 'permission_denied' | 'position_unavailable' | 'timeout' | 'unknown';\n\n     /**\n      * The message of the error that occurred.\n      * Only defined if the operation was unsuccessful.\n      */\n     errorMessage?: string;\n\n     /**\n     * The altitude that the device is near.\n     * Null if the device does not support determining the altitude.\n     * Only defined if the operation was successful.\n     */\n     altitude?: number;\n\n     /**\n      * The accuracy of the altitude in meters.\n      * Null if the device does not support altitude.\n      * Only defined if the operation was successful.\n      */\n     altitudeAccuracy?: number;\n \n     /**\n      * The latitude that the device is near.\n      * Only defined if the operation was successful.\n      */\n     latitude: number;\n \n     /**\n      * The longitude that the device is near.\n      * Only defined if the operation was successful.\n      */\n     longitude: number;\n \n     /**\n      * The accuracy of the positional location (latitude and longitude) in meters.\n      * Only defined if the operation was successful.\n      */\n     positionalAccuracy: number;\n \n     /**\n      * The heading of the device from north in radians.\n      * 0 is true north, Math.PI/2 is east, Math.PI is south and 3/2*Math.PI is west.\n      * This value is null if the device is unable to determine the heading.\n      * Only defined if the operation was successful.\n      */\n     heading: number;\n \n     /**\n      * The speed that the device is moving in meters per second.\n      * Null if the device does not support calculating the speed.\n      * Only defined if the operation was successful.\n      */\n     speed: number;\n \n     /**\n      * The timestamp of the geolocation result.\n      * Only defined if the operation was successful.\n      */\n     timestamp: number;\n}\n")),Object(i.b)("h4",{id:"examples-48"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the current geolocation.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const location = await os.getGeolocation();\n\nif (location.success) {\n    os.toast(`You are at (${location.latitude}, ${location.longitude})`);\n} else {\n    os.toast(location.errorMessage);\n}\n")),Object(i.b)("h3",{id:"oscheckoutoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"os.checkout(options)")),Object(i.b)("p",null,"Shows a payment screen modal that lets the player purchase something.\nTriggers the ",Object(i.b)(r.TagLink,{tag:"@onCheckout",mdxType:"TagLink"})," shout on the server inside the given processing server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the options to use to setup the checkout screen."),Object(i.b)(r.Alert,{type:"warning",mdxType:"Alert"},"Note that while this is functional, it is not recommended be used due to potential security issues."),Object(i.b)("h4",{id:"examples-49"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a checkout box for 10 cookies.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.checkout({\n    publishableKey: 'YOUR_PUBLISHABLE_API_KEY',\n    productId: '10_cookies',\n    title: '10 Cookies',\n    description: '$5.00',\n    processingServer: 'cookies_checkout'\n});\n")),Object(i.b)("h3",{id:"osdownloaddata-filename-mimetype"},Object(i.b)("inlineCode",{parentName:"h3"},"os.download(data, filename, mimeType?)")),Object(i.b)("p",null,"Downloads the given data with the given filename and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"}),"MIME Type"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the data that should be downloaded. This\ncan be a string, object, or binary data in the form of an ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer"}),"ArrayBuffer"),"\nor ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-us/docs/Web/API/Blob"}),"Blob"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the file that should be downloaded."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types"}),"MIME Type")," that the downloaded file should have.\nIf not provided, then it will be inferred from the provided filename."),Object(i.b)("h4",{id:"examples-50"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Download a text file named "test.txt" that contains "abc".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.download("abc", "test.txt");\n')),Object(i.b)("h3",{id:"osdownloadbotsbots-filename"},Object(i.b)("inlineCode",{parentName:"h3"},"os.downloadBots(bots, filename)")),Object(i.b)("p",null,"Downloads the given array of bots as a ",Object(i.b)("inlineCode",{parentName:"p"},".aux")," file with the given filename.\nUseful for quickly backing up a set of bots."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the array of bots that should be downloaded."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the file that the bots should be stored in.\n",Object(i.b)("inlineCode",{parentName:"p"},".aux")," will automatically be added to the end of the filename."),Object(i.b)("h4",{id:"examples-51"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Download all the bots in the "abc" dimension as "abcBots.aux".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.downloadBots(getBots(inDimension("abc")), "abcBots");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Download the current bot as "currentBot.aux".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.downloadBots([bot], "currentBot");\n')),Object(i.b)("h3",{id:"osrunscript"},Object(i.b)("inlineCode",{parentName:"h3"},"os.run(script)")),Object(i.b)("p",null,"Runs the given script.\nThe script will be executed in a separate environment with no ",Object(i.b)("inlineCode",{parentName:"p"},"bot"),", ",Object(i.b)("inlineCode",{parentName:"p"},"tags"),", ",Object(i.b)("inlineCode",{parentName:"p"},"this"),", ",Object(i.b)("inlineCode",{parentName:"p"},"data"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"that")," variables.\nThis means that you need to use the ",Object(i.b)(r.ActionLink,{action:"getBot(...filters)",mdxType:"ActionLink"})," or ",Object(i.b)(r.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"})," functions to read bot data."),Object(i.b)("p",null,"Returns a promise that resolves with the returned script value after it has been executed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the script that should be executed."),Object(i.b)("h4",{id:"examples-52"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Run a script that says "hello".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.run(\"os.toast('hello');\");\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Run a script from the ",Object(i.b)("inlineCode",{parentName:"li"},"#script")," tag on the current bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.run(tags.script);\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Run a script and toast the result.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const result = await os.run("return 594 + 391");\nos.toast(result);\n')),Object(i.b)("h3",{id:"osreplacedragbotbotormod"},Object(i.b)("inlineCode",{parentName:"h3"},"os.replaceDragBot(botOrMod)")),Object(i.b)("p",null,"Replaces the bot that the user is dragging with the given bot or mod."),Object(i.b)("p",null,"If called when the user is not dragging anything, then the given bot or mod will be dragged using the current input method.\nWhen in VR, the current input method is the most recently used VR controller. Otherwise it is the mouse/touchscreen."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that should be dragged.\nIf given a bot while dragging, then that bot's ",Object(i.b)(r.TagLink,{tag:"@onDrag",mdxType:"TagLink"})," will be skippped but ",Object(i.b)(r.TagLink,{tag:"@onDrop",mdxType:"TagLink"})," will be called.\nIf given a bot when not dragging, then that bot's ",Object(i.b)(r.TagLink,{tag:"@onDrag",mdxType:"TagLink"})," and ",Object(i.b)(r.TagLink,{tag:"@onDrop",mdxType:"TagLink"})," will be called."),Object(i.b)("h4",{id:"examples-53"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Drag a clone of this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let clone = create(this);\nos.replaceDragBot(clone);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Drag a mod that makes other bots red.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.replaceDragBot({\n    "color": "red"\n});\n')),Object(i.b)("h3",{id:"osadddropsnaptargets"},Object(i.b)("inlineCode",{parentName:"h3"},"os.addDropSnap(...targets)")),Object(i.b)("p",null,"Specifies a list of snap targets that can be used to position the currently dragged bot."),Object(i.b)("p",null,"If called when the user is not dragging anything, then this function does nothing."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a snap target and can be one of the following values:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"ground",mdxType:"PossibleValueCode"},"The bot will snap to the ground plane. (Default when not in VR)"),Object(i.b)(r.PossibleValueCode,{value:"grid",mdxType:"PossibleValueCode"},"The bot will snap to individual grid tiles."),Object(i.b)(r.PossibleValueCode,{value:"face",mdxType:"PossibleValueCode"},"The bot will snap the faces of other pointable bots."),Object(i.b)(r.PossibleValueCode,{value:"bots",mdxType:"PossibleValueCode"},"The bot will snap to other pointable bots."),Object(i.b)(r.PossibleValue,{value:"A snap point object",mdxType:"PossibleValue"},"The bot will snap to the specified position when dragged within the specified distance.")),Object(i.b)("p",null,"Snap point objects should have the following form:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let snapPoint: {\n    /**\n     * The position that the bot should be snapped to.\n     */\n    position: { x: number, y: number, z: number };\n\n    /**\n     * The distance that the bot should be from the position in order to snap to it.\n     */\n    distance: number;\n};\n")),Object(i.b)("h4",{id:"examples-54"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to the grid.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addDropSnap("grid");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to other bot faces.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addDropSnap("face");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to a point.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.addDropSnap({\n    position: {\n        x: 0,\n        y: 0,\n        z: 3,\n    },\n    distance: 1\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to the center or bot faces.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addDropSnap({\n    position: {\n        x: 0,\n        y: 0,\n        z: 0,\n    },\n    distance: 1\n}, "face");\n')),Object(i.b)("h3",{id:"osaddbotdropsnapbot-targets"},Object(i.b)("inlineCode",{parentName:"h3"},"os.addBotDropSnap(bot, ...targets)")),Object(i.b)("p",null,'Specifies a list of snap targets that can be used to position the currently dragged bot when it is being dropped on the given bot.\nThis function is useful for making some bots act like a "selector" or mask for drop areas.'),Object(i.b)("p",null,"If called when the user is not dragging anything, then this function does nothing."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot which, when the dragged bot is being dropped onto it (as indicated by ",Object(i.b)(r.TagLink,{tag:"@onDropEnter",mdxType:"TagLink"}),"/",Object(i.b)(r.TagLink,{tag:"@onDropExit",mdxType:"TagLink"}),"),\nthe specified snap targets will take effect."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the snap targets and each can be one of the following values:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"ground",mdxType:"PossibleValueCode"},"The bot will snap to the ground plane. (Default when not in VR)"),Object(i.b)(r.PossibleValueCode,{value:"grid",mdxType:"PossibleValueCode"},"The bot will snap to individual grid tiles."),Object(i.b)(r.PossibleValueCode,{value:"face",mdxType:"PossibleValueCode"},"The bot will snap the faces of other pointable bots."),Object(i.b)(r.PossibleValueCode,{value:"bots",mdxType:"PossibleValueCode"},"The bot will snap to other pointable bots."),Object(i.b)(r.PossibleValue,{value:"A snap point object",mdxType:"PossibleValue"},"The bot will snap to the specified position when dragged within the specified distance.")),Object(i.b)("p",null,"Snap point objects should have the following form:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let snapPoint: {\n    /**\n     * The position that the bot should be snapped to.\n     */\n    position: { x: number, y: number, z: number };\n\n    /**\n     * The distance that the bot should be from the position in order to snap to it.\n     */\n    distance: number;\n};\n")),Object(i.b)("h4",{id:"examples-55"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to the grid when it is being dropped on this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addBotDropSnap(thisBot, "grid");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to this bot's faces.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addBotDropSnap(thisBot, "face");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to a point when it is being dropped on this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.addBotDropSnap(thisBot, {\n    position: {\n        x: 0,\n        y: 0,\n        z: 3,\n    },\n    distance: 1\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Snap the dragged bot to the center or bot faces when it is being dropped on this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.addBotDropSnap(thisBot, {\n    position: {\n        x: 0,\n        y: 0,\n        z: 0,\n    },\n    distance: 1\n}, "face");\n')),Object(i.b)("h3",{id:"osshowchatplaceholder"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showChat(placeholder?)")),Object(i.b)("p",null,'Shows the "chat bar" at the top of the screen in CasualOS, optionally using the given text as the placeholder.\nTyping in the chat bar will send ',Object(i.b)(r.TagLink,{tag:"@onChatTyping",mdxType:"TagLink"})," shouts and pressing Enter will send a ",Object(i.b)(r.TagLink,{tag:"@onChat",mdxType:"TagLink"})," shout and clear the chat bar."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text that the chat bar should show as the placeholder."),Object(i.b)("h4",{id:"examples-56"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show the chat bar.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showChat();\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show the chat bar with some placeholder text.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showChat("hello");\n')),Object(i.b)("h3",{id:"osshowchatoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showChat(options)")),Object(i.b)("p",null,'Shows the "chat bar" at the top of the screen in CasualOS, using the given options.\nTyping in the chat bar will send ',Object(i.b)(r.TagLink,{tag:"@onChatTyping",mdxType:"TagLink"})," shouts and pressing Enter will send a ",Object(i.b)(r.TagLink,{tag:"@onChat",mdxType:"TagLink"})," shout and clear the chat bar."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object with the options that the chat bar should use.\nIt should be an object with the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"placeholder")," - The text that should be shown as a placeholder. (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"prefill")," - The text that should be filled into the chat bar. If the chat bar already has text in it, then setting this property does nothing."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"placeholderColor")," - The color that the placeholder text should be. Defaults to ",Object(i.b)("inlineCode",{parentName:"li"},"#448aff"),".")),Object(i.b)("h4",{id:"examples-57"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show the chat bar with a placeholder.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showChat({\n    placeholder: "hello"\n});\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show the chat bar with some prefilled text.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showChat({\n    prefill: "this is prefilled"\n});\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Show the chat bar with some prefilled text and a placeholder.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showChat({\n    prefill: "this is prefilled",\n    placeholder: "hello"\n});\n')),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Show the chat bar with a custom placeholder color.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showChat({\n    placeholder: \"hello\",\n    placeholderColor: '#44a471'\n});\n")),Object(i.b)("h3",{id:"oshidechat"},Object(i.b)("inlineCode",{parentName:"h3"},"os.hideChat()")),Object(i.b)("p",null,'Hides the "chat bar" at the top of the screen in CasualOS.'),Object(i.b)("h4",{id:"examples-58"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hide the chat bar.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.hideChat();\n")),Object(i.b)("h3",{id:"osshowhtmlhtml"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showHtml(html)")),Object(i.b)("p",null,"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the HTML that should be shown to the user."),Object(i.b)("h4",{id:"examples-59"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a header with some text.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showHtml(`\n  <h1>This is some text!</h1>\n`);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show a YouTube video.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showHtml(`\n  <iframe\n      width="560" \n      height="315"\n      src="https://www.youtube.com/embed/BHACKCNDMW8"\n      frameborder="0"\n      allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"\n      allowfullscreen>\n  </iframe>\n`);\n')),Object(i.b)("h3",{id:"oshidehtml"},Object(i.b)("inlineCode",{parentName:"h3"},"os.hideHtml()")),Object(i.b)("p",null,"Closes the HTML popup modal."),Object(i.b)("h4",{id:"examples-60"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hide the HTML popup.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.hideHtml();\n")),Object(i.b)("h3",{id:"osshareoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"os.share(options)")),Object(i.b)("p",null,"Shares the given URL or text via the device's social share capabilities.\nReturns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://web.dev/promises/"}),"Promise")," that resolves when sharing has succeeded or failed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object with at least one the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"url")," - The URL that should be shared. (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"text")," - The text that should be shared. (optional)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"title")," - The title of the document that is being shared. (optional)")),Object(i.b)("h4",{id:"examples-61"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Share a URL.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.share({\n    url: 'https://example.com'\n});\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Share some text.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.share({\n    text: 'abcdefghijklmnopqrstuvwxyz'\n});\n")),Object(i.b)("h3",{id:"osopencirclewipeoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"os.openCircleWipe(options?)")),Object(i.b)("p",null,"Causes the circular wipe animation to open around the screen. This can be used to reveal the page portal after transitioning between screens.\nReturns a promise that resolves when the animation has finished running.\nThe promise will throw an exception if ",Object(i.b)(r.ActionLink,{action:"os.closeCircleWipe(options?)",mdxType:"ActionLink"})," is called while the animation is running."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is an object that contains options for the animation:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let options: {\n    /**\n     * The duration of this half of the circle wipe animation in seconds.\n     * Defaults to 1.\n     */\n    duration?: number;\n\n    /**\n     * The color that the circle wipe should be.\n     * Defaults to "black".\n     */\n    color?: string;\n}\n')),Object(i.b)("h4",{id:"examples-62"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Reveal the page portal with a circular wipe animation.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await os.openCircleWipe();\nos.toast("Revealed!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Hide the page portal and show it after an additional second.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.closeCircleWipe();\nawait os.sleep(1000);\nawait os.openCircleWipe();\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Use a custom color for the circle wipe.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.openCircleWipe({\n    color: '#63f1aa'\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Make the circle wipe take 5 seconds to complete.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.openCircleWipe({\n    duration: 5\n});\n")),Object(i.b)("h3",{id:"osclosecirclewipeoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"os.closeCircleWipe(options?)")),Object(i.b)("p",null,"Causes a circular wipe animation to close around the screen. This can be used to cover the page portal while transitioning between scenes.\nReturns a promise that resolves when the animation has finished running.\nThe promise will throw an exception if ",Object(i.b)(r.ActionLink,{action:"os.openCircleWipe(options?)",mdxType:"ActionLink"})," is called while the animation is running."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is an object that contains options for the animation:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let options: {\n    /**\n     * The duration of this half of the circle wipe animation in seconds.\n     * Defaults to 1.\n     */\n    duration?: number;\n\n    /**\n     * The color that the circle wipe should be.\n     * Defaults to "black".\n     */\n    color?: string;\n}\n')),Object(i.b)("h4",{id:"examples-63"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hide the page portal with a circular wipe animation.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await os.closeCircleWipe();\nos.toast("Hidden!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Hide the page portal and show it after an additional second.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.closeCircleWipe();\nawait os.sleep(1000);\nawait os.openCircleWipe();\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Use a custom color for the circle wipe.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.closeCircleWipe({\n    color: '#63f1aa'\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Make the circle wipe take 5 seconds to complete.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.closeCircleWipe({\n    duration: 5\n});\n")),Object(i.b)("h3",{id:"ostoastmessage-duration"},Object(i.b)("inlineCode",{parentName:"h3"},"os.toast(message, duration?)")),Object(i.b)("p",null,'Shows a temporary "toast" notification to the player at the bottom of the screen with the given message.\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen.'),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text that the toast message should show."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the number of seconds that the message should be on the screen. (Default is 2)"),Object(i.b)("h4",{id:"examples-64"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show a "Hello!" toast message.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.toast("Hello!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show the player a code for 5 seconds.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.toast("this is the code", 5);\n')),Object(i.b)("h3",{id:"osfocusonbotorposition-options"},Object(i.b)("inlineCode",{parentName:"h3"},"os.focusOn(botOrPosition, options?)")),Object(i.b)("p",null,"Animates the camera such that the portal focus point is placed on the given bot or position.\nReturns a promise which resolves when the animation finishes and rejects if the user takes control of the camera during the animation."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot, bot ID, or position that the player's view should be moved to. If null, then the current focus animation will be canceled."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and can be used to specify additional details about how the camera should be animated.\nIt should be an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /*\n    * The zoom value to use.\n    * Possible values are between `0` and `80`. `1` is the default.\n    * If no value is specified, then the zoom will remain at its current value.\n    */\n    zoom?: number;\n\n    /*\n     * The rotation value to use in radians.\n     * These are the polar coordinates that determine where\n     * the camera should orbit around the target point.\n     */\n    rotation?: {\n        x: number;\n        y: number;\n    };\n\n    /**\n     * The duration in seconds that the animation should take.\n     * Defaults to 1.\n     */\n    duration?: number;\n\n    /**\n     * The options for easing.\n     * Can be an \"easing type\" or an object that specifies the type and mode.\n     * If an easing type is specified, then \"inout\" mode is used.\n     * If omitted, then \"quadratic\" \"inout\" is used.\n     */\n    easing?: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic' \n            | {\n        /**\n         * The type of easing.\n        */\n        type: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic';\n\n        /**\n         * Whether to apply the easing at the\n         * start (in), end (out), or start and end (inout) of the tween.\n         */\n        mode: 'in' | 'out' | 'inout';\n    }\n}\n")),Object(i.b)("p",null,"See ",Object(i.b)(r.TagLink,{tag:"portalCameraRotationX",mdxType:"TagLink"})," for more information on polar coordinates."),Object(i.b)("h4",{id:"examples-65"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Move the player's view to show a bot named bob.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await os.focusOn(getBot("#name", "bob"));\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Move the player's view to show this bot from the top.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.focusOn(thisBot, {\n    rotation: {\n        x: 0,\n        y: 0\n    }\n});\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Move the player's view to show this bot with a particular zoom value.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.focusOn(thisBot, {\n    zoom: 15\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Move the player's view to a specific position.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await os.focusOn({\n    x: 15,\n    y: 9.5\n});\n")),Object(i.b)("h3",{id:"osopenqrcodescannercamera"},Object(i.b)("inlineCode",{parentName:"h3"},"os.openQRCodeScanner(camera?)")),Object(i.b)("p",null,"Opens the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," scanner. While open, each scanned QR Code will send a ",Object(i.b)(r.TagLink,{tag:"@onQRCodeScanned",mdxType:"TagLink"})," shout.\nOptionally accepts which camera to use for scanning. (front/back)"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is a string specifing which camera to use. Defaults to 'rear'.\nIf the given camera type is not available, then the default camera will be used.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"rear",mdxType:"PossibleValueCode"},"The rear-facing camera. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"front",mdxType:"PossibleValueCode"},"The front-facing camera.")),Object(i.b)("h4",{id:"examples-66"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Open the QR Code scanner.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.openQRCodeScanner();\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Open the QR Code scanner for the front-facing camera.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.openQRCodeScanner("front");\n')),Object(i.b)("h3",{id:"oscloseqrcodescannercamera"},Object(i.b)("inlineCode",{parentName:"h3"},"os.closeQRCodeScanner(camera?)")),Object(i.b)("p",null,"Closes the QR Code scanner."),Object(i.b)("h4",{id:"examples-67"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Close the QR Code scanner.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.closeQRCodeScanner();\n")),Object(i.b)("h3",{id:"osshowqrcodecode"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showQRCode(code)")),Object(i.b)("p",null,"Shows a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," for the given data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text or data that the generated QR Code should represent."),Object(i.b)("h4",{id:"examples-68"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show a QR Code that contains the data "hello".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showQRCode("hello");\n')),Object(i.b)("h3",{id:"oshideqrcode"},Object(i.b)("inlineCode",{parentName:"h3"},"os.hideQRCode()")),Object(i.b)("p",null,"Closes the QR Code popup modal."),Object(i.b)("h4",{id:"examples-69"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hides the QR Code popup modal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.hideQRCode();\n")),Object(i.b)("h3",{id:"osshowjoincodeserver-dimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showJoinCode(server?, dimension?)")),Object(i.b)("p",null,"Shows a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," with a link to join the given server and dimension.\nIf the server and dimension are omitted, then the current server and dimension will be used."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the server that the code should be shown for."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the code should be shown for."),Object(i.b)("h4",{id:"examples-70"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a join QR Code.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showJoinCode();\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show a join QR Code for a server and dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showJoinCode("server", "dimension");\n')),Object(i.b)("h3",{id:"osopenbarcodescannercamera"},Object(i.b)("inlineCode",{parentName:"h3"},"os.openBarcodeScanner(camera?)")),Object(i.b)("p",null,"Opens the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Barcode"}),"Barcode")," scanner. While open, each scanned Barcode will send a ",Object(i.b)(r.TagLink,{tag:"@onBarcodeScanned",mdxType:"TagLink"})," shout.\nOptionally accepts which camera to use for scanning. (front/back)"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is a string specifing which camera to use. Defaults to 'rear'.\nIf the given camera type is not available, then the default camera will be used.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"rear",mdxType:"PossibleValueCode"},"The rear-facing camera. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"front",mdxType:"PossibleValueCode"},"The front-facing camera.")),Object(i.b)("h4",{id:"examples-71"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Open the Barcode scanner.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.openBarcodeScanner();\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Open the Barcode scanner for the front-facing camera.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.openBarcodeScanner("front");\n')),Object(i.b)("h3",{id:"osclosebarcodescannercamera"},Object(i.b)("inlineCode",{parentName:"h3"},"os.closeBarcodeScanner(camera?)")),Object(i.b)("p",null,"Closes the Barcode scanner."),Object(i.b)("h4",{id:"examples-72"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Close the Barcode scanner.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.closeBarcodeScanner();\n")),Object(i.b)("h3",{id:"osshowbarcodecode-format"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showBarcode(code, format?)")),Object(i.b)("p",null,"Shows a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Barcode"}),"Barcode")," for the given data. Optionally accepts the format that the barcode should be displayed in."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text or data that the generated Barcode should represent."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the format that the barcode should be displayed in.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"code128",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Code_128"},"Code 128")," barcode format. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"code39",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Code_39"},"Code 39")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"ean13",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/International_Article_Number"},"EAN-13")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"ean8",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/International_Article_Number"},"EAN-8")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"upc",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Universal_Product_Code"},"UPC")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"itf14",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/ITF-14"},"IFT-14")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"msi",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/MSI_Barcode"},"MSI")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"pharmacode",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Pharmacode"},"Pharmacode")," barcode format."),Object(i.b)(r.PossibleValueCode,{value:"codabar",mdxType:"PossibleValueCode"},"The ",Object(i.b)("a",{href:"https://en.wikipedia.org/wiki/Codabar"},"Codabar")," barcode format.")),Object(i.b)("h4",{id:"examples-73"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show a Barcode that contains the data "hello".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showBarcode("hello");\n')),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show a UPC Barcode that contains the data "123456".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showBarcode(\"123456\", 'upc');\n")),Object(i.b)("h3",{id:"oshidebarcode"},Object(i.b)("inlineCode",{parentName:"h3"},"os.hideBarcode()")),Object(i.b)("p",null,"Closes the Barcode popup modal."),Object(i.b)("h4",{id:"examples-74"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Hides the Barcode popup modal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.hideBarcode();\n")),Object(i.b)("h3",{id:"osshowinputvalue-options"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showInput(value?, options?)")),Object(i.b)("p",null,"Shows an input modal with the given value and options.\nWhen shown, the player will be able to change the value."),Object(i.b)("p",null,"Returns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://web.dev/promises/"}),"Promise")," that resolves with the final value when the user is finished editing.\nThis function is similar to ",Object(i.b)(r.ActionLink,{action:"os.showInputForTag(bot, tag, options?)",mdxType:"ActionLink"})," except it doesn't require a bot and a tag."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional  and is the value that should be shown in the input modal,"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the possible cusomization options for the input modal."),Object(i.b)("h4",{id:"examples-75"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a basic text input modal and displays a toast message with the input value.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const value = await os.showInput();\nos.toast(value);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show a text input modal with a placeholder.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const name = await os.showInput(null, {\n    placeholder: 'Enter a name'\n});\nos.toast(name);\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Show a input modal with a custom title.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const name = await os.showInput('My Name', {\n    title: 'Edit name'\n});\nos.toast(name);\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Show a color input modal with a custom title.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const color = await os.showInput('green', {\n    type: 'color',\n    title: 'Enter a custom color'\n});\nos.toast(color);\n")),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},"Show an input for entering secrets (like passwords).")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const secret = await os.showInput('', {\n    type: 'secret',\n    title: 'Enter a secret key'\n});\nos.toast(secret);\n")),Object(i.b)("h3",{id:"osshowinputfortagbot-tag-options"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showInputForTag(bot, tag, options?)")),Object(i.b)("p",null,"Shows an input modal for the given bot and tag with the given options.\nWhen shown, the player will be able to change the value stored in the given tag.\nTriggers the ",Object(i.b)(r.TagLink,{tag:"@onSaveInput",mdxType:"TagLink"})," whisper when the modal is closed with saving and the ",Object(i.b)(r.TagLink,{tag:"@onCloseInput",mdxType:"TagLink"})," whisper when the modal is closed without saving."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID that the input should be shown for,"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited on the bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the possible cusomization options for the input modal."),Object(i.b)("h4",{id:"examples-76"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a basic text input modal for the ",Object(i.b)("inlineCode",{parentName:"li"},"#name")," tag on this bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.showInputForTag(this, "name");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Show a text input modal with a placeholder for the ",Object(i.b)("inlineCode",{parentName:"li"},"#name")," tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showInputForTag(this, \"name\", {\n    placeholder: 'Enter a name'\n});\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Show a input modal with a custom title.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showInputForTag(this, \"name\", {\n    title: 'Edit name'\n});\n")),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Show a color input modal with a custom title.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showInputForTag(this, \"color\", {\n    type: 'color',\n    title: 'Enter a custom color'\n});\n")),Object(i.b)("h3",{id:"ossetclipboardtext"},Object(i.b)("inlineCode",{parentName:"h3"},"os.setClipboard(text)")),Object(i.b)("p",null,"Copies the given text to the player's clipboard. On Chrome and Firefox, this will act like a ",Object(i.b)("inlineCode",{parentName:"p"},"Ctrl+C"),"/",Object(i.b)("inlineCode",{parentName:"p"},"Cmd+C"),".\nOn Safari and all iOS browsers this will open a popup which prompts the player to copy the text."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text that should be copied to the player's clipboard."),Object(i.b)("h4",{id:"examples-77"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Copy "hello" to the player\'s clipboard.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.setClipboard("hello");\n')),Object(i.b)("h3",{id:"osshowuploadfiles"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showUploadFiles()")),Object(i.b)("p",null,'Shows the "Upload Files" dialog which lets the user select some files to upload to the server.\nReturns a promise that resolves with the list of files that were uploaded.'),Object(i.b)("p",null,"Each file is an object with the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let file: {\n    /**\n     * The name of the file.\n     */\n    name: string;\n\n    /**\n     * The size of the file in bytes.\n     */\n    size: number;\n\n    /**\n     * The data in the file.\n     * If the file is a text file, the data will be a string.\n     * If the file is not a text file, then the data will be an ArrayBuffer.\n     *\n     * Text files have one of the following extensions:\n     * .txt\n     * .json\n     * .md\n     * .aux\n     * .html\n     * .js\n     * .ts\n     * All the other file extensions map to an ArrayBuffer.\n     */\n    data: string | ArrayBuffer;\n};\n")),Object(i.b)("h4",{id:"examples-78"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show the "Upload Files" dialog.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const files = await os.showUploadFiles();\n\nos.toast("You uploaded " + files.length + " file(s)!");\n')),Object(i.b)("h3",{id:"osshowuploadauxfile"},Object(i.b)("inlineCode",{parentName:"h3"},"os.showUploadAuxFile()")),Object(i.b)("p",null,'Shows the "Upload AUX File" dialog which lets the user select a ',Object(i.b)("inlineCode",{parentName:"p"},".aux")," file to upload to the server."),Object(i.b)("h4",{id:"examples-79"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Show the "Upload AUX File" dialog.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.showUploadAuxFile();\n")),Object(i.b)("h3",{id:"osloadserverserver"},Object(i.b)("inlineCode",{parentName:"h3"},"os.loadServer(server)")),Object(i.b)("p",null,"Loads the given univese into the current browser tab. When the server is loaded, the ",Object(i.b)(r.TagLink,{tag:"@onServerSubscribed",mdxType:"TagLink"})," shout will be triggered."),Object(i.b)("p",null,"Note that separate servers cannot interact directly. They must instead interact via super shouts."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the server to load."),Object(i.b)("h4",{id:"examples-80"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Load the ",Object(i.b)("inlineCode",{parentName:"li"},"fun")," server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.loadServer("fun");\n')),Object(i.b)("h3",{id:"osunloadserver"},Object(i.b)("inlineCode",{parentName:"h3"},"os.unloadServer()")),Object(i.b)("p",null,"Unloads the given server from the current browser tab. When the server is unloaded, the ",Object(i.b)(r.TagLink,{tag:"@onServerUnsubscribed",mdxType:"TagLink"})," shout will be triggered."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the server to unload."),Object(i.b)("h4",{id:"examples-81"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Unload the ",Object(i.b)("inlineCode",{parentName:"li"},"fun")," server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.unloadServer('fun');\n")),Object(i.b)("h3",{id:"osdownloadserver"},Object(i.b)("inlineCode",{parentName:"h3"},"os.downloadServer()")),Object(i.b)("p",null,"Downloads all of the shared bots into a ",Object(i.b)("inlineCode",{parentName:"p"},".aux")," file on the player's computer.\nThe file will have the same name as the server."),Object(i.b)("p",null,"Note that this function is almost exactly the same as ",Object(i.b)(r.ActionLink,{action:"os.downloadBots(bots, filename)",mdxType:"ActionLink"}),".\nThe only difference is that all bots in the shared space are included and the file is named for you automatically."),Object(i.b)("h4",{id:"examples-82"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Download the entire server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.downloadServer();\n")),Object(i.b)("h3",{id:"osenablear"},Object(i.b)("inlineCode",{parentName:"h3"},"os.enableAR()")),Object(i.b)("p",null,"Enables augmented reality on the device."),Object(i.b)("h4",{id:"examples-83"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Enable AR.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.enableAR();\n")),Object(i.b)("h3",{id:"osdisablear"},Object(i.b)("inlineCode",{parentName:"h3"},"os.disableAR()")),Object(i.b)("p",null,"Disables augmented reality on the device."),Object(i.b)("h4",{id:"examples-84"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Disable AR.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.disableAR();\n")),Object(i.b)("h3",{id:"osenablevr"},Object(i.b)("inlineCode",{parentName:"h3"},"os.enableVR()")),Object(i.b)("p",null,"Enables virtual reality on the device."),Object(i.b)("h4",{id:"examples-85"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Enable VR.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.enableVR();\n")),Object(i.b)("h3",{id:"osdisablevr"},Object(i.b)("inlineCode",{parentName:"h3"},"os.disableVR()")),Object(i.b)("p",null,"Disables virtual reality on the device."),Object(i.b)("h4",{id:"examples-86"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Disable VR.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.disableVR();\n")),Object(i.b)("h3",{id:"osenablepointofviewcenter"},Object(i.b)("inlineCode",{parentName:"h3"},"os.enablePointOfView(center?)")),Object(i.b)("p",null,'Enables Point-of-View mode on the device. Useful for getting a "ground level" view in the page portal.\nThis will move the camera to the given position, set the camera type to ',Object(i.b)("inlineCode",{parentName:"p"},"perspective"),", and change the camera controls so that dragging the screen causes the camera to look around."),Object(i.b)("p",null,"It is not possible to manually move the camera in this mode, however it is still possible to use ",Object(i.b)(r.ActionLink,{action:"os.focusOn(botOrPosition, options?)",mdxType:"ActionLink"})," to move the camera."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the position that the camera should be placed at. If not specified, then the camera will be placed at ",Object(i.b)("inlineCode",{parentName:"p"},"(0, 0, 0)"),"."),Object(i.b)("h4",{id:"examples-87"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Enable POV mode.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.enablePointOfView();\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Enable POV mode at ",Object(i.b)("inlineCode",{parentName:"li"},"(5, 0, 3)"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.enablePointOfView({\n    x: 5,\n    y: 0,\n    z: 3\n});\n")),Object(i.b)("h3",{id:"osdisablepointofview"},Object(i.b)("inlineCode",{parentName:"h3"},"os.disablePointOfView()")),Object(i.b)("p",null,"Disables Point-of-View mode on the device.\nThis will return the camera to its original position, set the camera type back to what it was before, and change the camera controls to the defaults."),Object(i.b)("h4",{id:"examples-88"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Disable POV mode.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.disablePointOfView();\n")),Object(i.b)("h3",{id:"osgetcurrentserver"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getCurrentServer()")),Object(i.b)("p",null,"Gets the server that the player is in."),Object(i.b)("h4",{id:"examples-89"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a message of the current server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const server = os.getCurrentServer();\nos.toast(server);\n")),Object(i.b)("h3",{id:"osgetcurrentdimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getCurrentDimension()")),Object(i.b)("p",null,"Gets the dimension that is loaded into the ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"os.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "pagePortal".'),Object(i.b)("h4",{id:"examples-90"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getCurrentDimension();\nos.toast(dimension);\n")),Object(i.b)("h3",{id:"osgetmenudimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getMenuDimension()")),Object(i.b)("p",null,"Gets the dimension that is loaded into the ",Object(i.b)(r.TagLink,{tag:"menuPortal",mdxType:"TagLink"})," portal."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"os.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "menuPortal".'),Object(i.b)("h4",{id:"examples-91"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(i.b)(r.TagLink,{tag:"menuPortal",mdxType:"TagLink"})," portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getMenuDimension();\nos.toast(dimension);\n")),Object(i.b)("h3",{id:"osgetinventorydimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getInventoryDimension()")),Object(i.b)("p",null,"Gets the dimension that is loaded into the ",Object(i.b)(r.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(i.b)(r.ActionLink,{action:"os.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "inventoryPortal".'),Object(i.b)("h4",{id:"examples-92"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(i.b)(r.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getInventoryDimension();\nos.toast(dimension);\n")),Object(i.b)("h3",{id:"oshasbotininventorybot"},Object(i.b)("inlineCode",{parentName:"h3"},"os.hasBotInInventory(bot)")),Object(i.b)("p",null,"Determines if the given bot is in the dimension that is currently loaded into the ",Object(i.b)(r.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be checked."),Object(i.b)("h4",{id:"examples-93"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a message if a bot named bob is in the inventory.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bob = getBot("#name", "bob");\nif (os.hasBotInInventory(bob)) {\n    os.toast("bob is in the inventory!");\n}\n')),Object(i.b)("h3",{id:"osgetportaldimensionportal"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getPortalDimension(portal)")),Object(i.b)("p",null,"Gets the dimension that is loaded into the given portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the portal that the dimension should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"}),"."),Object(i.b)(r.PossibleValueCode,{value:"sheet",mdxType:"PossibleValueCode"},"The ",Object(i.b)(r.TagLink,{tag:"sheetPortal",mdxType:"TagLink"}),"."),Object(i.b)(r.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The ",Object(i.b)(r.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"}),"."),Object(i.b)(r.PossibleValueCode,{value:"menu",mdxType:"PossibleValueCode"},"The ",Object(i.b)(r.TagLink,{tag:"menuPortal",mdxType:"TagLink"}),".")),Object(i.b)("h4",{id:"examples-94"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"}),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getPortalDimension('page');\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(i.b)(r.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"}),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getPortalDimension('inventory');\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(i.b)("inlineCode",{parentName:"li"},"#auxCustomPortal")," tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = os.getPortalDimension('auxCustomPortal');\n")),Object(i.b)("h3",{id:"osgetdimensionaldepthdimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getDimensionalDepth(dimension)")),Object(i.b)("p",null,"Gets the distance that the player bot is from the given dimension."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the dimension that should be searched for."),Object(i.b)("p",null,"Possible return values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"-1",mdxType:"PossibleValueCode"},"The player bot cannot access the given dimension."),Object(i.b)(r.PossibleValueCode,{value:"0",mdxType:"PossibleValueCode"},"The player bot is in the given dimension. (dimension tag is true)"),Object(i.b)(r.PossibleValueCode,{value:"1",mdxType:"PossibleValueCode"},"The player bot is viewing the given dimension through a portal. (a portal tag is set to the dimension)")),Object(i.b)("h4",{id:"examples-95"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Get the distance to the "fun" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const distance = os.getDimensionalDepth("fun");\nif (distance === 0) {\n    os.toast("Player is in the fun dimension");\n} else if(distance === 1) {\n    os.toast("Player is viewing the fun dimension");\n} else {\n    os.toast("Player cannot access the fun dimension");\n}\n')),Object(i.b)("h3",{id:"configbot"},Object(i.b)("inlineCode",{parentName:"h3"},"configBot")),Object(i.b)("p",null,"Gets the config bot (formerly known as the player bot). This is the bot that represents the player's browser tab."),Object(i.b)("h4",{id:"examples-96"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the config bot and set a username on it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'configBot.tags.username = "bob";\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Open the sheet to "testDimension".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'configBot.tags.sheetPortal = "testDimension";\n')),Object(i.b)("h3",{id:"osgetcamerapositionportal"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getCameraPosition(portal?)")),Object(i.b)("p",null,"Gets the 3D position that the player's camera is at in the given portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the portal that the camera position should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The camera position in the page portal. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The camera position in the inventory portal.")),Object(i.b)("h4",{id:"examples-97"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the position of the player in the page portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = os.getCameraPosition("page");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the position of the player in the inventory portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = os.getCameraPosition("inventory");\n')),Object(i.b)("h3",{id:"osgetcamerarotationportal"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getCameraRotation(portal?)")),Object(i.b)("p",null,"Gets the 3D rotation that the player's camera is at in the given portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the portal that the camera rotation should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The camera rotation in the page portal. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The camera rotation in the inventory portal.")),Object(i.b)("h4",{id:"examples-98"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the rotation of the player in the page portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = os.getCameraRotation("page");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the rotation of the player in the inventory portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = os.getCameraRotation("inventory");\n')),Object(i.b)("h3",{id:"osgetfocuspointportal"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getFocusPoint(portal?)")),Object(i.b)("p",null,"Gets the 3D position that the player's camera is focusing on in the given portal."),Object(i.b)("p",null,"This is the same point that is highlighted when ",Object(i.b)(r.TagLink,{tag:"portalShowFocusPoint",mdxType:"TagLink"})," is enabled for a portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the portal that the camera focus point should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The camera focus point in the page portal. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The camera focus point in the inventory portal.")),Object(i.b)("h4",{id:"examples-99"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the focus point of the player in the page portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const focusPoint = os.getFocusPoint("page");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the focus point of the player in the inventory portal.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const focusPoint = os.getFocusPoint("inventory");\n')),Object(i.b)("h3",{id:"osgetpointerpositionpointer"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getPointerPosition(pointer?)")),Object(i.b)("p",null,"Gets the position that the given pointer is at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the pointer that the position should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"mouse",mdxType:"PossibleValueCode"},"The position of the mouse pointer. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The position of the left pointer."),Object(i.b)(r.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The position of the right pointer.")),Object(i.b)("h4",{id:"examples-100"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the position of the mouse pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = os.getPointerPosition("mouse");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the position of the left pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = os.getPointerPosition("left");\n')),Object(i.b)("h3",{id:"osgetpointerrotationpointer"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getPointerRotation(pointer?)")),Object(i.b)("p",null,"Gets the rotation that the given pointer is at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the pointer that the rotation should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"mouse",mdxType:"PossibleValueCode"},"The rotation of the mouse pointer. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The rotation of the left pointer."),Object(i.b)(r.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The rotation of the right pointer.")),Object(i.b)("h4",{id:"examples-101"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the rotation of the mouse pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = os.getPointerRotation("mouse");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the rotation of the left pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = os.getPointerRotation("left");\n')),Object(i.b)("h3",{id:"osgetpointerdirectionpointer"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getPointerDirection(pointer?)")),Object(i.b)("p",null,"Gets the direction that the given pointer is pointed in."),Object(i.b)("p",null,"Can be combined with ",Object(i.b)(r.ActionLink,{action:"math.intersectPlane(origin, direction)",mdxType:"ActionLink"})," to find where on the ground the pointer is pointing."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the pointer that the direction should be retrieved for.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"mouse",mdxType:"PossibleValueCode"},"The direction of the mouse pointer. (Default)"),Object(i.b)(r.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The direction of the left pointer."),Object(i.b)(r.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The direction of the right pointer.")),Object(i.b)("h4",{id:"examples-102"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the direction of the mouse pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const direction = os.getPointerDirection("mouse");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the direction of the left pointer.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const direction = os.getPointerDirection("left");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Find where the mouse is pointing on the ground.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const position = os.getPointerPosition();\nconst direction = os.getPointerDirection();\nconst groundPosition = math.intersectPlane(position, direction);\n")),Object(i.b)("h3",{id:"osgetinputstatecontroller-button"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getInputState(controller, button)")),Object(i.b)("p",null,"Gets the state of the given button on the given controller."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the name of the controller that the button state should be retrieved from.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"mousePointer",mdxType:"PossibleValueCode"},"The mouse."),Object(i.b)(r.PossibleValueCode,{value:"leftPointer",mdxType:"PossibleValueCode"},"The left controller. Sometimes available in VR."),Object(i.b)(r.PossibleValueCode,{value:"rightPointer",mdxType:"PossibleValueCode"},"The right controller. Sometimes available in VR."),Object(i.b)(r.PossibleValueCode,{value:"keyboard",mdxType:"PossibleValueCode"},"The keyboard."),Object(i.b)(r.PossibleValueCode,{value:"touch",mdxType:"PossibleValueCode"},"The touchscreen.")),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name of the button that you want to get the state of.\nPossible values are:"),Object(i.b)(r.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(i.b)(r.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The left mouse button. Only available on the mouse pointer. On mobile devices this will also be the state of the first touch."),Object(i.b)(r.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The right mouse button. Only available on the mouse pointer."),Object(i.b)(r.PossibleValueCode,{value:"middle",mdxType:"PossibleValueCode"},"The middle mouse button. Only available on the mouse pointer."),Object(i.b)(r.PossibleValueCode,{value:"primary",mdxType:"PossibleValueCode"},"The primary controller button. Only available on the left and right pointers."),Object(i.b)(r.PossibleValueCode,{value:"squeeze",mdxType:"PossibleValueCode"},"The squeeze controller button. Only available on the left and right pointers."),Object(i.b)(r.PossibleValue,{value:"Any Key",mdxType:"PossibleValue"},"The button for the given key. Only available on the keyboard."),Object(i.b)(r.PossibleValueCode,{value:"0",mdxType:"PossibleValueCode"},"The first touch. Only available on the touchscreen."),Object(i.b)(r.PossibleValueCode,{value:"1",mdxType:"PossibleValueCode"},"The second touch. Only available on the touchscreen."),Object(i.b)(r.PossibleValueCode,{value:"2",mdxType:"PossibleValueCode"},"The third touch. Only available on the touchscreen."),Object(i.b)(r.PossibleValueCode,{value:"3",mdxType:"PossibleValueCode"},"The fourth touch. Only available on the touchscreen."),Object(i.b)(r.PossibleValueCode,{value:"5",mdxType:"PossibleValueCode"},"The fifth touch. Only available on the touchscreen.")),Object(i.b)("h4",{id:"examples-103"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send a toast if the left mouse button is clicked.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const state = os.getInputState("mousePointer", "left");\nif (state) {\n    os.toast("Left mouse button is down!");\n}\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Send a toast if the shift key is down.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const state = os.getInputState("keyboard", "Shift");\nif (state) {\n    os.toast("Shift is down!");\n}\n')),Object(i.b)("h3",{id:"osgetinputlist"},Object(i.b)("inlineCode",{parentName:"h3"},"os.getInputList()")),Object(i.b)("p",null,"Gets the list of supported inputs. The returned strings can be used for the ",Object(i.b)("inlineCode",{parentName:"p"},"controller")," property in ",Object(i.b)(r.ActionLink,{action:"os.getInputState(controller, button)",mdxType:"ActionLink"})," calls."),Object(i.b)("h4",{id:"examples-104"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get a list of inputs and toast them.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const state = os.getInputList();\nos.toast(state);\n")),Object(i.b)("h3",{id:"osgotodimensiondimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.goToDimension(dimension)")),Object(i.b)("p",null,"Loads the given dimension into the ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal.\nTriggers the ",Object(i.b)(r.TagLink,{tag:"@onPortalChanged",mdxType:"TagLink"})," shout for the ",Object(i.b)("inlineCode",{parentName:"p"},"pagePortal"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the dimension that should be loaded."),Object(i.b)("h4",{id:"examples-105"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Load the ",Object(i.b)("inlineCode",{parentName:"li"},"abc")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.goToDimension('abc');\n")),Object(i.b)("h3",{id:"osgotourlurl"},Object(i.b)("inlineCode",{parentName:"h3"},"os.goToURL(url)")),Object(i.b)("p",null,"Redirects the current tab to the given URL. Useful for sending the player to another webpage or ambient experience."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," that the player should be sent to. Usually this is a website like ",Object(i.b)("inlineCode",{parentName:"p"},"https://example.com"),"."),Object(i.b)("h4",{id:"examples-106"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send the player to ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.goToURL("https://example.com");\n')),Object(i.b)("h3",{id:"osopenurlurl"},Object(i.b)("inlineCode",{parentName:"h3"},"os.openURL(url)")),Object(i.b)("p",null,"Opens a new tab with the given URL. Useful for opening another webpage without redirecting the current tab."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," that should be loaded. Usually this is a website like ",Object(i.b)("inlineCode",{parentName:"p"},"https://example.com"),"."),Object(i.b)("h4",{id:"examples-107"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Open ",Object(i.b)("inlineCode",{parentName:"li"},"https://example.com")," in a new tab.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.openURL("https://example.com");\n')),Object(i.b)("h3",{id:"osopendevconsole"},Object(i.b)("inlineCode",{parentName:"h3"},"os.openDevConsole()")),Object(i.b)("p",null,"Opens the developer console which contains a list of errors that scripts have issued."),Object(i.b)("h4",{id:"examples-108"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Open the developer console.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.openDevConsole();\n")),Object(i.b)("h3",{id:"osplaysoundurl"},Object(i.b)("inlineCode",{parentName:"h3"},"os.playSound(url)")),Object(i.b)("p",null,"Loads and plays the audio (MP3, WAV, etc.) from the given URL."),Object(i.b)("p",null,"Returns a promise that resolves with the ID of the sound when the sound starts playing.\nThe sound ID can then be used with ",Object(i.b)(r.ActionLink,{action:"os.cancelSound(soundID)",mdxType:"ActionLink"})," to stop the sound."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," of the audio/music/sound clip that should be played."),Object(i.b)("h4",{id:"examples-109"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Play a MP3 file from another website.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.playSound("https://www.testsounds.com/track06.mp3");\n')),Object(i.b)("h3",{id:"osbuffersoundurl"},Object(i.b)("inlineCode",{parentName:"h3"},"os.bufferSound(url)")),Object(i.b)("p",null,"Loads the audio from the given URL without playing it.\nReturns a promise that resolves once the sound has been loaded."),Object(i.b)("p",null,"This is useful for pre-loading a sound so that there will be no delay when playing it with ",Object(i.b)(r.ActionLink,{action:"os.playSound(url)",mdxType:"ActionLink"}),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," of the audio/music/sound clip that should be loaded."),Object(i.b)("h4",{id:"examples-110"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Pre-load a MP3 fiel from another website.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.bufferSound("https://www.testsounds.com/track06.mp3");\n')),Object(i.b)("h3",{id:"oscancelsoundsoundid"},Object(i.b)("inlineCode",{parentName:"h3"},"os.cancelSound(soundID)")),Object(i.b)("p",null,"Cancels the sound with the given ID.\nReturns a promise that resolves once the sound has been canceled."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ID of the sound that was returned from ",Object(i.b)(r.ActionLink,{action:"os.playSound(url)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-111"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Cancel a sound that is playing.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const id = await os.playSound("https://www.testsounds.com/track06.mp3");\nos.cancelSound(id);\n')),Object(i.b)("h3",{id:"osisindimensiondimension"},Object(i.b)("inlineCode",{parentName:"h3"},"os.isInDimension(dimension)")),Object(i.b)("p",null,"Gets whether the given dimension is loaded into the ",Object(i.b)(r.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the dimension to check for."),Object(i.b)("h4",{id:"examples-112"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a toast if the player is viewing the ",Object(i.b)("inlineCode",{parentName:"li"},"abc")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'if (os.isInDimension("abc")) {\n    os.toast("In the dimension!");\n}\n')),Object(i.b)("h3",{id:"osinsheet"},Object(i.b)("inlineCode",{parentName:"h3"},"os.inSheet()")),Object(i.b)("p",null,"Gets whether the player is in the sheet dimension."),Object(i.b)("h4",{id:"examples-113"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Show a toast if the player is viewing the sheet.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'if (os.inSheet()) {\n    os.toast("You are in the sheet!");\n}\n')),Object(i.b)("h3",{id:"osimportauxurlorjson"},Object(i.b)("inlineCode",{parentName:"h3"},"os.importAUX(urlOrJSON)")),Object(i.b)("p",null,"Imports an AUX file from the given string."),Object(i.b)("p",null,"If the string contains JSON, then the JSON will be imported as if it was a .aux file.\nIf the string is a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL"),", then it will be downloaded and imported."),Object(i.b)("p",null,"This is useful to quickly download a AUX file and load it into the current server from a site such as ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://gist.github.com/"}),"https://gist.github.com/"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the JSON or URL that the AUX file should be imported from."),Object(i.b)("h4",{id:"examples-114"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Import an AUX file from a file.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const path = '/drives/myFile.aux';\nos.importAUX(path);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Import an AUX file from JSON.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'os.importAUX(`{\n    "version": 1,\n    "state": {\n        "079847e4-6a58-423d-9a86-8d4ef8be5970": {\n            "id": "079847e4-6a58-423d-9a86-8d4ef8be5970",\n            "tags": {\n                "color": "red"\n            }\n        }\n    }\n}`);\n')),Object(i.b)("h3",{id:"osversion"},Object(i.b)("inlineCode",{parentName:"h3"},"os.version()")),Object(i.b)("p",null,"Gets information about the version of CasualOS."),Object(i.b)("p",null,"The returned value is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const returned: {\n    hash: string;\n    version: string;\n    major: number;\n    minor: number;\n    patch: number;\n};\n")),Object(i.b)("h4",{id:"examples-115"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the current version and popup a message with it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const info = os.version();\nos.toast(info.version);\n")),Object(i.b)("h3",{id:"osdevice"},Object(i.b)("inlineCode",{parentName:"h3"},"os.device()")),Object(i.b)("p",null,"Gets information about the device that the player is using."),Object(i.b)("p",null,"The returned value is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const returned: {\n    supportsAR: boolean;\n    supportsVR: boolean;\n    isCollaborative: boolean;\n};\n")),Object(i.b)("h4",{id:"examples-116"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the device info and popup a message with it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const info = os.device();\nos.toast(info);\n")),Object(i.b)("h3",{id:"osiscollaborative"},Object(i.b)("inlineCode",{parentName:"h3"},"os.isCollaborative()")),Object(i.b)("p",null,"Gets whether the current session was loaded with collaborative features enabled."),Object(i.b)("p",null,"When true, CasualOS will attempt to sync the shared (including ",Object(i.b)("inlineCode",{parentName:"p"},"tempShared")," and ",Object(i.b)("inlineCode",{parentName:"p"},"remoteTempShared"),") spaces with other players.\nWhen false, CasualOS will treat all the shared spaces like they are all ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal"),"."),Object(i.b)("h4",{id:"examples-117"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Toast whether the current session is collaborative.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const isCollaborative = os.isCollaborative();\n\nos.toast(isCollaborative ? "We are collaborative!" : "We are not collaborative!");\n')),Object(i.b)("h3",{id:"osrequestfullscreenmode"},Object(i.b)("inlineCode",{parentName:"h3"},"os.requestFullscreenMode()")),Object(i.b)("p",null,"Attempts to enter fullscreen mode. Depending on which web browser the player is using, this might ask for permission to go fullscreen."),Object(i.b)("p",null,"Note that iPhones currently don't support fullscreen mode."),Object(i.b)("h4",{id:"examples-118"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Enter fullscreen mode.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.requestFullscreenMode();\n")),Object(i.b)("h3",{id:"osexitfullscreenmode"},Object(i.b)("inlineCode",{parentName:"h3"},"os.exitFullscreenMode()")),Object(i.b)("p",null,"Exists fullscreen mode."),Object(i.b)("h4",{id:"examples-119"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Exit fullscreen mode.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"os.exitFullscreenMode();\n")),Object(i.b)("h2",{id:"server-actions"},"Server Actions"),Object(i.b)("h3",{id:"serverbackuptogithubauth"},Object(i.b)("inlineCode",{parentName:"h3"},"server.backupToGithub(auth)")),Object(i.b)("p",null,"Saves all the servers to GitHub as a private Gist using the given authentication token."),Object(i.b)("p",null,"Just like ",Object(i.b)(r.ActionLink,{action:"server.shell(script)",mdxType:"ActionLink"}),", you need "),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the Github Personal Access Token that should be used to grant access to your Github account.\nSee ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line"}),"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line")),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"By default, backing up to GitHub is disabled on a server. To enable it, you have to write a custom ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-120"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Backup all the servers to a Github Gist.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.backupToGithub('your auth token');\n")),Object(i.b)("h3",{id:"serverbackupasdownloadtarget"},Object(i.b)("inlineCode",{parentName:"h3"},"server.backupAsDownload(target)")),Object(i.b)("p",null,"Saves all the servers to a zip file and downloads it to the session matching the given target."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object that indicates which session the zip file should be downloaded to."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"By default, backing up as a download is disabled on a server. To enable it, you have to write a custom ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-121"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Backup and download to this tab.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.backupAsDownload({\n    session: getID(configBot)\n});\n")),Object(i.b)("h3",{id:"serverfinishcheckoutoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"server.finishCheckout(options)")),Object(i.b)("p",null,"Finishes the checkout process by charging payment to the player.\nBest used during the ",Object(i.b)(r.TagLink,{tag:"@onCheckout",mdxType:"TagLink"})," shout."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," are the options needed to finish the checkout process."),Object(i.b)("h4",{id:"examples-122"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Finish the checkout process.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.finishCheckout({\n    secretKey: 'YOUR_SECRET_API_KEY',\n    \n    token: 'token from onCheckout',\n\n    // 1000 cents == $10.00\n    amount: 1000,\n    currency: 'usd',\n    description: 'Description for purchase'\n});\n")),Object(i.b)("h3",{id:"serversetupserverserver-botormod"},Object(i.b)("inlineCode",{parentName:"h3"},"server.setupServer(server, botOrMod?)")),Object(i.b)("p",null,"Sends an action to the server that will create the given server if it does not exist and places a clone of the given bot or mod in it.\nThe new bot will only be added to the server if the server did not exist.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the server has been setup."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ID of the server that should be setup."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the bot or mod that should be cloned into the new server. After the bot is created, ",Object(i.b)(r.TagLink,{tag:"@onCreate",mdxType:"TagLink"})," will be triggered."),Object(i.b)("h4",{id:"examples-123"},"Examples:"),Object(i.b)("p",null,"Before ",Object(i.b)("inlineCode",{parentName:"p"},"server.setupServer()")," will work, you need to setup the ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," tag to execute events from remote devices.\nThis is because when you run ",Object(i.b)("inlineCode",{parentName:"p"},"server.setupServer()"),' from a PC or phone (a.k.a. A "remote device"), it needs to send an event to the server to actually create the new server.\nBy default, AUX does not perform actions that are received from a remote device. You must instruct AUX to execute these yourself.'),Object(i.b)("p",null,"Ensure that ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," is setup properly.\nThe following script will execute ",Object(i.b)("inlineCode",{parentName:"p"},"setup_server")," events that were sent from other devices:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"// Device actions are actions that were sent to this computer from another device\nif (that.action.type === 'device') {\n\n    // The setup_server action is the action that is created\n    // from server.setupServer()\n    if (that.action.event.type === 'setup_server') {\n\n        // Execute the setup_server action\n        action.perform(that.action.event);\n    }\n}\n")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Create the "test" server:')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupServer("test");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Create the "test" server with a bot inside it:')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupServer("test", {\n    "name": "bob",\n    "color": "red"\n});\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Create the "test" server with a bot that places a bot in the "abc" dimension:')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupServer("test", {\n    "onCreate": `@\n        create({\n            creator: null,\n            label: "This is in the dimension!",\n            color: "blue",\n            abc: true\n        });\n\n        destroy(this);\n    `\n});\n')),Object(i.b)("h3",{id:"serverexportgpiopin-mode"},Object(i.b)("inlineCode",{parentName:"h3"},"server.exportGpio(pin, mode)")),Object(i.b)("p",null,"This exports a GPIO pin (BCM) on the physical server so that you can access them as inputs or outputs.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been exported."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'in' or 'out' to set the pin (BCM) as an input pin or an output pin."),Object(i.b)("h4",{id:"examples-124"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Export pin 17 as output.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\n")),Object(i.b)("h3",{id:"serverunexportgpiopin-mode"},Object(i.b)("inlineCode",{parentName:"h3"},"server.unexportGpio(pin, mode)")),Object(i.b)("p",null,"This unexports a GPIO pin (BCM) on the physical server so that it's freed up once you're done with it.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been unexported."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(i.b)("h4",{id:"examples-125"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Unexport pin 17.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\n\nserver.unexportGpio(led_pin);\n")),Object(i.b)("h3",{id:"serversetgpiopin-value"},Object(i.b)("inlineCode",{parentName:"h3"},"server.setGpio(pin, value)")),Object(i.b)("p",null,"This sets a GPIO pin (BCM) on the physical server to either HIGH (1) or LOW (0).\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is '0' or '1' to set the pin (BCM) as an HIGH or LOW."),Object(i.b)("h4",{id:"examples-126"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set pin 17 to LOW or 0.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\nserver.setGpio(led_pin, 0);\n")),Object(i.b)("h3",{id:"servergetgpiopin"},Object(i.b)("inlineCode",{parentName:"h3"},"server.getGpio(pin)")),Object(i.b)("p",null,"This reads a given GPIO pin (BCM) and returns the state/value of the pin.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(i.b)("h4",{id:"examples-127"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Shouts the state of pin 17.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\nlet state = await server.getGpio(led_pin);\nos.shout(state);\n\n")),Object(i.b)("h3",{id:"serverrpioinitoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioInit(options)")),Object(i.b)("p",null,"Initialise the bcm2835 library. This will be called automatically by ",Object(i.b)("inlineCode",{parentName:"p"},".open()")," using the default option values if not called explicitly.",Object(i.b)("br",{parentName:"p"}),"\n","The action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rpio has been initialized."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object with the settings to initialize with."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"gpiomem")," can be either ",Object(i.b)("inlineCode",{parentName:"p"},"true")," or ",Object(i.b)("inlineCode",{parentName:"p"},"false"),".\n",Object(i.b)("strong",{parentName:"p"},"mapping")," can be either ",Object(i.b)("inlineCode",{parentName:"p"},"gpio")," or ",Object(i.b)("inlineCode",{parentName:"p"},"physical"),".\n",Object(i.b)("strong",{parentName:"p"},"mock")," can be any of ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-b-r1")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-a")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-b")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-a+")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-b+")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-2")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-3")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-zero")," or ",Object(i.b)("inlineCode",{parentName:"p"},"raspi-zero-w"),".\n",Object(i.b)("strong",{parentName:"p"},"close_on_exit")," can be ",Object(i.b)("inlineCode",{parentName:"p"},"true")," or ",Object(i.b)("inlineCode",{parentName:"p"},"false"),". It is recommended to always be ",Object(i.b)("inlineCode",{parentName:"p"},"true"),"."),Object(i.b)("h4",{id:"examples-128"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Initialize rpio with the default options explicitly stated.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options = {\n        gpiomem: true,          /* Use /dev/gpiomem */\n        mapping: 'physical',    /* Use the P1-P40 numbering scheme */\n        mock: undefined,        /* Emulate specific hardware in mock mode */\n        close_on_exit: true,    /* On node process exit automatically close rpio */\n}\n\nserver.rpioInit(options);\n")),Object(i.b)("h3",{id:"serverrpioexit"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioExit()")),Object(i.b)("p",null,"Shuts down the rpio library, unmapping and clearing all memory maps. By default this will happen automatically.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rpio has been exited."),Object(i.b)("h4",{id:"examples-129"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Manually cleanup rpio.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioExit();\n")),Object(i.b)("h3",{id:"serverrpioopenpin-mode-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioOpen(pin, mode, options)")),Object(i.b)("p",null,"Open a pin for input or output.\nFor input pins, ",Object(i.b)("inlineCode",{parentName:"p"},"options")," can be used to configure the internal pullup or pulldown resistors.\nFor output pins, ",Object(i.b)("inlineCode",{parentName:"p"},"options")," defines the initial state of the pin, rather than having to issue a separate ",Object(i.b)("inlineCode",{parentName:"p"},".write()")," call.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been configured."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'INPUT', 'OUTPUT', or 'PWM' to set the pin as an input pin, an output pin, or for use with PWM."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and either 'HIGH', 'LOW', 'PULL_OFF', 'PULL_DOWN', or 'PULL_UP' to set the pin state."),Object(i.b)("h4",{id:"examples-130"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Configure pin 11 as output.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT');\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Configure pin 11 as output and initialize the pin as 'LOW'.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Configure pin 11 as input and initialize the pin as 'PULL_DOWN'.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'INPUT', 'PULL_DOWN');\n")),Object(i.b)("h3",{id:"serverrpiomodepin-mode-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioMode(pin, mode, options)")),Object(i.b)("p",null,"Switch a pin that has already been opened in one mode to a different mode.\nThis is provided primarily for performance reasons, as it avoids some of the setup work done by ",Object(i.b)("inlineCode",{parentName:"p"},".open()"),".\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been configured."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'INPUT', 'OUTPUT', or 'PWM' to set the pin as an input pin, an output pin, or for use with PWM."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and either 'HIGH', 'LOW', 'PULL_OFF', 'PULL_DOWN', or 'PULL_UP' to set the pin state."),Object(i.b)("h4",{id:"examples-131"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Change pin 11 mode to output and initialize the pin as 'LOW'.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'INPUT');\nserver.rpioMode(led_pin, 'OUTPUT', 'LOW');\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Change pin 11 mode to input and initialize the pin as 'PULL_DOWN'.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT');\nserver.rpioMode(led_pin, 'INPUT', 'PULL_DOWN');\n")),Object(i.b)("h3",{id:"serverrpioreadpin"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioRead(pin)")),Object(i.b)("p",null,"Read the current value of pin, returning either ",Object(i.b)("inlineCode",{parentName:"p"},"1")," (high) or ",Object(i.b)("inlineCode",{parentName:"p"},"0")," (low).\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("h4",{id:"examples-132"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Shout the state of pin 11.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\n\nserver.rpioOpen(led_pin, 'OUTPUT');\nlet state = await server.rpioRead(led_pin);\n\nos.shout(state);\n\n")),Object(i.b)("h3",{id:"serverrpioreadsequencepin-length"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioReadSequence(pin, length)")),Object(i.b)("p",null,"Read length bits from pin into buffer as fast as possible.\nThis is useful for devices which send out information faster than the JavaScript function call overhead can handle, e.g. if you need microsecond accuracy.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the length of the buffer to read."),Object(i.b)("h4",{id:"examples-133"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Read the value of Pin 16 10 times in a row")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioReadSequence(16, 10);\n")),Object(i.b)("h3",{id:"serverrpiowritepin-value"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioWrite(pin, value)")),Object(i.b)("p",null,"Set the specified pin either high or low.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'HIGH' or 'LOW' to set the pin as an HIGH or LOW."),Object(i.b)("h4",{id:"examples-134"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set pin 11 to HIGH.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\n\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioWrite(led_pin, 'HIGH');\n")),Object(i.b)("h3",{id:"serverrpiowritesequencepin-buffer"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioWriteSequence(pin, buffer)")),Object(i.b)("p",null,"Write length bits to pin from buffer as fast as possible.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been written to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is array of numbers."),Object(i.b)("h4",{id:"examples-135"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Write a sequence of numbers to Pin 13 ")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"\nserver.rpioWriteSequence(13, [10, 10]);\n\n")),Object(i.b)("h3",{id:"serverrpioreadpadgroup-bitmask"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioReadpad(group, bitmask)")),Object(i.b)("p",null,"Read the current state of the GPIO pad control for the specified GPIO group.\nOn current models of Raspberry Pi there are three groups with corresponding defines:"),Object(i.b)("p",null,"PAD_GROUP_0_27: GPIO0 - GPIO27. Use this for the main GPIO header.\nPAD_GROUP_28_45: GPIO28 - GPIO45. Use this to configure the P5 header.\nPAD_GROUP_46_53: GPIO46 - GPIO53. Internal, you probably won't need this.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The value returned will be true/false for 'slew' and 'hysteresis'.\nThe value returned will be the drive current in mA for 'current'."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the GPIO group you want to read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the bitmask you want to check."),Object(i.b)("h4",{id:"examples-136"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Check if slew is unlimited or limited on gpio group 0-27.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.rpioReadPad('PAD_GROUP_0_27', 'slew'); // Returns true/false which is unlimited/limited\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Check if hysteresis is enabled or disabled on gpio group 0-27.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.rpioReadPad('PAD_GROUP_0_27', 'hysteresis'); // Returns true/false which is enabled/disabled\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Check the drive current in mA on gpio group 0-27.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.rpioReadPad('PAD_GROUP_0_27', 'current'); // Returns an even number 2-16 in mA\n")),Object(i.b)("h3",{id:"serverrpiowritepadgroup-slew-hysteresis-current"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioWritepad(group, slew?, hysteresis?, current?)")),Object(i.b)("p",null,"Write the state of the GPIO pad control for the specified GPIO group.\nOn current models of Raspberry Pi there are three groups with corresponding defines:"),Object(i.b)("p",null,"PAD_GROUP_0_27: GPIO0 - GPIO27. Use this for the main GPIO header.\nPAD_GROUP_28_45: GPIO28 - GPIO45. Use this to configure the P5 header.\nPAD_GROUP_46_53: GPIO46 - GPIO53. Internal, you probably won't need this.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pad control has been written to."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the GPIO group you want to read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a boolean to set the slew rate to unlimited or limited."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is a boolean to enable or disable hysteresis."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is an even number between 2-16 to set the drive current."),Object(i.b)("h4",{id:"examples-137"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Change the gpio group 0-27 to enable hysteresis and set the drive current to 12mA. Slew rate is unchanged.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioWritepad('PAD_GROUP_0_27', undefined, true, 12);\n")),Object(i.b)("h3",{id:"serverrpiopudpin-state"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioPud(pin, state)")),Object(i.b)("p",null,"Configure the pin's internal pullup or pulldown resistors.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been configured."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'PULL_OFF', 'PULL_DOWN' or 'PULL_UP' and can be used to configure the pin's resistors."),Object(i.b)("h4",{id:"examples-138"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Configure pin 11 to enable the pulldown resistor.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioPud(led_pin, 'PULL_DOWN');\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Disable configured resistors on pin 11.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioPud(led_pin, 'PULL_OFF');\n")),Object(i.b)("h3",{id:"serverrpiopollpin-cb-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioPoll(pin, cb, options)")),Object(i.b)("p",null,"Watch ",Object(i.b)("inlineCode",{parentName:"p"},"pin")," for changes and execute the callback ",Object(i.b)("inlineCode",{parentName:"p"},"cb()")," on events.\nTo stop watching for ",Object(i.b)("inlineCode",{parentName:"p"},"pin")," changes, call ",Object(i.b)("inlineCode",{parentName:"p"},".rpioPoll()")," again, setting the callback to ",Object(i.b)("inlineCode",{parentName:"p"},"null")," (or anything else which isn't a function).\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when "),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the callback executed on events."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is 'POLL_LOW', 'POLL_HIGH' or 'POLL_BOTH' and can be optionally used to watch for specific events."),Object(i.b)("h4",{id:"examples-139"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Poll pin 15 forever, and poll pin 16 to stop all polling.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"function nuke_button(pin) {\n        console.log('Nuke button on pin %d pressed', pin);\n        /* No need to nuke more than once. */\n        server.rpioPoll(pin, null);\n}\n \nfunction regular_button(pin) {\n        /* Watch pin 15 forever. */\n        console.log('Button event on pin %d, is now %d', pin, server.rpioRead(pin));\n}\n \n/*\n * Pin 15 watches for both high and low transitions.  Pin 16 only watches for\n * high transitions (e.g. the nuke button is pushed).\n */\nserver.rpioPoll(15, regular_button);\nserver.rpioPoll(16, nuke_button, 'POLL_HIGH');\n")),Object(i.b)("h3",{id:"serverrpioclosepin-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioClose(pin, options)")),Object(i.b)("p",null,"Indicate that the pin will no longer be used, and clear any poll events associated with it.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the pin has been closed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is 'PIN_RESET' or 'PIN_PRESERVE' and can be used to configure the state that pin will be left in after close."),Object(i.b)("h4",{id:"examples-140"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Close pin 11 and let the state reset by default.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioClose(led_pin);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Close pin 11 and preserve the state.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioClose(led_pin, 'PIN_PRESERVE');\n")),Object(i.b)("h3",{id:"serverrpioi2cbegin"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CBegin()")),Object(i.b)("p",null,"Initializes i\xb2c for use.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when i\xb2c has been initialized."),Object(i.b)("h4",{id:"examples-141"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Initialize i\xb2c.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CBegin();\n")),Object(i.b)("h3",{id:"serverrpioi2csetslaveaddress"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CSetSlaveAddress()")),Object(i.b)("p",null,"Configure the slave address. This is between ",Object(i.b)("inlineCode",{parentName:"p"},"0 - 0x7f"),".\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the slave address has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a number. The slave address to set."),Object(i.b)("h4",{id:"examples-142"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the slave address.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CSetSlaveAddress(0x20);\n")),Object(i.b)("h3",{id:"serverrpioi2csetbaudraterate"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CSetBaudRate(rate)")),Object(i.b)("p",null,"Set the baud rate. Directly set the speed in hertz.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rate has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the i2c refresh rate in hertz."),Object(i.b)("h4",{id:"examples-143"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the rate to 100kHz.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CSetBaudRate(100000);\n")),Object(i.b)("h3",{id:"serverrpioi2csetclockdividerrate"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CSetClockDivider(rate)")),Object(i.b)("p",null,"Set the baud rate. Set it based on a divisor of the base 250MHz rate.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rate has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the i2c refresh rate based on a divisor of the base 250MHz rate."),Object(i.b)("h4",{id:"examples-144"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the rate to 100kHz. (250MHz / 2500 = 100kHz)")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CSetClockDivider(2500);\n")),Object(i.b)("h3",{id:"serverrpioi2creadrx-length"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CRead(rx, length?)")),Object(i.b)("p",null,"Set the baud rate. Set it based on a divisor of the base 250MHz rate.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rate has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the buffer to read."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the length of the buffer."),Object(i.b)("h4",{id:"examples-145"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Reads 16 bytes.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.rpioI2CRead([32], 16);\n")),Object(i.b)("h3",{id:"serverrpioi2cwritetx-length"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CWrite(tx, length?)")),Object(i.b)("p",null,"Set the baud rate. Set it based on a divisor of the base 250MHz rate.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when rate has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the buffer to write."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the length of the buffer."),Object(i.b)("h4",{id:"examples-146"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Sends 4 bytes.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CWrite([0x0b, 0x0e, 0x0e, 0x0f]);\n")),Object(i.b)("h3",{id:"serverrpioi2cend"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioI2CEnd()")),Object(i.b)("p",null,"Turn off the i\xb2c interface and return the pins to GPIO.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when i\xb2c has been turned off."),Object(i.b)("h4",{id:"examples-147"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Turn off i\xb2c.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioI2CEnd();\n")),Object(i.b)("h3",{id:"serverrpiopwmsetclockdividerrate"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioPWMSetClockDivider(rate)")),Object(i.b)("p",null,"Set the PWM refresh rate.\nThis is a power-of-two divisor of the base 19.2MHz rate, with a maximum value of 4096 (4.6875kHz).\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the rate has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a power-of-two divisor."),Object(i.b)("h4",{id:"examples-148"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set PWM refresh rate to 300kHz")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioOpen(12, 'PWM');\nserver.rpioPWMSetClockDivider(64);\n")),Object(i.b)("h3",{id:"serverrpiopwmsetrangepin-range"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioPWMSetRange(pin, range)")),Object(i.b)("p",null,"Set the PWM range for a pin.\nThis determines the maximum pulse width.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when maximum width has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the maximum width of your modulation."),Object(i.b)("h4",{id:"examples-149"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the max width to 1024.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioOpen(12, 'PWM');\nserver.rpioPWMSetRange(12, 1024);\n")),Object(i.b)("h3",{id:"serverrpiopwmsetdatapin-width"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioPWMSetData(pin, width)")),Object(i.b)("p",null,"Set the PWM width for a pin.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the width has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the width of your modulation."),Object(i.b)("h4",{id:"examples-150"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the current width to 512.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioOpen(12, 'PWM');\nserver.rpioPWMSetData(12, 512);\n")),Object(i.b)("h3",{id:"serverrpiospibegin"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPIBegin()")),Object(i.b)("p",null,"Initiate SPI mode.\nOnce SPI is enabled, the SPI pins are unavailable for GPIO use until ",Object(i.b)("inlineCode",{parentName:"p"},"server.rpioSPIEnd()")," is called.\nSPI requires ",Object(i.b)("inlineCode",{parentName:"p"},"gpiomem: false")," and root privileges.\n",Object(i.b)("inlineCode",{parentName:"p"},"server.rpioSPIBegin()")," will call ",Object(i.b)("inlineCode",{parentName:"p"},"server.rpioInit()")," with the appropriate values if you do not explicitly call it yourself.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when SPI mode has been initiated."),Object(i.b)("h4",{id:"examples-151"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Initiate SPI mode.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPIBegin();\n")),Object(i.b)("h3",{id:"serverrpiospichipselectvalue"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPIChipSelect(value)")),Object(i.b)("p",null,"Choose which of the chip select / chip enable pins to control.\nValue | Pin\n------|---------------------\n0   | SPI_CE0 (24 / GPIO8)\n1   | SPI_CE1 (26 / GPIO7)\n2   | Both\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when SPI pin(s) have been enabled."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that corresponds to the pin set you want."),Object(i.b)("h4",{id:"examples-152"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Enable SPI_CE0.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPIChipSelect(0);\n")),Object(i.b)("h3",{id:"serverrpiospisetcspolarityvalue-polarity"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPISetCSPolarity(value, polarity)")),Object(i.b)("p",null,"If your device's CE pin is active high, use this to change the polarity."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Value"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Pin"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SPI_CE0 (24 / GPIO8)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"SPI_CE1 (26 / GPIO7)")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Both")))),Object(i.b)("p",null,"Setting the polarity to 'HIGH' means it will activate on 'HIGH'.\nSetting the polarity to 'LOW' means it will activate on 'LOW'.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when polarity has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that corresponds to the pin set you want."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the polarity the pin will activate on."),Object(i.b)("h4",{id:"examples-153"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set SPI_CE0 HIGH to activate.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPISetCSPolarity(0, 'HIGH');\n")),Object(i.b)("h3",{id:"serverrpiospisetclockdividerrate"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPISetClockDivider(rate)")),Object(i.b)("p",null,"Set the SPI clock speed.\nThe rate is an even divisor of the base 250MHz rate ranging between 0 and 65536.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the clock speed has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an even divisor of the base 250MHz rate."),Object(i.b)("h4",{id:"examples-154"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set SPI speed to 1.95MHz")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPISetClockDivider(128);\n")),Object(i.b)("h3",{id:"serverrpiospisetdatamodemode"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPISetDataMode(mode)")),Object(i.b)("p",null,"Set the SPI Data Mode."),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Mode"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"CPOL"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"CPHA"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"2"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"0")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"3"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"1")))),Object(i.b)("p",null,"The action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when a data mode has been set."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the data mode you want to set."),Object(i.b)("h4",{id:"examples-155"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Set the data mode to 0.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPISetDataMode(0);\n")),Object(i.b)("h3",{id:"serverrpiospitransfertx"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPITransfer(tx)")),Object(i.b)("p",null,"Send and recieve data via SPI.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a buffer the same size as the buffer sent."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an array of 8bit chunks (bytes) of information to send."),Object(i.b)("h4",{id:"examples-156"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send the bytes ","[0x01, 0x01]"," and recieve the response from the server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.rpioSPITransfer([1,1]);\n")),Object(i.b)("h3",{id:"serverrpiospiwritetx"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPIWrite(tx)")),Object(i.b)("p",null,"Send data via SPI.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the buffer has been sent."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an array of 8bit chunks (bytes) of information to send."),Object(i.b)("h4",{id:"examples-157"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Send the bytes ","[0x01, 0x01]",".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPIWrite([1,1]);\n")),Object(i.b)("h3",{id:"serverrpiospiend"},Object(i.b)("inlineCode",{parentName:"h3"},"server.rpioSPIEnd()")),Object(i.b)("p",null,"Release the pins back to general purpose use.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves when the clock speed has been set."),Object(i.b)("h4",{id:"examples-158"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Release the pins back to general purpose use.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioSPIEnd();\n")),Object(i.b)("h3",{id:"serverserialconnect"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialConnect()")),Object(i.b)("p",null,"Establish the connection to the bluetooth serial device. Currently only one device is supported at a time.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves on the 'open' event."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a string with the path to the device.\nThe ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is an object with the options you want to connect to the device with.\n{boolean} ","[autoOpen=true]"," Automatically opens the port on ",Object(i.b)("inlineCode",{parentName:"p"},"nextTick"),".\n{number=} ","[baudRate=9600]"," The baud rate of the port to be opened. This should match one of the commonly available baud rates, such as 110, 300, 1200, 2400, 4800, 9600, 14400, 19200, 38400, 57600, or 115200. Custom rates are supported best effort per platform. The device connected to the serial port is not guaranteed to support the requested baud rate, even if the port itself supports that baud rate.\n{number} ","[dataBits=8]"," Must be one of these: 8, 7, 6, or 5.\n{number} ","[highWaterMark=65536]"," The size of the read and write buffers defaults to 64k.\n{boolean} ","[lock=true]"," Prevent other processes from opening the port. Windows does not currently support ",Object(i.b)("inlineCode",{parentName:"p"},"false"),".\n{number} ","[stopBits=1]"," Must be one of these: 1 or 2.\n{string} ","[parity=none]"," Must be one of these: 'none', 'even', 'mark', 'odd', 'space'.\n{boolean} ","[rtscts=false]"," flow control setting\n{boolean} ","[xon=false]"," flow control setting\n{boolean} ","[xoff=false]"," flow control setting\n{boolean} ","[xany=false]"," flow control setting\n{object=} bindingOptions sets binding-specific options\n{Binding=} Binding The hardware access binding. ",Object(i.b)("inlineCode",{parentName:"p"},"Bindings")," are how Node-Serialport talks to the underlying system. Will default to the static property ",Object(i.b)("inlineCode",{parentName:"p"},"Serialport.Binding"),".\n{number} ","[bindingOptions.vmin=1]"," see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://linux.die.net/man/3/termios"}),Object(i.b)("inlineCode",{parentName:"a"},"man termios"))," LinuxBinding and DarwinBinding\n{number} ","[bindingOptions.vtime=0]"," see ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"http://linux.die.net/man/3/termios"}),Object(i.b)("inlineCode",{parentName:"a"},"man termios"))," LinuxBinding and DarwinBinding"),Object(i.b)("h4",{id:"examples-159"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Connect to the device '/dev/rfcomm0' with the baudRate option set to 9600. Give it the name \"device01\" so the server can keep track of it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n')),Object(i.b)("h3",{id:"serverserialstream"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialStream()")),Object(i.b)("p",null,"Parses and returns the serial stream to the event tag ",Object(i.b)(r.TagLink,{tag:"@onSerialData",mdxType:"TagLink"}),".\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Shouts data to the ",Object(i.b)(r.TagLink,{tag:"@onSerialData",mdxType:"TagLink"})," event tag."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot id of the bot you want to stream the data to.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a friendly device name."),Object(i.b)("h4",{id:"examples-160"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'In the first tag, create the serial connection and stream the data. Pass the name "device01" so the server can find the device.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'\nawait server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\nserver.serialStream("1a2b3", "device01");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"In the second tag, see the data update. This must be an ",Object(i.b)(r.TagLink,{tag:"@onSerialData",mdxType:"TagLink"})," event tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"tags.data=that;\n")),Object(i.b)("h3",{id:"serverserialopen"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialOpen()")),Object(i.b)("p",null,"Opens the serial connection if you set the option in serialConnect to {autoOpen: false}\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name."),Object(i.b)("p",null,"Returns a promise that resolves on the 'open' event."),Object(i.b)("h4",{id:"examples-161"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Create the serial connection with autoOpen false and manually open it afterwards. Give it the name "device01" so the server can keep track of it.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n  autoOpen: false\n});\n\nawait server.serialOpen();\n')),Object(i.b)("h3",{id:"serverserialupdate"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialUpdate()")),Object(i.b)("p",null,"Updates the SerialPort object with a new baudRate.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is an object with the baudRate you want to update the connection with.\nThe ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is a callback."),Object(i.b)("h4",{id:"examples-162"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection, then update the baudRate.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialUpdate("device01", {baudRate: 14400});\n')),Object(i.b)("h3",{id:"serverserialwrite"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialWrite()")),Object(i.b)("p",null,"Writes the provided data/command to the device. Might be single-quote/double-quote sensitive.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a string with the data/command to send.\nThe ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the encoding, if chunk is a string. Defaults to 'utf8'. Also accepts 'utf16le', 'latin1', 'ascii', 'base64', 'binary', 'ucs2', and 'hex'\nThe ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is a callback."),Object(i.b)("h4",{id:"examples-163"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Send some data encoded as utf8.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect(""device01", /dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialWrite("device01", \'#READ:0\', \'utf8\');\n')),Object(i.b)("h3",{id:"serverserialread"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialRead()")),Object(i.b)("p",null,"Request a number of bytes from the device.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"If no data is available to be read, null is returned."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the number of bytes to read."),Object(i.b)("h4",{id:"examples-164"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Read 8 bytes of data.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialRead("device01", 8);\n')),Object(i.b)("h3",{id:"serverserialclose"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialClose()")),Object(i.b)("p",null,"Closes an open connection.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"Returns a promise that resolves on the 'close' event."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name.\nThe ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is a callback."),Object(i.b)("h4",{id:"examples-165"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Close the serial connection.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialClose("device01");\n')),Object(i.b)("h3",{id:"serverserialflush"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialFlush()")),Object(i.b)("p",null,"Flush discards data that has been received but not read, or written but not transmitted by the operating system.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name."),Object(i.b)("p",null,"Returns a promise that resolves once the data has been flushed."),Object(i.b)("h4",{id:"examples-166"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Flush the serial connection.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialFlush("device01");\n')),Object(i.b)("h3",{id:"serverserialdrain"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialDrain()")),Object(i.b)("p",null,"Waits until all output data is transmitted to the serial port.\nAfter any pending write has completed, it calls ",Object(i.b)("inlineCode",{parentName:"p"},"tcdrain()")," or ",Object(i.b)("inlineCode",{parentName:"p"},"FlushFileBuffers()")," to ensure it has been written to the device.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name."),Object(i.b)("p",null,"Returns a promise that resolves once the data has been drained."),Object(i.b)("h4",{id:"examples-167"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Drain the serial connection.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialDrain("device01");\n')),Object(i.b)("h3",{id:"serverserialpause"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialPause()")),Object(i.b)("p",null,"Causes a stream in flowing mode to stop emitting 'data' events, switching out of flowing mode. Any data that becomes available remains in the internal buffer.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name."),Object(i.b)("h4",{id:"examples-168"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Pause the serial connection.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialPause("device01");\n')),Object(i.b)("h3",{id:"serverserialresume"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serialResume()")),Object(i.b)("p",null,"Causes an explicitly paused, Readable stream to resume emitting 'data' events, switching the stream into flowing mode.\nThe action is only executed if ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(i.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is a friendly device name."),Object(i.b)("h4",{id:"examples-169"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create the serial connection. Pause the serial connection. Resume the serial connection.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.serialConnect("device01", "/dev/rfcomm0", {\n  baudRate: 9600,\n});\n\nawait server.serialPause("device01");\n\nawait server.serialResume("device01");\n')),Object(i.b)("h3",{id:"serverbrowsehistory"},Object(i.b)("inlineCode",{parentName:"h3"},"server.browseHistory()")),Object(i.b)("p",null,"Loads the ",Object(i.b)("inlineCode",{parentName:"p"},"history")," space into the current server.\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"history")," space is read-only and contains all the marks that have been created for the server.\nEach mark is a bot that is placed in the ",Object(i.b)("inlineCode",{parentName:"p"},"#history")," dimension."),Object(i.b)("p",null,"Returns a promise that resolves when the history bots are loaded."),Object(i.b)("h4",{id:"examples-170"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Load the ",Object(i.b)("inlineCode",{parentName:"li"},"history")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.browseHistory();\n")),Object(i.b)("h3",{id:"servermarkhistoryoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"server.markHistory(options)")),Object(i.b)("p",null,"Marks the current state as a save point in history. This save point can be restored by using the ",Object(i.b)(r.ActionLink,{action:"server.restoreHistoryMark(mark)",mdxType:"ActionLink"})," action.\nNote that this only saves bots in the ",Object(i.b)("inlineCode",{parentName:"p"},"shared")," space. ",Object(i.b)("inlineCode",{parentName:"p"},"local")," and ",Object(i.b)("inlineCode",{parentName:"p"},"tempLocal")," bots are unaffected."),Object(i.b)("p",null,"Returns a promise that resolves when the history mark has been created."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," are the options that should be used to mark the history point.\nIt should be an object with the following properties:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"message")," - The message that the new mark should have. Use this as a way to communicate what was special about this save point.")),Object(i.b)("h4",{id:"examples-171"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Save the current state of the ",Object(i.b)("inlineCode",{parentName:"li"},"shared")," space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.markHistory({\n    message: 'First Version of my AUX'\n});\n")),Object(i.b)("h3",{id:"serverrestorehistorymarkmark"},Object(i.b)("inlineCode",{parentName:"h3"},"server.restoreHistoryMark(mark)")),Object(i.b)("p",null,"Restores the current state to the state that was saved by the given mark.\nThis will create a new mark with any unsaved changes and another mark with the state that was saved by the given mark."),Object(i.b)("p",null,"Returns a promise that resolves when the history mark has been restored."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID of the mark that should be restored. You can find available marks in the current server by using the ",Object(i.b)(r.ActionLink,{action:"server.browseHistory()",mdxType:"ActionLink"})," action."),Object(i.b)("h4",{id:"examples-172"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Restore the state to a given mark.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Find a random mark that was loaded by server.browseHistory()\nlet mark = getBot(byTag("#history", true));\n\n// Restore the current state to the given mark.\nawait server.restoreHistoryMark(mark);\n')),Object(i.b)("h3",{id:"serverrestorehistorymarktoservermark-server"},Object(i.b)("inlineCode",{parentName:"h3"},"server.restoreHistoryMarkToServer(mark, server)")),Object(i.b)("p",null,"Restores the state in the given server to the state that was saved by the given mark.\nThis will create a new mark with any unsaved changes in the server and another mark with the state that was saved by the given mark."),Object(i.b)("p",null,"Returns a promise that resolves when the history mark has been restored."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID of the mark that should be restored. You can find available marks in the current server by using the ",Object(i.b)(r.ActionLink,{action:"server.browseHistory()",mdxType:"ActionLink"})," action."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the server that the state should be restored to. If ",Object(i.b)("inlineCode",{parentName:"p"},"null")," or an empty string, then the current server will be restored."),Object(i.b)("h4",{id:"examples-173"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Restore the state of the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," server to a given mark.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Find a random mark that was loaded by server.browseHistory()\nlet mark = getBot(byTag("#history", true));\n\n// Restore the current state to the given mark.\nawait server.restoreHistoryMarkToServer(mark, "test");\n')),Object(i.b)("h3",{id:"servershellscript"},Object(i.b)("inlineCode",{parentName:"h3"},"server.shell(script)")),Object(i.b)("p",null,"Executes the given script on the server."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the shell script that should be executed."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"By default, shell scripts are disabled on a server. To enable them, you have to write a custom ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(i.b)("h3",{id:"serverloadfilepath-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.loadFile(path, options?)")),Object(i.b)("p",null,"Loads a file from the server at the given path."),Object(i.b)("p",null,"Note that on a Raspberry PI, all USB storage devices are mapped into the ",Object(i.b)("inlineCode",{parentName:"p"},"/drives")," directory based on the port they were plugged into.\nLoading a file from a USB drive is as simple as specifying the file name.\nIf multiple USB drives are plugged in and have files with the same name, then the file from the USB drive in the smallest numbered port is used."),Object(i.b)("p",null,"Returns a promise that resolves with the data in the file."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the path that the file should be loaded from. This is usually just the full name of the file to load. (name + file extension)"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," are the options that should be used for loading the file."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"By default, loading files is disabled on a server. To enable it, you have to write a custom ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-174"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Load a file named "book.txt" and trigger a ',Object(i.b)("inlineCode",{parentName:"li"},"@onBookLoaded")," shout when it is loaded.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.loadFile('book.txt', {\n    callbackShout: 'onBookLoaded'\n});\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Load a file named "book.txt" from drive ',Object(i.b)("inlineCode",{parentName:"li"},"2")," and trigger a ",Object(i.b)("inlineCode",{parentName:"li"},"@onBookLoaded")," shout when it is loaded.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.loadFile('/2/book.txt', {\n    callbackShout: 'onBookLoaded'\n});\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Load a file named "book.txt" and toast the contents.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = await server.loadFile('book.txt');\nos.toast(result.data);\n")),Object(i.b)("h3",{id:"serversavefilepath-data-options"},Object(i.b)("inlineCode",{parentName:"h3"},"server.saveFile(path, data, options?)")),Object(i.b)("p",null,"Saves a file at the given path with the given data.\nIf the file already exists, then the options are used to determine if the file should be overwritten. By default the file will not be overwritten."),Object(i.b)("p",null,"Note that on a Raspberry PI, all USB storage devices are mapped into the ",Object(i.b)("inlineCode",{parentName:"p"},"/drives")," directory based on the port they were plugged into.\nSaving a file to a USB drive is as simple as specifying the file name.\nIf multiple USB drives are plugged in and a drive is not specified, then the file will be saved to the first drive."),Object(i.b)("p",null,"Returns a promise that resolves when the file has been saved."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the path that the file should be saved to. This is usually just the full name of the file to save. (name + file extension)"),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the data that should be saved into the file."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," are the options that should be used for saving the file."),Object(i.b)(r.Alert,{type:"info",mdxType:"Alert"},"By default, saving files is disabled on a server. To enable it, you have to write a custom ",Object(i.b)(r.TagLink,{tag:"@onServerAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(i.b)(r.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-175"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Save a file named "book.txt" and trigger a ',Object(i.b)("inlineCode",{parentName:"li"},"@onBookSaved")," shout when it is saved.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.saveFile('book.txt', 'My memoirs', {\n    callbackShout: 'onBookSaved'\n});\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Save a file named "book.txt" to drive ',Object(i.b)("inlineCode",{parentName:"li"},"2")," and trigger a ",Object(i.b)("inlineCode",{parentName:"li"},"@onBookSaved")," shout when it is loaded.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.saveFile('/2/book.txt', 'My memoirs', {\n    callbackShout: 'onBookSaved',\n    overwriteExistingFile: true\n});\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},'Save a file named "book.txt" and send a toast when it is finished.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.saveFile('/2/book.txt', 'My memoirs', {\n    overwriteExistingFile: true\n});\n\nos.toast(\"File Saved!\");\n")),Object(i.b)("h3",{id:"serverserverremotecountserver"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serverRemoteCount(server?)")),Object(i.b)("p",null,"Gets the number of remotes that are viewing the current server.\nOptionally takes a parameter which is the server that the number of remotes should be retrieved for. If omitted, then the current server will be checked.\nReturns a promise that resolves with the number of active remotes."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is optional and is the name of the server that the number of remotes should be retrieved for.\nIf not specified, then the current server ",Object(i.b)(r.ActionLink,{action:"os.getCurrentServer()",mdxType:"ActionLink"},"current server")," will be used."),Object(i.b)("h4",{id:"examples-176"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the number of remotes in the current server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfRemotes = await server.serverRemoteCount();\n\nos.toast("Number of Remotes: " + numberOfRemotes);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the number of remotes in the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const numberOfRemotes = await server.serverRemoteCount('test');\n\nos.toast(\"Number of Remotes: \" + numberOfRemotes);\n")),Object(i.b)("h3",{id:"servertotalremotecount"},Object(i.b)("inlineCode",{parentName:"h3"},"server.totalRemoteCount()")),Object(i.b)("p",null,"Gets the number of devices that are connected to the server.\nReturns a promise that resolves with the number of active devices."),Object(i.b)("h4",{id:"examples-177"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the number of devices on the server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfDevices = await server.totalRemoteCount();\n\nos.toast("Number of Devices: " + numberOfDevices);\n')),Object(i.b)("h3",{id:"serverservers"},Object(i.b)("inlineCode",{parentName:"h3"},"server.servers()")),Object(i.b)("p",null,"Gets the list of servers that are stored on the server.\nReturns a promise that resolves with the list of server names."),Object(i.b)("h4",{id:"examples-178"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the list of servers on the server.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const servers = await server.servers();\n\nos.toast(\"Servers \" + servers.join(','));\n")),Object(i.b)("h3",{id:"serverserverstatuses"},Object(i.b)("inlineCode",{parentName:"h3"},"server.serverStatuses()")),Object(i.b)("p",null,"Gets the list of servers that are stored on the server along with the last time that they were updated.\nReturns a promise that resolves with the list of servers."),Object(i.b)("p",null,"The resolved list is sorted by the most recently updated first and the least recently updated last."),Object(i.b)("h4",{id:"examples-179"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the list of servers on the server along with their status.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const servers = await server.serverStatuses();\n\nos.toast("Stories " + getJSON(servers));\n')),Object(i.b)("h3",{id:"serverremotes"},Object(i.b)("inlineCode",{parentName:"h3"},"server.remotes()")),Object(i.b)("p",null,"Gets the list of remote IDs that are connected to the current server.\nReturns a promise that resolves with the list of remote IDs."),Object(i.b)("p",null,"The resolved list will always have at least one value that represents the current remote."),Object(i.b)("h4",{id:"examples-180"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the list of remote IDs.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const remotes = await server.remotes();\n\nos.toast(\"Remotes \" + remotes.join(','));\n")),Object(i.b)("h2",{id:"math-actions"},"Math Actions"),Object(i.b)("h3",{id:"mathsumlist"},Object(i.b)("inlineCode",{parentName:"h3"},"math.sum(list)")),Object(i.b)("p",null,"Calculates the numerical sum of the given values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the list of values that should be summed up.\nIf any value in the list is not a number, it will be converted to one.\nIf the list is not actually a list, then it will be converted to a number and returned."),Object(i.b)("h4",{id:"examples-181"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the sum of a list of numbers.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const total = math.sum([92, 123, 21]);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the total ",Object(i.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const totalAge = math.sum(getBotTagValues('#age'));\n")),Object(i.b)("h3",{id:"mathavglist"},Object(i.b)("inlineCode",{parentName:"h3"},"math.avg(list)")),Object(i.b)("p",null,"Calculates the arithmetic mean of the given list of values.\nThat is, the sum of the values divided by the number of values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the list of values that average should be calculated for."),Object(i.b)("h4",{id:"examples-182"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the average of a list of numbers.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const average = math.avg([4, 54.2, 31]);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the average ",Object(i.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const averageAge = math.avg(getBotTagValues('#age'));\n")),Object(i.b)("h3",{id:"mathsqrtvalue"},Object(i.b)("inlineCode",{parentName:"h3"},"math.sqrt(value)")),Object(i.b)("p",null,"Calculates the square root of the given value."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that the square root should be calculated for."),Object(i.b)("h4",{id:"examples-183"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the square root of ",Object(i.b)("inlineCode",{parentName:"li"},"4"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const rootOf4 = math.sqrt(4);\n")),Object(i.b)("h3",{id:"mathabsnumber"},Object(i.b)("inlineCode",{parentName:"h3"},"math.abs(number)")),Object(i.b)("p",null,"Calculates the absolute value of the given number."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the number that the absolute value should be calculated for."),Object(i.b)("h4",{id:"examples-184"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the absolute value for the number ",Object(i.b)("inlineCode",{parentName:"li"},"-42"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const _42 = math.abs(-42);\n")),Object(i.b)("h3",{id:"mathstddevlist"},Object(i.b)("inlineCode",{parentName:"h3"},"math.stdDev(list)")),Object(i.b)("p",null,"Calculates the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Standard_deviation"}),"standard deviation")," for the given list of values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the list of values that the standard deviation should be calculated for."),Object(i.b)("h4",{id:"examples-185"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the standard deviation of a list of numbers.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const standardDeviation = math.stdDev([2, 97, 745]);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the standard deviation of the ",Object(i.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const ageDeviation = math.stdDev(getBotTagValues('#age'));\n")),Object(i.b)("h3",{id:"mathrandomintmin-max"},Object(i.b)("inlineCode",{parentName:"h3"},"math.randomInt(min, max)")),Object(i.b)("p",null,"Generates a random integer number between the given minimum and maximum values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the smallest allowed value that can be generated."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the largest allowed value that can be generated."),Object(i.b)("h4",{id:"examples-186"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Generate a random number between ",Object(i.b)("inlineCode",{parentName:"li"},"5")," and ",Object(i.b)("inlineCode",{parentName:"li"},"10"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const number = math.randomInt(5, 10);\n")),Object(i.b)("h3",{id:"mathrandommin-max"},Object(i.b)("inlineCode",{parentName:"h3"},"math.random(min, max)")),Object(i.b)("p",null,"Generates a random number between the given minimum and maximum values."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the smallest allowed value that can be generated."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the largest allowed value that can be generated."),Object(i.b)("h4",{id:"examples-187"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Generate a random number between ",Object(i.b)("inlineCode",{parentName:"li"},"0")," and ",Object(i.b)("inlineCode",{parentName:"li"},"Math.PI"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const number = math.random(0, Math.PI);\n")),Object(i.b)("h3",{id:"mathgetforwarddirectionrotation"},Object(i.b)("inlineCode",{parentName:"h3"},"math.getForwardDirection(rotation)")),Object(i.b)("p",null,"Gets the forward direction for the given rotation."),Object(i.b)("p",null,"Useful for finding where a bot would be pointing if it has a custom rotation."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is an object containing the ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"z")," of the rotation in radians."),Object(i.b)("h4",{id:"examples-188"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the direction that a pointer is pointing.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const pointerRotation = os.getPointerRotation('mouse');\nconst pointerDirection = math.getForwardDirection(pointerRotation);\nos.toast(pointerDirection);\n")),Object(i.b)("h3",{id:"mathintersectplaneorigin-direction"},Object(i.b)("inlineCode",{parentName:"h3"},"math.intersectPlane(origin, direction)")),Object(i.b)("p",null,"Calculates the 3D point that a ray starting at the given origin point and traveling in the given direction intersects the page portal ground plane.\nReturns null if the ray does not intersect the ground plane."),Object(i.b)("p",null,"Useful for calculating where on the ground something is pointing."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the 3D point that the ray should start at."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the direction that the ray is traveling along."),Object(i.b)("h4",{id:"examples-189"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the spot on the ground that a pointer is pointing at.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const pointerPosition = os.getPointerPosition('mouse');\nconst pointerRotation = os.getPointerRotation('mouse');\nconst pointerDirection = math.getForwardDirection(pointerRotation);\nconst groundPoint = math.intersectPlane(pointerPosition, pointerDirection);\nos.toast(groundPoint);\n")),Object(i.b)("h3",{id:"mathgetanchorpointoffsetanchorpoint"},Object(i.b)("inlineCode",{parentName:"h3"},"math.getAnchorPointOffset(anchorPoint)")),Object(i.b)("p",null,"Calculates the 3D position offset for the given anchor point and returns it.\nThis is essentially ",Object(i.b)(r.ActionLink,{action:"experiment.getAnchorPointPosition(bot, dimension, anchorPoint)",mdxType:"ActionLink"})," but without the bot's position/scale applied."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the anchor point that should be calculated. Can be any valid ",Object(i.b)(r.TagLink,{tag:"anchorPoint",mdxType:"TagLink"})," value."),Object(i.b)("h4",{id:"examples-190"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Calculate the anchor point offset for "bottom".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const offset = math.getAnchorPointOffset("bottom");\nos.toast(offset);\n')),Object(i.b)("h3",{id:"mathaddvectorsvectors"},Object(i.b)("inlineCode",{parentName:"h3"},"math.addVectors(...vectors)")),Object(i.b)("p",null,"Mathematically adds the given vectors to each other and returns the sum result."),Object(i.b)("p",null,"A vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\nFor example, the vector ",Object(i.b)("inlineCode",{parentName:"p"},"{ x: 1, y: 2, z: 3 }")," represents the point ",Object(i.b)("inlineCode",{parentName:"p"},"(1, 2, 3)")," in 3D space where ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"z")," are the names of the dimensions (or axes)."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is an object that contains the numerical properties that should be added together."),Object(i.b)("h4",{id:"examples-191"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add two 3D points together.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = math.addVectors(\n    { x: 1, y: 2, z: 3 },\n    { x: 5, y: 6, z: 7 }\n);\n\nos.toast(result); // { x: 6, y: 8, z: 10 }\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Add arbitrary numbers together.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = math.addVectors(\n    { salary: 1000, tax: 50 },\n    { salary: 5000, tax: 250 },\n    { salary: 750, tax: 37.5 },\n);\n\nos.toast(result); // { salary: 6750, tax: 337.5 }\n")),Object(i.b)("h3",{id:"mathsubtractvectorsvectors"},Object(i.b)("inlineCode",{parentName:"h3"},"math.subtractVectors(...vectors)")),Object(i.b)("p",null,"Mathematically subtracts the given vectors from each other and returns the result."),Object(i.b)("p",null,"A vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\nFor example, the vector ",Object(i.b)("inlineCode",{parentName:"p"},"{ x: 1, y: 2, z: 3 }")," represents the point ",Object(i.b)("inlineCode",{parentName:"p"},"(1, 2, 3)")," in 3D space where ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"z")," are the names of the dimensions (or axes)."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is an object that contains the numerical properties that should be added together."),Object(i.b)("h4",{id:"examples-192"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Subtract two 3D points from each other.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = math.addVectors(\n    { x: 5, y: 6, z: 7 },\n    { x: 1, y: 2, z: 3 },\n);\n\nos.toast(result); // { x: 4, y: 4, z: 4 }\n")),Object(i.b)("h3",{id:"mathnegatevectorvector"},Object(i.b)("inlineCode",{parentName:"h3"},"math.negateVector(vector)")),Object(i.b)("p",null,"Mathematically negates the given vector and returns the result."),Object(i.b)("p",null,"A vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\nFor example, the vector ",Object(i.b)("inlineCode",{parentName:"p"},"{ x: 1, y: 2, z: 3 }")," represents the point ",Object(i.b)("inlineCode",{parentName:"p"},"(1, 2, 3)")," in 3D space where ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"z")," are the names of the dimensions (or axes)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the object whose mathematical properties should be negated."),Object(i.b)("h4",{id:"examples-193"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Negate a 3D point.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = math.negateVector(\n    { x: 5, y: 6, z: 7 }\n);\n\nos.toast(result); // { x: -5, y: -6, z: -7 }\n")),Object(i.b)("h3",{id:"mathscalevectorvector-scale"},Object(i.b)("inlineCode",{parentName:"h3"},"math.scaleVector(vector, scale)")),Object(i.b)("p",null,"Multiplies each property of the given vector by the given scale and returns the result."),Object(i.b)("p",null,"A vector is a group of numbers which represents a specific point in 2D/3D/4D/etc. space.\nFor example, the vector ",Object(i.b)("inlineCode",{parentName:"p"},"{ x: 1, y: 2, z: 3 }")," represents the point ",Object(i.b)("inlineCode",{parentName:"p"},"(1, 2, 3)")," in 3D space where ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"z")," are the names of the dimensions (or axes)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the object whose mathematical properties should be scaled."),Object(i.b)("h4",{id:"examples-194"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Scale a 3D point by 5.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = math.scaleVector(\n    { x: 5, y: 6, z: 7 },\n    5\n);\n\nos.toast(result); // { x: 25, y: 30, z: 35 }\n")),Object(i.b)("h3",{id:"mathareclosefirst-second"},Object(i.b)("inlineCode",{parentName:"h3"},"math.areClose(first, second)")),Object(i.b)("p",null,"Determines if the given numbers are within 2 decimal places of each other."),Object(i.b)("p",null,"Because ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number"}),"JavaScript numbers")," have limited precision, some calculations cannot be represented\nlike they can in normal math. For example, ",Object(i.b)("inlineCode",{parentName:"p"},"1/3")," is ",Object(i.b)("inlineCode",{parentName:"p"},"0.3333...")," but in JavaScript ",Object(i.b)("inlineCode",{parentName:"p"},"1/3")," gives ",Object(i.b)("inlineCode",{parentName:"p"},"0.33333333333333331483"),".\nThis inaccuracy can cause problems when many calculations are done, which can cause numbers that appear to be the same to actually be different."),Object(i.b)("p",null,"The solution is to check the difference between two numbers to see if it is below some arbitrary threshold. In this case, the threshold is ",Object(i.b)("inlineCode",{parentName:"p"},"0.005"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the first number that should be checked."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the second number that should be checked."),Object(i.b)("h4",{id:"examples-195"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Determine ",Object(i.b)("inlineCode",{parentName:"li"},"0.1 + 0.2")," is close to ",Object(i.b)("inlineCode",{parentName:"li"},"0.3"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const first = 0.1 + 0.2;\nconst second = 0.3;\nconst result = math.areClose(first, second);\nconst areEqual = first === second;\nos.toast("Equal: " + areEqual + ", Close: " + result); // Equal: false, Close: true\n')),Object(i.b)("h2",{id:"mod-actions"},"Mod Actions"),Object(i.b)("p",null,"Mod actions are actions that can be used to create mods and transform some mods into other mods."),Object(i.b)("h3",{id:"modcamerapositionoffsetposition"},Object(i.b)("inlineCode",{parentName:"h3"},"mod.cameraPositionOffset(position)")),Object(i.b)("p",null,"Creates a mod that sets the ",Object(i.b)(r.TagLink,{tag:"cameraPositionOffsetX",mdxType:"TagLink"},"cameraPositionOffset")," tags to the given 3D position."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the 3D position that should be made into a mod."),Object(i.b)("h4",{id:"examples-196"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get a mod that sets the camera position offset.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = mod.cameraPositionOffset({\n    x: 4,\n    y: 5,\n    z: 6\n});\n")),Object(i.b)("h3",{id:"modcamerarotationoffsetrotation"},Object(i.b)("inlineCode",{parentName:"h3"},"mod.cameraRotationOffset(rotation)")),Object(i.b)("p",null,"Creates a mod that sets the ",Object(i.b)(r.TagLink,{tag:"cameraRotationOffsetX",mdxType:"TagLink"},"cameraRotationOffset")," tags to the given 3D position."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the 3D rotation that should be made into a mod."),Object(i.b)("h4",{id:"examples-197"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get a mod that sets the camera rotation offset.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = mod.cameraRotationOffset({\n    x: 4,\n    y: 5,\n    z: 6\n});\n")),Object(i.b)("h2",{id:"crypto-actions"},"Crypto Actions"),Object(i.b)("h3",{id:"cryptosha256data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.sha256(...data)")),Object(i.b)("p",null,"Calculates the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-256")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(i.b)("p",null,"Hashes are generally useful for validating that a piece of data did not change or for checking to see if two values are the same thing."),Object(i.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a piece of data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(i.b)("h4",{id:"examples-198"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the hash of a string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha256("hello, world");\nos.toast(hash);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the hash of an object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha256({\n    abc: "def"\n});\nos.toast(hash);\n')),Object(i.b)("h3",{id:"cryptosha512data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.sha512(...data)")),Object(i.b)("p",null,"Calculates the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-512")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(i.b)("p",null,"Hashes are generally useful for validating that a piece of data did not change or for checking to see if two values are the same thing."),Object(i.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Each parameter")," is a piece of data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(i.b)("h4",{id:"examples-199"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the hash of a string.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha512("hello, world");\nos.toast(hash);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the hash of an object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha512({\n    abc: "def"\n});\nos.toast(hash);\n')),Object(i.b)("h3",{id:"cryptohmacsha256key-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.hmacSha256(key, ...data)")),Object(i.b)("p",null,"Calculates the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HMAC"}),"HMAC")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-256")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(i.b)("p",null,"HMAC hashes are generally useful for validating that a piece of data was sent from someone else who has a particular secret key."),Object(i.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret key that should be used to create the HMAC."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(i.b)("h4",{id:"examples-200"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the HMAC of a string with a key.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha256("key", "hello, world");\nos.toast(hash);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the HMAC of an object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha256("key", {\n    abc: "def"\n});\nos.toast(hash);\n')),Object(i.b)("h3",{id:"cryptohmacsha512key-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.hmacSha512(key, ...data)")),Object(i.b)("p",null,"Calculates the ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HMAC"}),"HMAC")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-512")," ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(i.b)("p",null,"HMAC hashes are generally useful for validating that a piece of data was sent from someone else who has a particular secret key."),Object(i.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret key that should be used to create the HMAC."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"other parameters")," are the data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(i.b)("h4",{id:"examples-201"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Calculate the HMAC of a string with a key.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha512("key", "hello, world");\nos.toast(hash);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Calculate the HMAC of an object.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha512("key", {\n    abc: "def"\n});\nos.toast(hash);\n')),Object(i.b)("h3",{id:"cryptoencryptsecret-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.encrypt(secret, data)")),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Encrypts")," the given data using the given secret key (also commonly known as a password) and returns the result."),Object(i.b)("p",null,"Use the ",Object(i.b)(r.ActionLink,{action:"crypto.decrypt(key, data)",mdxType:"ActionLink"})," function to decrypt the data."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Always use a strong and unique secret key.")," Use a password manager such as LastPass or 1Password to help you create and keep track of them."),Object(i.b)("p",null,"Assuming a strong secret, this method will return a string of encrypted data that is ",Object(i.b)("em",{parentName:"p"},"confidential")," (unreadable without the key),\n",Object(i.b)("em",{parentName:"p"},"reliable")," (the encrypted data cannot be changed without making it unreadable), and ",Object(i.b)("em",{parentName:"p"},"authentic")," (decryptability proves that this specific key was used to encrypt the data)."),Object(i.b)("p",null,"As a consequence, encrypting the same data with the same key will produce different results.\nThis is to ensure that an attacker cannot correlate different pieces of data to potentially deduce the original plaintext."),Object(i.b)("p",null,"Encrypts the given data using an authenticated encryption mechanism\nbased on ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xsalsa20"}),"XSalsa20")," (An encryption cipher) and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Poly1305"}),"Poly1305")," (A message authentication code).\nAdditionally uses ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Scrypt"}),"scrypt")," for ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Key_derivation_function"}),"password-based key derivation"),". "),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret that should be used to encrypt the data. Use a strong an unique secret for maximum security."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the string data that should be encrypted."),Object(i.b)("h4",{id:"examples-202"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Encrypt the given data and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const encrypted = crypto.encrypt("key", "hello, world");\nos.toast(encrypted);\n')),Object(i.b)("h3",{id:"cryptodecryptsecret-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.decrypt(secret, data)")),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Decrypts")," the given data using the given secret key (also commonly known as a password) and returns the result."),Object(i.b)("p",null,"Use the ",Object(i.b)(r.ActionLink,{action:"crypto.encrypt(key, data)",mdxType:"ActionLink"})," function to encrypt the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret that should be used to decrypt the data. This should be the same key that was used to encrypt the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the data from ",Object(i.b)(r.ActionLink,{action:"crypto.encrypt(key, data)",mdxType:"ActionLink"})," that should be decrypted."),Object(i.b)("h4",{id:"examples-203"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Decrypt the given data and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const decrypted = crypto.decrypt("key", "v1.vWUhsdfiKkxXi9Rt+BBNbcP/TiHZpxUL.iikPvWN6rNncY3j045gM0268MoRi0NNf.IpWYgzXQmjRea4MNLDXB1GmrinWLSSOMw+NfqeE=");\nos.toast(decrypted);\n')),Object(i.b)("h3",{id:"cryptoisencryptedcyphertext"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.isEncrypted(cyphertext)")),Object(i.b)("p",null,"Determines if the given value has been encrypted using ",Object(i.b)(r.ActionLink,{action:"crypto.encrypt(secret, data)",mdxType:"ActionLink"}),".\nReturns ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if the data is encrypted and ",Object(i.b)("inlineCode",{parentName:"p"},"false")," otherwise."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that should be tested to see if it has been encrypted."),Object(i.b)("h4",{id:"examples-204"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Determine if a value is encrypted.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const encrypted = crypto.isEncrypted(\"hello, world\");\nos.toast('Is it encrypted? ' + encrypted);\n")),Object(i.b)("h3",{id:"cryptokeypairsecret"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.keypair(secret)")),Object(i.b)("p",null,"Creates a keypair that can be used to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Digital_signature"}),"digitially sign")," and verify data."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.sign(keypair, secret, data)",mdxType:"ActionLink"})," and ",Object(i.b)(r.ActionLink,{action:"crypto.verify(keypair, signature, data)",mdxType:"ActionLink"})," to sign and verify the data."),Object(i.b)("p",null,"Keypairs are made up of a private key and a public key.\nThe private key is a special value that can be used to create digital signatures and\nthe public key is a related value that can be used to verify that a digitital signature was created by the private key."),Object(i.b)("p",null,'The private key is called "private" because it is encrypted using the given secret\nwhile the public key is called "public" because it is not encrypted so anyone can use it if they have access to it.'),Object(i.b)("p",null,"Note that both the private and public keys are randomly generated, so while the public is unencrypted, it won't be able to be used by someone else unless\nthey have access to it."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret that should be used to encrypt the private key of the keypair."),Object(i.b)("h4",{id:"examples-205"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a keypair and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const keypair = crypto.keypair("my secret");\nos.toast(keypair);\n')),Object(i.b)("h3",{id:"cryptsignkeypair-secret-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypt.sign(keypair, secret, data)")),Object(i.b)("p",null,"Calculates the digital signature for the given data using the given keypair and secret (also commonly known as a password)."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.keypair(secret)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.verify(keypair, signature, data)",mdxType:"ActionLink"})," to validate signatures."),Object(i.b)("p",null,"Digital signatures are used to verifying the authenticity and integrity of data."),Object(i.b)("p",null,"This works by leveraging asymmetric encryption but in reverse."),Object(i.b)("p",null,"If we can encrypt some data such that only the public key of a keypair can decrypt it, then we can prove that\nthe data was encrypted (i.e. signed) by the corresponding private key."),Object(i.b)("p",null,"And since the public key is available to everyone but the private\nkey is only usable when you have the secret, we can use this to prove that a particular piece of data was signed by whoever knows the secret."),Object(i.b)("p",null,"Note that because of how digital signatures work, signing the same data with the same keypair will produce the same signature."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the keypair that should be used to sign the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the secret that was used to encrypt the private key of the keypair."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the string data that should be signed."),Object(i.b)("h4",{id:"examples-206"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a signature for the string ",Object(i.b)("inlineCode",{parentName:"li"},'"hello"'),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Returned from crypto.keypair()\nconst keypair = "vK1.ugqz8HzhaQhfORc8Coc6WVHTciMrcmfSUuw99KLRJYk=.djEuak1QNkF5MHFzMTBFMXRHamR1ZFhqTmRTV3AycjVyZUsudzFjSWZWVUFQVUdqK3hTM000NUduYUlNQ094SUhCTUEuanYrZEQwNVJFVGo3UzRPSklQQUkxc3U0anZjUmxrTEM2OW1BajkyMkxxdTFZd2sxNzV5QW9Dc3gwU3RENlQ0cmtNTVk4b2Zna2JRVTIrQmp5OUIrTTJsaFI2ajcyb0lJdmdSWkRXRU9lZE09";\n\nconst signature = crypto.sign(keypair, "my secret", "hello");\nos.toast(signature);\n')),Object(i.b)("h3",{id:"cryptoverifykeypair-signature-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.verify(keypair, signature, data)")),Object(i.b)("p",null,"Validates that the given signature was created by the given keypair for the given data.\nReturns true if the signature is valid. Returns false otherwise."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.keypair(secret)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.sign(keypair, secret, data)",mdxType:"ActionLink"})," to create signatures."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the keypair that was used to create the signature."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the signature that was returned from ",Object(i.b)(r.ActionLink,{action:"crypto.sign(keypair, secret, data)",mdxType:"ActionLink"}),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the data that was used in the call to ",Object(i.b)(r.ActionLink,{action:"crypto.sign(keypair, secret, data)",mdxType:"ActionLink"}),"."),Object(i.b)("h4",{id:"examples-207"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Validate a signature.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Returned from crypto.keypair()\nconst keypair = "vK1.ugqz8HzhaQhfORc8Coc6WVHTciMrcmfSUuw99KLRJYk=.djEuak1QNkF5MHFzMTBFMXRHamR1ZFhqTmRTV3AycjVyZUsudzFjSWZWVUFQVUdqK3hTM000NUduYUlNQ094SUhCTUEuanYrZEQwNVJFVGo3UzRPSklQQUkxc3U0anZjUmxrTEM2OW1BajkyMkxxdTFZd2sxNzV5QW9Dc3gwU3RENlQ0cmtNTVk4b2Zna2JRVTIrQmp5OUIrTTJsaFI2ajcyb0lJdmdSWkRXRU9lZE09";\n\n// Returned from crypto.sign()\nconst signature = "vS1.uF93ErJBhdI/vqRF2XD2zgRAO96vKc9mx8crn6Kasijmx92px36B/alLGluU22tgCav/nNQEHdV2zZoHPgy7Dg==";\n\nconst valid = crypto.verify(keypair, signature, "hello");\nos.toast(valid);\n')),Object(i.b)("h3",{id:"cryptoasymmetrickeypairsecret"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.asymmetric.keypair(secret)")),Object(i.b)("p",null,"Creates a keypair that can be used to ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"encrypt and decrypt")," data."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.encrypt(keypair, data)",mdxType:"ActionLink"})," and ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.decrypt(keypair, secret, data)",mdxType:"ActionLink"})," to encrypt and decrypt the data."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Always use a strong and unique secret key.")," Use a password manager such as LastPass or 1Password to help you create and keep track of them."),Object(i.b)("p",null,"Keypairs are made up of a private key and a public key\nThe public key is a special value that can be used to encrypt data and\nthe private key is a related value that can be used to decrypt data that was encrypted by the private key."),Object(i.b)("p",null,'The private key is called "private" because it is encrypted using the given secret\nwhile the public key is called "public" because it is not encrypted so anyone can use it if they have access to it.'),Object(i.b)("p",null,"Note that both the private and public keys are randomly generated, so while the public is unencrypted, it won't be able to be used by someone else unless\nthey have access to it."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the secret that should be used to encrypt the private key of the keypair."),Object(i.b)("h4",{id:"examples-208"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a keypair and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const keypair = crypto.asymmetric.keypair("my secret");\nos.toast(keypair);\n')),Object(i.b)("h3",{id:"cryptoasymmetriciskeypairkeypair"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.asymmetric.isKeypair(keypair)")),Object(i.b)("p",null,"Determines if the given value is a keypair generated using ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.keypair(secret)",mdxType:"ActionLink"}),".\nReturns ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if the data is a keypair and ",Object(i.b)("inlineCode",{parentName:"p"},"false")," otherwise."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that should be tested to see if it is a keypair."),Object(i.b)("h4",{id:"examples-209"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Determine if a value is a keypair.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const encrypted = crypto.asymmetric.isKeypair(\"hello, world\");\nos.toast('Is it a keypair? ' + encrypted);\n")),Object(i.b)("h3",{id:"cryptoasymmetricencryptkeypair-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.asymmetric.encrypt(keypair, data)")),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Encrypts")," the given data using the given keypair's public key and returns the result."),Object(i.b)("p",null,"Use the ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.decrypt(keypair, secret, data)",mdxType:"ActionLink"})," function to decrypt the data."),Object(i.b)("p",null,"This method will return a string of encrypted data that is confidential (unreadable without the keypair and secret used to encrypt it),\nreliable (the encrypted data cannot be changed without making it unreadable), and authentic (decryptability proves that the keypair was used to encrypt the data)."),Object(i.b)("p",null,"As a consequence, encrypting the same data with the same keypair will produce different results.\nThis is to ensure that an attacker cannot correlate different pieces of data to potentially deduce the original plaintext."),Object(i.b)("p",null,"Encrypts the given data using an asymmetric authenticated encryption mechanism\nbased on x25519 (A key-exchange mechanism), XSalsa20 (An encryption cipher) and Poly1305 (A message authentication code)."),Object(i.b)("p",null,"You may notice that this function does not need a secret to decrypt the keypair.\nThis is because the public key of the keypair is used to encrypt the data.\nDue to how asymmetric encryption works, only the encrypted private key will be able to decrypt the data."),Object(i.b)("p",null,"Encrypts the given data using an authenticated encryption mechanism\nbased on ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Curve25519"}),"x25519"),", ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xsalsa20"}),"XSalsa20")," (An encryption cipher) and ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Poly1305"}),"Poly1305")," (A message authentication code)."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the keypair that should be used to encrypt the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the string data that should be encrypted."),Object(i.b)("h4",{id:"examples-210"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Encrypt the given data and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const keypair = 'vEK1.UoNnUjLz7FdgjJ52P+f/sNw1VDsKwyX0kI+Bt7ivoF4=.djEuZmFvL0tOa1RJL3ByVm8wZ2QxYTk5clV4OXZUTk0wMnUuUHpZQUM1aVlYOUUra09vZ2hmamdyNll6T0tJS0ZjQjUuMGx2VGR5UmR2dloxUklWam5OODMrN09ibnk0c2MzbjNKYzZtSmFPYzc0ZXJXMlhHQzJsWW1vWGdFdzBRM2xkSg==';\nconst encrypted = crypto.asymmetric.encrypt(keypair, \"hello, world\");\nos.toast(encrypted);\n")),Object(i.b)("h3",{id:"cryptoasymmetricdecryptkeypair-secret-data"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.asymmetric.decrypt(keypair, secret, data)")),Object(i.b)("p",null,Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Decrypts")," the given data with the given keypair and secret and returns the result.\nIf the data was unable to be decrypted, null will be returned."),Object(i.b)("p",null,"Use the ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.encrypt(keypair, data)",mdxType:"ActionLink"})," function to encrypt the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the keypair that should be used to decrypt the data."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the secret that should be used to decrypt the keypair's private key."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the data that should be decrypted."),Object(i.b)("h4",{id:"examples-211"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Decrypt the given data and toast it.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const keypair = 'vEK1.UoNnUjLz7FdgjJ52P+f/sNw1VDsKwyX0kI+Bt7ivoF4=.djEuZmFvL0tOa1RJL3ByVm8wZ2QxYTk5clV4OXZUTk0wMnUuUHpZQUM1aVlYOUUra09vZ2hmamdyNll6T0tJS0ZjQjUuMGx2VGR5UmR2dloxUklWam5OODMrN09ibnk0c2MzbjNKYzZtSmFPYzc0ZXJXMlhHQzJsWW1vWGdFdzBRM2xkSg==';\nconst encrypted = 'vA1.3CC1r0fJP2tPS09C8YrTDQCJmgFczxprNEcMOzY4JD4=.3oiC7nG6N4jblFhBd4usrdid/w4Phwg/.X/9mbZYOGBjRX7YAO4D2zYJvZ3c=';\nconst decrypted = crypto.asymmetric.decrypt(keypair, 'password', encrypted);\nos.toast(decrypted);\n")),Object(i.b)("h3",{id:"cryptoasymmetricisencryptedcyphertext"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.asymmetric.isEncrypted(cyphertext)")),Object(i.b)("p",null,"Determines if the given value was encrypted using ",Object(i.b)(r.ActionLink,{action:"crypto.asymmetric.encrypt(keypair, data)",mdxType:"ActionLink"}),".\nReturns ",Object(i.b)("inlineCode",{parentName:"p"},"true")," if the data is a keypair and ",Object(i.b)("inlineCode",{parentName:"p"},"false")," otherwise."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the value that should be tested to see if it is encrypted."),Object(i.b)("h4",{id:"examples-212"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Determine if a value is encrypted with asymmetric encryption.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const encrypted = crypto.asymmetric.isEncrypted(\"hello, world\");\nos.toast('Is it encrypted? ' + encrypted);\n")),Object(i.b)("h3",{id:"cryptocreatecertificatecertificate-secret-keypair"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.createCertificate(certificate, secret, keypair)")),Object(i.b)("p",null,"Creates a new certified bot (also known as a certificate) from the given keypair that is signed by the given certified bot using the given secret (also commonly known as a password).\nReturns a promise that resolves with the new bot."),Object(i.b)("p",null,"Certificates are useful for creating signatures for tag values that CasualOS is aware of and will validate for you."),Object(i.b)("p",null,"Certificates are similar to keypairs except that they themselves are signed by another certificate.\nThis creates a ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Chain_of_trust"}),"chain of trust"),' that can be used to establish the validity of any arbitrary certificate.\nThe certificate that created the signature is called the "signing/signer certificate" and the certificate that recieved the signature is called the "signee certificate".'),Object(i.b)("p",null,"Each certificate contains the following information:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"A keypair."),Object(i.b)("li",{parentName:"ul"},"A reference to the signing certificate."),Object(i.b)("li",{parentName:"ul"},"A signature from the signing certificate.")),Object(i.b)("p",null,"In CasualOS, there are two types of certificates:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Root certificates."),Object(i.b)("li",{parentName:"ol"},"Non-root certificates.")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Root certificates")," are certificates that are both signee and signer. This means that the certificate used its own keypair to create the signature.\nAs such, the validity of the certificate cannot be checked apart from simply trusting it. Only one root certificate is allowed per server on a first-come first-serve basis.\nOnce a root certificate is created for a server, another cannot be created."),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"Non-root certificates")," are certificates that are signed by another certificate. This means that another certificate's keypair was used to create the signature.\nAs such, the validity of the certificate can be checked by following the chain of trust back to the root certificate.\nIf the chain does not end at the root certificate for the server, then the certificate is invalid and any signatures created by it will also be invalid."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.keypair(secret)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.signTag(certificate, secret, bot, tag)",mdxType:"ActionLink"})," to create signatures for a certificate."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the certified bot that should be used to sign the new certificate. If given null, then the new bot will be self-signed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the secret that should be used to decrypt the private key. If the first parameter is null, then this should be the secret for the keypair."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the keypair that the new certificate should have."),Object(i.b)("h4",{id:"examples-213"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Create a root certificate and toast the Bot ID:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const keypair = await crypto.keypair('secretForRootCert');\nconst cert = await crypto.createCertificate(null, 'secretForRootCert', keypair);\n\nos.toast(getID(cert));\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Create a non-root certificate and toast the Bot ID:")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const rootKeypair = getBot('id', rootCertID);\n\nconst nonRootKeypair = await crypto.keypair('secretForNonRootCert');\nconst nonRoot = await crypto.createCertificate(rootCert, 'secretForRootCert', nonRootKeypair);\n\nos.toast(getID(nonRoot));\n")),Object(i.b)("h3",{id:"cryptosigntagcertificate-secret-bot-tag"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.signTag(certificate, secret, bot, tag)")),Object(i.b)("p",null,"Creates a signature for the given bot, tag, and current value using the given certificate and secret.\nReturns a promise that resolves once the tag value has been signed."),Object(i.b)("p",null,"When a signature is created for a tag value, the value is considered valid until it is changed or the certificate is revoked."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the certificate bot that should be used to create the signature."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the secret used to decrypt the private key of the certificate."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the bot whose tag value should be signed."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is the tag whose value should be signed."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.createCertificate(certificate, secret, keypair)",mdxType:"ActionLink"})," to create certificates that can be used with this function."),Object(i.b)("p",null,"Use ",Object(i.b)(r.ActionLink,{action:"crypto.verifyTag(bot, tag)",mdxType:"ActionLink"})," to verify that a tag has a valid signature."),Object(i.b)("h4",{id:"examples-214"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Sign the ",Object(i.b)("inlineCode",{parentName:"li"},"@onClick")," script on a bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const cert = getBot('id', certID);\nawait crypto.signTag(cert, 'secretForCert', bot, 'onClick');\n")),Object(i.b)("h3",{id:"cryptoverifytagbot-tag"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.verifyTag(bot, tag)")),Object(i.b)("p",null,"Validates that the tag value stored in the given tag on the given bot has been signed by a valid certificate.\nReturns true if the tag value is valid. Returns false otherwise."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot whose tag value should be checked."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the tag whose value should be checked."),Object(i.b)("h4",{id:"examples-215"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Check if the ",Object(i.b)("inlineCode",{parentName:"li"},"@onClick")," script is signed.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const valid = crypto.verifyTag(bot, 'onClick');\n\nif (valid) {\n    os.toast('onClick is valid!');\n} else {\n    os.toast('onClick is not valid.');\n}\n")),Object(i.b)("h3",{id:"cryptorevokecertificatecertificate-secret-signer"},Object(i.b)("inlineCode",{parentName:"h3"},"crypto.revokeCertificate(certificate, secret, signer?)")),Object(i.b)("p",null,"Revokes the given certificate and any signatures that it has created.\nIn effect, this deletes the certificate bot from the server.\nAdditionally, any tags signed with the given certificate will no longer be verified."),Object(i.b)("p",null,"Returns a promise that resolves when the certificate has been revoked."),Object(i.b)("p",null,"Revoking a certificate works by creating another record (called a revocation) that is signed by either the original certificate\nor an ancestor of the original certificate. This record is then stored in the shared space and lets everyone see that the certificate is no longer valid."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the certificate that should be revoked."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the secret that should be used to decrypt the corresponding certificate's private key.\nIf the signer parameter is specified, then this is the secret for the signer certificate.\nIf the signer parameter is omitted, then this is the secret for the certificate that is being revoked."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the certificate that should be used to perform the revocation process.\nIf not specified, then the revocation will be signed by the revoked certificate (self-signed revocation).\nIf specified, then the revocation will be signed using the given certificate.\nNote that any certificate that is specified must either be the original certificate or an ancestor of the original certificate."),Object(i.b)("h4",{id:"examples-216"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Revoke a certificate with itself.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const cert = getBot('id', certificateId);\nawait crypto.revokeCertificate(cert, 'secretForCert');\n\nos.toast('Certificate revoked!');\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Revoke a certificate using another certificate.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const certToRevoke = getBot('id', certToRevokeId);\nconst signingCert = getBot('id', signingCertId);\n\nawait crypto.revokeCertificate(certToRevoke, 'secretForSigningCert', signingCert);\n\nos.toast('Certificate revoked!');\n")),Object(i.b)("h2",{id:"admin-actions"},"Admin Actions"),Object(i.b)("h3",{id:"adminspaceunlockpassword"},Object(i.b)("inlineCode",{parentName:"h3"},"adminSpace.unlock(password)")),Object(i.b)("p",null,"Unlocks the admin space using the given password.\nReturns a Promise that resolves once the space is unlocked.\nThe promise will be rejected if the space was unable to be unlocked."),Object(i.b)("p",null,"If given the correct password, admin space will be unlocked and become editable."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to unlock admin space."),Object(i.b)("h4",{id:"examples-217"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Unlock admin space.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'try {\n    await adminSpace.unlock("my-password");\n    os.toast("Admin Space Unlocked!");\n} catch(err) {\n    os.toast("Failed to unlock admin space " + err);\n}\n')),Object(i.b)("h3",{id:"adminspacesetpasswordoldpassword-newpassword"},Object(i.b)("inlineCode",{parentName:"h3"},"adminSpace.setPassword(oldPassword, newPassword)")),Object(i.b)("p",null,"Sets the password that should be used to unlock admin space.\nReturns a Promise that resolves once the password is changed."),Object(i.b)("p",null,"If given the correct password, admin space will use the new password."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the password that is currently used to unlock admin space."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the password that should be used to unlock admin space."),Object(i.b)("h4",{id:"examples-218"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Change the admin space password.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'try {\n    await adminSpace.setPassword("old-password", "new-password");\n    os.toast("Admin Space Password Changed!");\n} catch(err) {\n    os.toast("Failed to change the password " + err);\n}\n')),Object(i.b)("h2",{id:"custom-portal-actions"},"Custom Portal Actions"),Object(i.b)("p",null,"Custom portals are a way to create your own portals inside CasualOS.\nUnlike listen tags, they provide the ability to interact directly with HTML and make it easy to reuse code.\nThis makes them very powerful for creating experiences that you have full control over."),Object(i.b)("p",null,"Custom portals are designed to work hand in hand with ",Object(i.b)("a",Object(n.a)({parentName:"p"},{href:"https://javascript.info/modules-intro"}),"JavaScript Modules")," and they\nprovide several features to make using other modules easy. In particular, Custom portals allow importing scripts from other tags and scripts from the web."),Object(i.b)("h4",{id:"examples-219"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'A custom portal that displays "Hello, World!".')),Object(i.b)("p",null,"First, create a bot and open it in the sheet. Then create the ",Object(i.b)("inlineCode",{parentName:"p"},"main")," tag and type the following into it:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"\ud83d\udcd6const div = document.createElement('div');\ndocument.body.appendChild(div);\ndiv.textContent = 'Hello, World!';\n")),Object(i.b)("p",null,"Next, create an ",Object(i.b)("inlineCode",{parentName:"p"},"onClick")," tag and type this:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),"@await portal.registerPrefix('\ud83d\udcd6');\nawait portal.open('my-portal', null, '\ud83d\udcd6main');\n")),Object(i.b)("p",null,'Finally, click the bot to start the portal. You should see a white frame appear over the top half of the screen and have the text "Hello, World!" in it.'),Object(i.b)("h3",{id:"portalopenportalid-bot-tag-options"},Object(i.b)("inlineCode",{parentName:"h3"},"portal.open(portalId, bot, tag?, options?)")),Object(i.b)("p",null,"Registers a custom portal with the given ID and options. Returns a promise that resolves when the portal has been registered.\nCan be called multiple times with new options to override previous options."),Object(i.b)("p",null,"After calling this function for a portal, CasualOS will look for tags that are referenced by the specified tag via import statements and produce a script bundle that is injected into the portal.\nAdditionally, whenever one of those tags are changed the portal will be reloaded with the new bundle."),Object(i.b)("p",null,"CasualOS will also define a global variable ",Object(i.b)("inlineCode",{parentName:"p"},"{portalId}Bot")," that points to the given bot.\nThis lets you override the default config bot for builtin portals like ",Object(i.b)("inlineCode",{parentName:"p"},"pagePortal")," and ",Object(i.b)("inlineCode",{parentName:"p"},"tagPortal"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the ID that the portal should have. This is used to distinguish portals from each other."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the bot that should be used to configure the portal. You can provide ",Object(i.b)("inlineCode",{parentName:"p"},"null")," if you do not want the portal to have a config bot."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is optional and is the tag or source code that the portal should be loaded from.\nThis value can be prefixed with a registered prefix to limit which tags can be used as entrypoints.\nThe ",Object(i.b)("inlineCode",{parentName:"p"},"mode")," property of the options parameter determines whether this parameter should be a tag or some source code."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the options that the portal should use. It is an object and should have the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let options: {\n\n    /**\n     * The mode that the portal should operate in.\n     * \n     * "Tag" indicates that second parameter should be interpreted\n     * as a tag name and that the portal should be loaded from that tag.\n     * \n     * "source" indicates that the second parameter should be interpreted\n     * as some source code and the portal loaded directly from the source.\n     * \n     * Defaults to "tag".\n     */\n    mode?: "tag" | "source";\n\n    /**\n     * The CSS styles that should be used for the portal.\n     */\n    style?: any;\n};\n')),Object(i.b)("h4",{id:"examples-220"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Replace the ",Object(i.b)("inlineCode",{parentName:"li"},"pagePortalBot")," with a custom bot.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myConfigBot = create({\n    space: "tempLocal",\n    portalColor: "blue"\n});\nawait portal.open("pagePortal", myConfigBot);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Open a custom portal for the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.open("my-portal", null, "test");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Open a custom portal for ",Object(i.b)("inlineCode",{parentName:"li"},"test")," tags that are prefixed with ",Object(i.b)("inlineCode",{parentName:"li"},"\ud83d\udd3a"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.registerPrefix(\'\ud83d\udd3a\');\nawait portal.open("my-portal", null, "\ud83d\udd3atest");\n')),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"Open a custom portal with a custom CSS style.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.open("my-portal", null, "test", {\n    style: {\n        height: \'30%\'\n    }\n});\n')),Object(i.b)("ol",{start:5},Object(i.b)("li",{parentName:"ol"},"Open a custom portal with some source code.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.open("my-portal", null, `console.log("Hello, Portal!");`, {\n    mode: "source"\n});\n')),Object(i.b)("h3",{id:"portalregisterprefixprefix-options"},Object(i.b)("inlineCode",{parentName:"h3"},"portal.registerPrefix(prefix, options?)")),Object(i.b)("p",null,"Specifies that the given prefix should be used to indicate that the tag contains script content that can be used in a custom portal.\nUse this function to specify custom prefixes that function similarly to ",Object(i.b)("inlineCode",{parentName:"p"},"@")," or ",Object(i.b)("inlineCode",{parentName:"p"},"\ud83e\uddec"),"."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the prefix that should indicate that the rest of the tag value is a script."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and is the options that should be used for the prefix. It is an object and should have the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let options: {\n\n    /**\n     * The language that scripts with the prefix should be interpreted as.\n     * \n     * "javascript" and "typescript" can be used for general purpose programming.\n     * \n     * "jsx" and "tsx" are extensions to JavaScript and TypeScript which includes the ability\n     * to write HTML-like code that gets converted to JavaScript/TypeScript code.\n     * \n     * "json" can be used to interpret the data as JSON (like \ud83e\uddec).\n     * \n     * "text" can be used to interpret the data as plain text.\n     * \n     * Defaults to "javascript".\n     */\n    language?: "javascript" | "typescript" | "json" | "jsx" | "tsx" | "text";\n};\n')),Object(i.b)("h4",{id:"examples-221"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add ",Object(i.b)("inlineCode",{parentName:"li"},"\ud83d\udcd6")," as an script prefix.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.registerPrefix("\ud83d\udcd6");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Register some arbitrary text as a prefix.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.registerPrefix("myPrefix");\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Register a prefix as ",Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://reactjs.org/docs/introducing-jsx.html"}),"JSX code"),".")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await portal.registerPrefix("\ud83d\udd3a", {\n    language: "jsx"\n});\n')),Object(i.b)("h3",{id:"portalbuildbundletag"},Object(i.b)("inlineCode",{parentName:"h3"},"portal.buildBundle(tag)")),Object(i.b)("p",null,"Builds a script bundle for the given tag and returns a promise that resolves when the build is done.\nThis function is useful for getting the code that portals would use."),Object(i.b)("p",null,"Resolves with an object that has the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let result: {\n    /**\n     * The tag the bundle was built from.\n     */\n    tag: string;\n\n    /**\n     * The source code that the bundle contains.\n     * If an error occurred, then this will be null/undefined.\n     */\n    source?: string;\n\n    /**\n     * The error that occurred while building the bundle.\n     * Null/Undefined if an error did not happen.\n     */\n    error?: string;\n\n    /**\n     * The list of warnings that occurred while building the bundle.\n     */\n    warnings: string[];\n\n    /**\n     * The map of Bot IDs to tags that are contained in the bundle.\n     */\n    modules: {\n        [id: string]: Set<string>;\n    };\n};\n")),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the tag that the bundle should be built from. This value can be prefixed with a registered prefix to limit which tags can be used as entrypoints."),Object(i.b)("h4",{id:"examples-222"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get a script bundle for the ",Object(i.b)("inlineCode",{parentName:"li"},"test")," tag.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bundle = await portal.buildBundle("test");\n')),Object(i.b)("h2",{id:"experimental-actions"},"Experimental Actions"),Object(i.b)("h3",{id:"experimentlocalformanimationbot-animation"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.localFormAnimation(bot, animation)")),Object(i.b)("p",null,"Locally plays the given animation on the given bot."),Object(i.b)("p",null,"If an animation is already playing, it will be interrupted.\nWhen the given animation is finished playing, the interrupted animation will be restored."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the Bot or Bot ID that the animation should be played on."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the name or index of the animation that should be played."),Object(i.b)("h4",{id:"examples-223"},"Examples"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Play the "jump" animation on this bot.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'experiment.localFormAnimation(this, "jump");\n')),Object(i.b)("h3",{id:"experimentlocalpositiontweenbot-dimension-position-easing"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.localPositionTween(bot, dimension, position, easing?)")),Object(i.b)("p",null,"Locally plays a tween that moves the given bot in the given dimension to the given position.\nOptionally allows customizing the easing of the tween."),Object(i.b)("p",null,"Returns a promise that resolves when the tween is finished."),Object(i.b)("p",null,"While the tween is playing, any updates to the bot's position and rotation are ignored.\nOnce the tween is done playing, any change to the bot will reset the position/rotation."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or ID of the bot that should be tweened."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the bot should be tweened in.\nNote that the tween will only work if the given dimension is currently in the page portal or inventory portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the position that the bot should be tweened to. If you exclude a dimension (like ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"z"),"), then it will remain unchanged."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the options that should be used.\nIt is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n\n    /**\n     * The amount of time that the tween takes to complete in seconds.\n     * The maximum duration is 24 hours (86,400 seconds).\n     * The minimum duration is 0.\n     * Defaults to 1 if not specified.\n     */\n    duration?: number;\n\n    /**\n     * The options for easing.\n     * Defaults to \"linear\" \"inout\" if not specified.\n     */\n    easing?: {\n        /**\n         * The type of easing.\n        */\n        type: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic';\n\n        /**\n         * Whether to apply the easing at the\n         * start (in), end (out), or start and end (inout) of the tween.\n         */\n        mode: 'in' | 'out' | 'inout';\n    }\n};\n")),Object(i.b)("h4",{id:"examples-224"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Tween the bot to X = 10 in the ",Object(i.b)("inlineCode",{parentName:"li"},"home")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localPositionTween(\n    this,\n    'home',\n    {\n        x: 10,\n    });\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Tween the bot over 5 seconds.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localPositionTween(\n    this,\n    'home',\n    {\n        x: 10,\n    },\n    {\n        duration: 5\n    });\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Tween the bot with quadratic easing.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localPositionTween(\n    this,\n    'home',\n    {\n        x: 10,\n    },\n    { \n        easing: {\n            type: 'quadratic',\n            mode: 'inout'\n        }\n    });\n")),Object(i.b)("h3",{id:"experimentlocalrotationtweenbot-dimension-rotation-easing"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.localRotationTween(bot, dimension, rotation, easing?)")),Object(i.b)("p",null,"Locally plays a tween that rotates the given bot in the given dimension to the given rotation.\nOptionally allows customizing the easing of the tween."),Object(i.b)("p",null,"Returns a promise that resolves when the tween is finished."),Object(i.b)("p",null,"While the tween is playing, any updates to the bot's position and rotation are ignored.\nOnce the tween is done playing, any change to the bot will reset the position/rotation."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot or ID of the bot that should be tweened."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the bot should be tweened in.\nNote that the tween will only work if the given dimension is currently in the page portal or inventory portal."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the rotation that the bot should be tweened to in radians. If you exclude a dimension (like ",Object(i.b)("inlineCode",{parentName:"p"},"x"),", ",Object(i.b)("inlineCode",{parentName:"p"},"y"),", or ",Object(i.b)("inlineCode",{parentName:"p"},"z"),"), then it will remain unchanged."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the options that should be used.\nIt is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n\n    /**\n     * The amount of time that the tween takes to complete in seconds.\n     * The maximum duration is 24 hours (86,400 seconds).\n     * The minimum duration is 0.\n     * Defaults to 1.\n     */\n    duration?: number;\n\n    /**\n     * The options for easing.\n     * Defaults to \"linear\" \"inout\" if not specified.\n     */\n    easing?: {\n        /**\n         * The type of easing.\n        */\n        type: 'linear'\n            | 'quadratic'\n            | 'cubic'\n            | 'quartic'\n            | 'quintic'\n            | 'sinusoidal'\n            | 'exponential'\n            | 'circular'\n            | 'elastic';\n\n        /**\n         * Whether to apply the easing at the\n         * start (in), end (out), or start and end (inout) of the tween.\n         */\n        mode: 'in' | 'out' | 'inout';\n    }\n};\n")),Object(i.b)("h4",{id:"examples-225"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Tween the bot 90 degrees around the Z axis in the ",Object(i.b)("inlineCode",{parentName:"li"},"home")," dimension.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localRotationTween(\n    this,\n    'home',\n    {\n        z: Math.PI / 2,\n    });\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Tween the bot for 5 seconds.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localRotationTween(\n    this,\n    'home',\n    {\n        z: Math.PI / 2,\n    },\n    {\n        duration: 5\n    });\n")),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Tween the bot with quadratic easing.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"experiment.localRotationTween(\n    this,\n    'home',\n    {\n        z: Math.PI / 2,\n    },\n    {\n        easing: {\n            type: 'quadratic',\n            mode: 'inout'\n        }\n    });\n")),Object(i.b)("h3",{id:"experimentgetanchorpointpositionbot-dimension-anchorpoint"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.getAnchorPointPosition(bot, dimension, anchorPoint)")),Object(i.b)("p",null,"Gets the absolute position in the given dimension that the center of the given bot would be placed at if the bot was using the given anchor point."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the bot that the anchor point position should be calculated for."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the anchor point position should be calculated in."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"third parameter")," is the anchor point that should be calculated. Can be any valid ",Object(i.b)(r.TagLink,{tag:"anchorPoint",mdxType:"TagLink"})," value."),Object(i.b)("h4",{id:"examples-226"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Get the top anchor point of the current bot in the "home" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const point = experiment.getAnchorPointPosition(bot, "home", "top");\nos.toast(point);\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Get the back right anchor point of the current bot in the "home" dimension.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const point = experiment.getAnchorPointPosition(bot, "home", [ 0.5, -0.5, 0 ]);\nos.toast(point);\n')),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Place bots at each of the anchor points.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let points = [\n    'top',\n    'bottom',\n    'front',\n    'back',\n    'left',\n    'right',\n    'center',\n];\n\nfor(let point of points) {\n    let pos = experiment.getAnchorPointPosition(bot, os.getCurrentDimension(), point);\n    create({\n        space: 'tempShared',\n        color: 'green',\n        [os.getCurrentDimension()]: true,\n        [os.getCurrentDimension() + \"X\"]: pos.x,\n        [os.getCurrentDimension() + \"Y\"]: pos.y,\n        [os.getCurrentDimension() + \"Z\"]: pos.z,\n        anchorPoint: 'center',\n        targetAnchorPoint: point,\n        scale: 0.1,\n    });\n}\n")),Object(i.b)("h3",{id:"experimentbeginrecordingoptions"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.beginRecording(options?)")),Object(i.b)("p",null,"Starts a new recording. Returns a promise that resolves when recording has started.\nThe returned promise will throw an error if recording could not be started. Reasons for this include insufficient permissions and not having a microphone."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," should be an object and contains the options that should be used for the recording. It should have the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * Whether the audio should be recorded.\n     * If the computer does not have an audio device attached, then setting this to true\n     * will cause an error.\n     * \n     * Defaults to true.\n     */\n    audio: boolean;\n\n    /**\n     * Whether video from a video camera should be recorded.\n     * \n     * If the computer does not have a video device attached (like a web cam),\n     * then setting this to true will cause an error.\n     * \n     * Defaults to true.\n     */\n    video: boolean;\n\n    /**\n     * Whether the screen should be recorded.\n     * \n     * Defaults to false.\n     */\n    screen: boolean;\n};\n")),Object(i.b)("h4",{id:"examples-227"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Record for 10 seconds and download the files.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await experiment.beginRecording({\n    audio: true,\n    video: true,\n    screen: false\n});\nawait os.sleep(10000);\nconst data = await experiment.endRecording();\nlet index = 0;\nfor(let file of data.files) {\n    os.download(file.data, `file-${index}`);\n    index += 1;\n}\n")),Object(i.b)("h3",{id:"experimentendrecording"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.endRecording()")),Object(i.b)("p",null,"Stops the recording that is in progress. Returns a promise that resolves with the recorded data."),Object(i.b)("p",null,"The resolved data is an object and has the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let recording: {\n    files: {\n        containsAudio: boolean;\n        containsVideo: boolean;\n        containsScreen: boolean;\n        data: Blob;\n    }[];\n};\n")),Object(i.b)("h4",{id:"examples-228"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Record for 10 seconds and download the files.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await experiment.beginRecording({\n    audio: true,\n    video: true,\n    screen: false\n});\nawait os.sleep(10000);\nconst data = await experiment.endRecording();\nlet index = 0;\nfor(let file of data.files) {\n    os.download(file.data, `file-${index}`);\n    index += 1;\n}\n")),Object(i.b)("h3",{id:"experimentbeginaudiorecording"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.beginAudioRecording()")),Object(i.b)("p",null,"Starts a new audio recording. Returns a promise that resolves when recording has started.\nThe returned promise will throw an error if recording could not be started. Reasons for this include insufficient permissions and not having a microphone."),Object(i.b)("h4",{id:"examples-229"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Record some audio for 10 seconds and download the file.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await experiment.beginAudioRecording();\nawait os.sleep(10000);\nconst data = await experiment.endAudioRecording();\n\nos.download(data);\n")),Object(i.b)("h3",{id:"experimentendaudiorecording"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.endAudioRecording()")),Object(i.b)("p",null,"Stops the audio recording that is in progress. Returns a promise that resolves with the recorded data."),Object(i.b)("h4",{id:"examples-230"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Record some audio for 10 seconds and download the file.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await experiment.beginAudioRecording();\nawait os.sleep(10000);\nconst data = await experiment.endAudioRecording();\n\nos.download(data);\n")),Object(i.b)("h3",{id:"experimentgetvoices"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.getVoices()")),Object(i.b)("p",null,"Gets the list of synthetic voices that are supported by the system.\nReturns a promise that resolves with the list. Each item in the list is an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let voice: {\n    /**\n     * Whether this voice is the default synthetic voice.\n     */\n    default: boolean;\n\n    /**\n     * The language that this voice can speak.\n     * This is the BCP 47 tag indicating which language and which region the language is for.\n     * For example, "en-US" represents English for the United States locale.\n     */\n    language: string;\n\n    /**\n     * The name of the voice.\n     */\n    name: string;\n};\n')),Object(i.b)("h4",{id:"examples-231"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Toast the list of voices that are supported.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const voices = await experiment.getVoices();\nos.toast(voices);\n")),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Get the first US English voice.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const voices = await experiment.getVoices();\nconst usEnglish = voices.find(v => v.language === "en-US");\nos.toast(usEnglish);\n')),Object(i.b)("h3",{id:"experimentspeaktexttext-options"},Object(i.b)("inlineCode",{parentName:"h3"},"experiment.speakText(text, options?)")),Object(i.b)("p",null,"Speaks the given text using a synthetic voice and options.\nNote that this is a local effect. The gererated sounds are only played in the current session."),Object(i.b)("p",null,"Returns a promise that resolves when the text has been spoken."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"first parameter")," is the text that should be spoken."),Object(i.b)("p",null,"The ",Object(i.b)("strong",{parentName:"p"},"second parameter")," is optional and are the options that should be used to speak the text. It should be an object with the following properties:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The voice that the text should be spoken with.\n     * This can be the voice object or the name of a voice.\n     * Note that not all browsers support the same voices.\n     */\n    voice?: string | object;\n\n    /**\n     * The rate that the text should be spoken at.\n     * This can be any positive number.\n     */\n    rate?: number;\n\n    /**\n     * The pitch that the text should be spoken at.\n     * This can be any positive number.\n     */\n    pitch?: number;\n};\n")),Object(i.b)("h4",{id:"examples-232"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},'Say "hello".')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await experiment.speakText("hello");\nos.toast("We said hello!");\n')),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},'Say "hello" using the first US English voice.')),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const voices = await experiment.getVoices();\nconst usEnglish = voices.find(v => v.language === "en-US");\n\nawait experiment.speakText("hello", {\n    voice: usEnglish\n});\nos.toast("Spoken!");\n')),Object(i.b)("h3",{id:"perfgetstats"},Object(i.b)("inlineCode",{parentName:"h3"},"perf.getStats()")),Object(i.b)("p",null,"Gets an object that contains statistics about the performance of the server."),Object(i.b)("p",null,"The returned object has the following structure:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let stats: {\n    /**\n     * The number of bots in the server.\n     */\n    numberOfBots: number,\n\n    /**\n     * A list shouts and their associated execution time (in miliseconds).\n     * Sorted from largest time to smallest.\n     */\n    shoutTimes: {\n        tag: string,\n        timeMs: number\n    }[];\n\n    /**\n     * The total number of active setTimeout() and setInterval() timers that are active.\n     */\n    numberOfActiveTimers: number;\n};\n")),Object(i.b)("h4",{id:"examples-233"},"Examples:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Get the 5 slowest listen tags.")),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const stats = perf.getStats();\nconst slowestTags = stats.shoutTimers.slice(0, 5).map(timer => timer.tag)\n\nos.toast(slowestTags.join());\n")))}p.isMDXComponent=!0}}]);