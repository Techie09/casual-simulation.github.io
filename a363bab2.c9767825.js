(window.webpackJsonp=window.webpackJsonp||[]).push([[10,9],{126:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return p})),a.d(t,"rightToc",(function(){return d})),a.d(t,"PossibleValuesTable",(function(){return h})),a.d(t,"PossibleValue",(function(){return m})),a.d(t,"PossibleValueCode",(function(){return u})),a.d(t,"AnyColorValues",(function(){return O})),a.d(t,"TagLink",(function(){return j})),a.d(t,"DataTagLink",(function(){return g})),a.d(t,"ListenTagLink",(function(){return y})),a.d(t,"ActionLink",(function(){return f})),a.d(t,"NormalCode",(function(){return N})),a.d(t,"LabelAnchorValues",(function(){return v})),a.d(t,"Badges",(function(){return w})),a.d(t,"Badge",(function(){return T})),a.d(t,"ReadOnlyBadge",(function(){return k})),a.d(t,"VideoBadge",(function(){return x})),a.d(t,"UserBotBadge",(function(){return C})),a.d(t,"HistoryBotBadge",(function(){return L})),a.d(t,"ConfigBotBadge",(function(){return P})),a.d(t,"Alert",(function(){return S})),a.d(t,"default",(function(){return E}));a(164),a(163);function n(e){if(null==e)throw new TypeError("Cannot destructure undefined")}var o=a(2),r=a(9),i=a(0),l=a.n(i),b=a(160),s=a(161),c={},p={id:"components",title:"components",description:"export const PossibleValuesTable = ({children}) => (",source:"@site/docs/components.mdx",permalink:"/docs/components",editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/components.mdx"},d=[],h=function(e){var t=e.children;return Object(b.b)("table",null,Object(b.b)("thead",null,Object(b.b)("tr",null,Object(b.b)("th",null,"Value"),Object(b.b)("th",null,"Description"))),Object(b.b)("tbody",null,t))},m=function(e){var t=e.value,a=e.children,n=Object(r.a)(e,["value","children"]);return Object(b.b)("tr",n,Object(b.b)("td",null,t),Object(b.b)("td",null,a))},u=function(e){var t=e.value,a=e.children,n=Object(r.a)(e,["value","children"]);return Object(b.b)(m,Object(o.a)({value:Object(b.b)("code",null,t)},n,{mdxType:"PossibleValue"}),a)},O=function(e){return n(e),Object(b.b)(l.a.Fragment,null,Object(b.b)(m,{value:"Any X11 Color",mdxType:"PossibleValue"},Object(b.b)("a",{href:"https://en.wikipedia.org/wiki/X11_color_names",target:"_blank"},"X11 colors")," are a list of standard colors that web browsers support."),Object(b.b)(m,{value:"Any Hex Color",mdxType:"PossibleValue"},Object(b.b)("a",{href:"https://en.wikipedia.org/wiki/Web_colors#Hex_triplet",target:"_blank"},"Hex colors")," are three or six digit numbers that specify a color by its red, green, and blue components."))},j=function(e){var t=e.tag;return t.startsWith("@")?Object(b.b)(y,{tag:t,mdxType:"ListenTagLink"}):Object(b.b)(g,{tag:t,mdxType:"DataTagLink"})},g=function(e){var t=e.tag;return Object(b.b)("a",{href:Object(s.a)("docs/tags")+"#"+t.replace(/\./g,"").toLowerCase()},Object(b.b)(N,{mdxType:"NormalCode"},"#",t))},y=function(e){var t=e.tag;return Object(b.b)("a",{href:Object(s.a)("docs/listen-tags")+"#"+t.replace(/[\.\(\)\@\[\]]/g,"").toLowerCase()},Object(b.b)(N,{mdxType:"NormalCode"},t))},f=function(e){var t=e.action,a=e.children;return Object(b.b)("a",{href:Object(s.a)("docs/actions")+"#"+t.replace(/[\.\(\)\,\?]/g,"").replace(/\s/g,"-").toLowerCase()},a||Object(b.b)(N,{mdxType:"NormalCode"},t))},N=function(e){var t=e.children;return l.a.createElement.apply(l.a,["code",{}].concat(t))},v=function(e){return n(e),Object(b.b)(l.a.Fragment,null,Object(b.b)(u,{value:"top",mdxType:"PossibleValueCode"},"Top of the bot facing world oriented up. (default)"),Object(b.b)(u,{value:"front",mdxType:"PossibleValueCode"},"Front of the bot facing world oriented forward."),Object(b.b)(u,{value:"back",mdxType:"PossibleValueCode"},"Back of the bot facing world oriented back."),Object(b.b)(u,{value:"right",mdxType:"PossibleValueCode"},"Right of the bot facing world oriented right."),Object(b.b)(u,{value:"left",mdxType:"PossibleValueCode"},"Left of the bot facing world oriented left."),Object(b.b)(u,{value:"floating",mdxType:"PossibleValueCode"},"Floating above the bot."))},w=function(e){var t=e.children;return Object(b.b)("div",{className:"row badge-row"},Object(b.b)("div",{className:"col"},t))},T=function(e){var t=e.type,a=e.children;return Object(b.b)("span",{className:"badge badge--"+t},a)},k=function(e){return n(e),Object(b.b)(T,{type:"warning",mdxType:"Badge"},"Read-Only")},x=function(e){var t=e.url;return Object(b.b)(T,{type:"info",mdxType:"Badge"},Object(b.b)("a",{href:t,target:"_blank"},"Video"))},C=function(e){e.url;return Object(b.b)(T,{type:"primary",mdxType:"Badge"},"Player Bot")},L=function(e){e.url;return Object(b.b)(T,{type:"primary",mdxType:"Badge"},"History Bot")},P=function(e){e.url;return Object(b.b)(T,{type:"primary",mdxType:"Badge"},"Config Bot")},S=function(e){var t=e.type,a=e.children;return Object(b.b)("div",{className:"alert alert--"+t,role:"alert"},a)},A={rightToc:d,PossibleValuesTable:h,PossibleValue:m,PossibleValueCode:u,AnyColorValues:O,TagLink:j,DataTagLink:g,ListenTagLink:y,ActionLink:f,NormalCode:N,LabelAnchorValues:v,Badges:w,Badge:T,ReadOnlyBadge:k,VideoBadge:x,UserBotBadge:C,HistoryBotBadge:L,ConfigBotBadge:P,Alert:S};function E(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(o.a)({},A,a,{components:t,mdxType:"MDXLayout"}))}E.isMDXComponent=!0},145:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return b})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(2),o=a(9),r=(a(0),a(160)),i=a(126),l={id:"actions",title:"Actions",sidebar_label:"Actions",description:"Actions affect the data in bots and also do things to the outside world."},b={id:"actions",title:"Actions",description:"Actions affect the data in bots and also do things to the outside world.",source:"@site/docs/actions.mdx",permalink:"/docs/actions",editUrl:"https://github.com/casual-simulation/casualos/tree/develop/docs/docs/actions.mdx",sidebar_label:"Actions",sidebar:"docs",previous:{title:"Listen Tags",permalink:"/docs/listen-tags"}},s=[{value:"Data Actions",id:"data-actions",children:[{value:"<code>create(...mods)</code>",id:"createmods",children:[]},{value:"<code>destroy(bot)</code>",id:"destroybot",children:[]},{value:"<code>applyMod(bot, ...mods)</code>",id:"applymodbot-mods",children:[]},{value:"<code>subtractMods(bot, ...mods)</code>",id:"subtractmodsbot-mods",children:[]},{value:"<code>removeTags(bot, tagSection)</code>",id:"removetagsbot-tagsection",children:[]},{value:"<code>renameTag(bot, originalTag, newTag)</code>",id:"renametagbot-originaltag-newtag",children:[]},{value:"<code>changeState(bot, stateName, groupName?)</code>",id:"changestatebot-statename-groupname",children:[]},{value:"<code>getBots(..filters)</code>",id:"getbotsfilters",children:[]},{value:"<code>getBots(tag, value?)</code>",id:"getbotstag-value",children:[]},{value:"<code>getBot(...filters)</code>",id:"getbotfilters",children:[]},{value:"<code>getBot(tag, filter?)</code>",id:"getbottag-filter",children:[]},{value:"<code>getBotTagValues(tag, filter?)</code>",id:"getbottagvaluestag-filter",children:[]},{value:"<code>getID(bot)</code>",id:"getidbot",children:[]},{value:"<code>getJSON(data)</code>",id:"getjsondata",children:[]},{value:"<code>getMod(bot)</code>",id:"getmodbot",children:[]},{value:"<code>webhook(options)</code>",id:"webhookoptions",children:[]},{value:"<code>webhook.post(url, data?, options?)</code>",id:"webhookposturl-data-options",children:[]},{value:"<code>uuid()</code>",id:"uuid",children:[]},{value:"<code>sleep(time)</code>",id:"sleeptime",children:[]}]},{value:"Bot Filters",id:"bot-filters",children:[{value:"<code>byTag(tag, value?)</code>",id:"bytagtag-value",children:[]},{value:"<code>inDimension(dimension)</code>",id:"indimensiondimension",children:[]},{value:"<code>atPosition(dimension, x, y)</code>",id:"atpositiondimension-x-y",children:[]},{value:"<code>inStack(bot, dimension)</code>",id:"instackbot-dimension",children:[]},{value:"<code>byCreator(bot)</code>",id:"bycreatorbot",children:[]},{value:"<code>bySpace(space)</code>",id:"byspacespace",children:[]},{value:"<code>byMod(mod)</code>",id:"bymodmod",children:[]},{value:"<code>neighboring(bot, dimension, direction)</code>",id:"neighboringbot-dimension-direction",children:[]},{value:"<code>either(...filters)</code>",id:"eitherfilters",children:[]},{value:"<code>not(filter)</code>",id:"notfilter",children:[]}]},{value:"Event Actions",id:"event-actions",children:[{value:"<code>shout(name, arg?)</code>",id:"shoutname-arg",children:[]},{value:"<code>whisper(bot, name, arg?)</code>",id:"whisperbot-name-arg",children:[]},{value:"<code>superShout(name, arg?)</code>",id:"supershoutname-arg",children:[]},{value:"<code>remote(action, target?)</code>",id:"remoteaction-target",children:[]},{value:"<code>remoteWhisper(playerId, name, arg?)</code>",id:"remotewhisperplayerid-name-arg",children:[]},{value:"<code>remoteShout(name, arg?)</code>",id:"remoteshoutname-arg",children:[]},{value:"<code>action.perform(action)</code>",id:"actionperformaction",children:[]},{value:"<code>action.reject(action)</code>",id:"actionrejectaction",children:[]}]},{value:"Player Actions",id:"player-actions",children:[{value:"<code>player.checkout(options)</code>",id:"playercheckoutoptions",children:[]},{value:"<code>player.downloadBots(bots, filename)</code>",id:"playerdownloadbotsbots-filename",children:[]},{value:"<code>player.run(script)</code>",id:"playerrunscript",children:[]},{value:"<code>player.replaceDragBot(botOrMod)</code>",id:"playerreplacedragbotbotormod",children:[]},{value:"<code>player.showChat(placeholder?)</code>",id:"playershowchatplaceholder",children:[]},{value:"<code>player.showChat(options)</code>",id:"playershowchatoptions",children:[]},{value:"<code>player.hideChat()</code>",id:"playerhidechat",children:[]},{value:"<code>player.showHtml(html)</code>",id:"playershowhtmlhtml",children:[]},{value:"<code>player.hideHtml()</code>",id:"playerhidehtml",children:[]},{value:"<code>player.share(options)</code>",id:"playershareoptions",children:[]},{value:"<code>player.toast(message, duration?)</code>",id:"playertoastmessage-duration",children:[]},{value:"<code>player.tweenTo(bot, zoomValue?, rotX?, rotY?, duration?)</code>",id:"playertweentobot-zoomvalue-rotx-roty-duration",children:[]},{value:"<code>player.moveTo(bot, zoomValue?, rotX?, rotY?)</code>",id:"playermovetobot-zoomvalue-rotx-roty",children:[]},{value:"<code>player.openQRCodeScanner(camera?)</code>",id:"playeropenqrcodescannercamera",children:[]},{value:"<code>player.closeQRCodeScanner(camera?)</code>",id:"playercloseqrcodescannercamera",children:[]},{value:"<code>player.showQRCode(code)</code>",id:"playershowqrcodecode",children:[]},{value:"<code>player.hideQRCode()</code>",id:"playerhideqrcode",children:[]},{value:"<code>player.showJoinCode(story?, dimension?)</code>",id:"playershowjoincodestory-dimension",children:[]},{value:"<code>player.openBarcodeScanner(camera?)</code>",id:"playeropenbarcodescannercamera",children:[]},{value:"<code>player.closeBarcodeScanner(camera?)</code>",id:"playerclosebarcodescannercamera",children:[]},{value:"<code>player.showBarcode(code, format?)</code>",id:"playershowbarcodecode-format",children:[]},{value:"<code>player.hideBarcode()</code>",id:"playerhidebarcode",children:[]},{value:"<code>player.showInput(value?, options?)</code>",id:"playershowinputvalue-options",children:[]},{value:"<code>player.showInputForTag(bot, tag, options?)</code>",id:"playershowinputfortagbot-tag-options",children:[]},{value:"<code>player.setClipboard(text)</code>",id:"playersetclipboardtext",children:[]},{value:"<code>player.showUploadAuxFile()</code>",id:"playershowuploadauxfile",children:[]},{value:"<code>player.loadStory(story)</code>",id:"playerloadstorystory",children:[]},{value:"<code>player.unloadStory()</code>",id:"playerunloadstory",children:[]},{value:"<code>player.downloadStory()</code>",id:"playerdownloadstory",children:[]},{value:"<code>player.enableAR()</code>",id:"playerenablear",children:[]},{value:"<code>player.disableAR()</code>",id:"playerdisablear",children:[]},{value:"<code>player.enableVR()</code>",id:"playerenablevr",children:[]},{value:"<code>player.disableVR()</code>",id:"playerdisablevr",children:[]},{value:"<code>player.getCurrentStory()</code>",id:"playergetcurrentstory",children:[]},{value:"<code>player.getCurrentDimension()</code>",id:"playergetcurrentdimension",children:[]},{value:"<code>player.getMenuDimension()</code>",id:"playergetmenudimension",children:[]},{value:"<code>player.getInventoryDimension()</code>",id:"playergetinventorydimension",children:[]},{value:"<code>player.hasBotInInventory(bot)</code>",id:"playerhasbotininventorybot",children:[]},{value:"<code>player.getPortalDimension(portal)</code>",id:"playergetportaldimensionportal",children:[]},{value:"<code>player.getDimensionalDepth(dimension)</code>",id:"playergetdimensionaldepthdimension",children:[]},{value:"<code>player.getBot()</code>",id:"playergetbot",children:[]},{value:"<code>player.getCameraPosition(portal?)</code>",id:"playergetcamerapositionportal",children:[]},{value:"<code>player.getCameraRotation(portal?)</code>",id:"playergetcamerarotationportal",children:[]},{value:"<code>player.getPointerPosition(pointer?)</code>",id:"playergetpointerpositionpointer",children:[]},{value:"<code>player.getPointerRotation(pointer?)</code>",id:"playergetpointerrotationpointer",children:[]},{value:"<code>player.getInputState(controller, button)</code>",id:"playergetinputstatecontroller-button",children:[]},{value:"<code>player.getInputList()</code>",id:"playergetinputlist",children:[]},{value:"<code>player.goToDimension(dimension)</code>",id:"playergotodimensiondimension",children:[]},{value:"<code>player.goToURL(url)</code>",id:"playergotourlurl",children:[]},{value:"<code>player.openURL(url)</code>",id:"playeropenurlurl",children:[]},{value:"<code>player.openDevConsole()</code>",id:"playeropendevconsole",children:[]},{value:"<code>player.playSound(url)</code>",id:"playerplaysoundurl",children:[]},{value:"<code>player.bufferSound(url)</code>",id:"playerbuffersoundurl",children:[]},{value:"<code>player.cancelSound(soundID)</code>",id:"playercancelsoundsoundid",children:[]},{value:"<code>player.isInDimension(dimension)</code>",id:"playerisindimensiondimension",children:[]},{value:"<code>player.inSheet()</code>",id:"playerinsheet",children:[]},{value:"<code>player.importAUX(urlOrJSON)</code>",id:"playerimportauxurlorjson",children:[]},{value:"<code>player.version()</code>",id:"playerversion",children:[]},{value:"<code>player.device()</code>",id:"playerdevice",children:[]},{value:"<code>player.requestFullscreenMode()</code>",id:"playerrequestfullscreenmode",children:[]},{value:"<code>player.exitFullscreenMode()</code>",id:"playerexitfullscreenmode",children:[]}]},{value:"Server Actions",id:"server-actions",children:[{value:"<code>server.backupToGithub(auth)</code>",id:"serverbackuptogithubauth",children:[]},{value:"<code>server.backupAsDownload(target)</code>",id:"serverbackupasdownloadtarget",children:[]},{value:"<code>server.finishCheckout(options)</code>",id:"serverfinishcheckoutoptions",children:[]},{value:"<code>server.setupStory(story, botOrMod?)</code>",id:"serversetupstorystory-botormod",children:[]},{value:"<code>server.exportGpio(pin, mode)</code>",id:"serverexportgpiopin-mode",children:[]},{value:"<code>server.unexportGpio(pin, mode)</code>",id:"serverunexportgpiopin-mode",children:[]},{value:"<code>server.setGpio(pin, value)</code>",id:"serversetgpiopin-value",children:[]},{value:"<code>server.getGpio(pin)</code>",id:"servergetgpiopin",children:[]},{value:"<code>server.rpioInit(options)</code>",id:"serverrpioinitoptions",children:[]},{value:"<code>server.rpioExit()</code>",id:"serverrpioexit",children:[]},{value:"<code>server.rpioOpen(pin, mode, options)</code>",id:"serverrpioopenpin-mode-options",children:[]},{value:"<code>server.rpioMode(pin, mode, options)</code>",id:"serverrpiomodepin-mode-options",children:[]},{value:"<code>server.rpioRead(pin)</code>",id:"serverrpioreadpin",children:[]},{value:"<code>server.rpioReadSequence(pin, length)</code>",id:"serverrpioreadsequencepin-length",children:[]},{value:"<code>server.rpioWrite(pin, value)</code>",id:"serverrpiowritepin-value",children:[]},{value:"<code>server.rpioWriteSequence(pin, buffer)</code>",id:"serverrpiowritesequencepin-buffer",children:[]},{value:"<code>server.rpioClose(pin, options)</code>",id:"serverrpioclosepin-options",children:[]},{value:"<code>server.browseHistory()</code>",id:"serverbrowsehistory",children:[]},{value:"<code>server.markHistory(options)</code>",id:"servermarkhistoryoptions",children:[]},{value:"<code>server.restoreHistoryMark(mark)</code>",id:"serverrestorehistorymarkmark",children:[]},{value:"<code>server.restoreHistoryMarkToStory(mark, story)</code>",id:"serverrestorehistorymarktostorymark-story",children:[]},{value:"<code>server.shell(script)</code>",id:"servershellscript",children:[]},{value:"<code>server.loadFile(path, options?)</code>",id:"serverloadfilepath-options",children:[]},{value:"<code>server.saveFile(path, data, options?)</code>",id:"serversavefilepath-data-options",children:[]},{value:"<code>server.loadErrors(bot, tag)</code>",id:"serverloaderrorsbot-tag",children:[]},{value:"<code>server.destroyErrors()</code>",id:"serverdestroyerrors",children:[]},{value:"<code>server.storyPlayerCount(story?)</code>",id:"serverstoryplayercountstory",children:[]},{value:"<code>server.totalPlayerCount()</code>",id:"servertotalplayercount",children:[]},{value:"<code>server.stories()</code>",id:"serverstories",children:[]},{value:"<code>server.storyStatuses()</code>",id:"serverstorystatuses",children:[]},{value:"<code>server.players()</code>",id:"serverplayers",children:[]}]},{value:"Utility Actions",id:"utility-actions",children:[{value:"<code>setTag(bot, tag, value)</code>",id:"settagbot-tag-value",children:[]},{value:"<code>getTag(bot, tag)</code>",id:"gettagbot-tag",children:[]}]},{value:"Math Actions",id:"math-actions",children:[{value:"<code>math.sum(list)</code>",id:"mathsumlist",children:[]},{value:"<code>math.avg(list)</code>",id:"mathavglist",children:[]},{value:"<code>math.sqrt(value)</code>",id:"mathsqrtvalue",children:[]},{value:"<code>math.abs(number)</code>",id:"mathabsnumber",children:[]},{value:"<code>math.stdDev(list)</code>",id:"mathstddevlist",children:[]},{value:"<code>math.randomInt(min, max)</code>",id:"mathrandomintmin-max",children:[]},{value:"<code>math.random(min, max)</code>",id:"mathrandommin-max",children:[]}]},{value:"Crypto Actions",id:"crypto-actions",children:[{value:"<code>crypto.sha256(...data)</code>",id:"cryptosha256data",children:[]},{value:"<code>crypto.sha512(...data)</code>",id:"cryptosha512data",children:[]},{value:"<code>crypto.hmacSha256(key, ...data)</code>",id:"cryptohmacsha256key-data",children:[]},{value:"<code>crypto.hmacSha512(key, ...data)</code>",id:"cryptohmacsha512key-data",children:[]},{value:"<code>crypto.encrypt(password, data)</code>",id:"cryptoencryptpassword-data",children:[]},{value:"<code>crypto.decrypt(password, data)</code>",id:"cryptodecryptpassword-data",children:[]},{value:"<code>crypto.keypair(password)</code>",id:"cryptokeypairpassword",children:[]},{value:"<code>crypt.sign(keypair, password, data)</code>",id:"cryptsignkeypair-password-data",children:[]},{value:"<code>crypto.verify(keypair, signature, data)</code>",id:"cryptoverifykeypair-signature-data",children:[]},{value:"<code>crypto.createCertificate(certificate, password, keypair)</code>",id:"cryptocreatecertificatecertificate-password-keypair",children:[]},{value:"<code>crypto.signTag(certificate, password, bot, tag)</code>",id:"cryptosigntagcertificate-password-bot-tag",children:[]},{value:"<code>crypto.verifyTag(bot, tag)</code>",id:"cryptoverifytagbot-tag",children:[]},{value:"<code>crypto.revokeCertificate(certificate, password, signer?)</code>",id:"cryptorevokecertificatecertificate-password-signer",children:[]}]},{value:"Admin Actions",id:"admin-actions",children:[{value:"<code>adminSpace.unlock(password)</code>",id:"adminspaceunlockpassword",children:[]},{value:"<code>adminSpace.setPassword(oldPassword, newPassword)</code>",id:"adminspacesetpasswordoldpassword-newpassword",children:[]}]},{value:"Experimental Actions",id:"experimental-actions",children:[{value:"<code>experiment.localFormAnimation(bot, animation)</code>",id:"experimentlocalformanimationbot-animation",children:[]}]}],c={rightToc:s};function p(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"data-actions"},"Data Actions"),Object(r.b)("h3",{id:"createmods"},Object(r.b)("inlineCode",{parentName:"h3"},"create(...mods)")),Object(r.b)("p",null,"Creates a new bot or combination of bots with the given mods. Also triggers ",Object(r.b)(i.TagLink,{tag:"@onCreate",mdxType:"TagLink"})," on all the created bots.\nBy default, bots are created with a unique ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"}),", ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the current ",Object(r.b)("inlineCode",{parentName:"p"},"bot.id"),", and ",Object(r.b)(i.TagLink,{tag:"space",mdxType:"TagLink"})," set to ",Object(r.b)("inlineCode",{parentName:"p"},"shared"),"."),Object(r.b)("p",null,"If ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," references a non-existent bot or a bot with a different ",Object(r.b)(i.TagLink,{tag:"space",mdxType:"TagLink"})," than the created bot, then ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," will be set to ",Object(r.b)("inlineCode",{parentName:"p"},"null"),"."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a mod that should be applied to the new bot(s).\nIf no parameters are specified, then the new bot will have its ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," set to ",Object(r.b)("inlineCode",{parentName:"p"},"bot.id")," and ",Object(r.b)(i.TagLink,{tag:"space",mdxType:"TagLink"})," set to ",Object(r.b)("inlineCode",{parentName:"p"},"shared"),".\nIf an array of mods is used for a parameter, then one bot will be created for ",Object(r.b)("em",{parentName:"p"},"each unique combination of mods"),"."),Object(r.b)("h4",{id:"examples"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Create an empty bot:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let myNewBot = create();\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Create a red bot:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myRedBot = create({\n    color: "red"\n});\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Create a parent and a child bot:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myParentBot = create({\n    creator: null,\n    label: "Parent"\n});\nlet myChildBot = create({\n    creator: getID(myParentBot),\n    label: "Child"\n});\n')),Object(r.b)("ol",{start:4},Object(r.b)("li",{parentName:"ol"},"Create a empty bot in the ",Object(r.b)("inlineCode",{parentName:"li"},"tempLocal")," space:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let myBot = create({ space: "tempLocal" });\n')),Object(r.b)("ol",{start:5},Object(r.b)("li",{parentName:"ol"},"Create a bot from multiple mods:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// myBot is placed in the "myDimension" dimension and is colored green\nlet myBot = create({ myDimension: true }, {\n    color: "green"\n});\n')),Object(r.b)("ol",{start:6},Object(r.b)("li",{parentName:"ol"},"Create a red bot and a blue bot:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let [myRedBot, myBlueBot] = create({ creator: null}, [\n    {\n        "color": "red"\n    },\n    {\n        "color": "blue"\n    }\n]);\n')),Object(r.b)("h3",{id:"destroybot"},Object(r.b)("inlineCode",{parentName:"h3"},"destroy(bot)")),Object(r.b)("p",null,"Removes the given bot, list of bots, or bot by ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," and triggers ",Object(r.b)(i.TagLink,{tag:"@onDestroy",mdxType:"TagLink"})," for each of the destroyed bots."),Object(r.b)("p",null,"Note that only destroyable bots will be destroyed.\nBots that have ",Object(r.b)(i.TagLink,{tag:"destroyable",mdxType:"TagLink"})," set to ",Object(r.b)("inlineCode",{parentName:"p"},"false")," will not be destroyed."),Object(r.b)("p",null,"Also note that all bots that have ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," of a destroyed bot will also be destroyed (unless they are not destroyable).\nThis happens recursively until there are no more bots to destroy."),Object(r.b)("h4",{id:"examples-1"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Destroying a single bot:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy a single bot that has #name set to "bob"\ndestroy(getBot("#name", "bob"));\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Destroying a list of bots:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy all the bots that have #color set to "red"\ndestroy(getBots("#color", "red"));\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Destroying a bot by its id")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Destroy the bot with the #id: "config"\ndestroy("config");\n')),Object(r.b)("h3",{id:"applymodbot-mods"},Object(r.b)("inlineCode",{parentName:"h3"},"applyMod(bot, ...mods)")),Object(r.b)("p",null,"Applies the given mods to the given bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that the mods should be applied to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"other parameters")," are the mods that should be applied to the bot. If two mods have the same tag, then the mod that is last in the list will win."),Object(r.b)("h4",{id:"examples-2"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Set the "test" tag and "name" tag on a bot.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'applyMod(bot, {\n    test: true,\n    name: "bob"\n});\n')),Object(r.b)("h3",{id:"subtractmodsbot-mods"},Object(r.b)("inlineCode",{parentName:"h3"},"subtractMods(bot, ...mods)")),Object(r.b)("p",null,"Removes the tags contained in the given mod(s) from the given bot or mod."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that the tags should be removed from."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"other parameters")," are the bots or mods that contain the tags which should be removed from the original bot."),Object(r.b)("h4",{id:"examples-3"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Remove a mod from this bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const mod = {\n    color: 'red',\n    name: 'bob'\n};\n\nsubtractMods(this, mod);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Remove multiple mods from this bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"subtractMods(this, {\n    color: 'red'\n}, {\n    name: 'bob'\n});\n")),Object(r.b)("h3",{id:"removetagsbot-tagsection"},Object(r.b)("inlineCode",{parentName:"h3"},"removeTags(bot, tagSection)")),Object(r.b)("p",null,"Removes all the tags from the given bot that match the given tag section."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that should have the tags removed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is a string or regex that specifies which tags to remove.\nIf given a string, then all the tags that start with the given string will be removed.\nIf given a regex, then all the tags which match the regex will be removed."),Object(r.b)("h4",{id:"examples-4"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Remove tags started with ",Object(r.b)("inlineCode",{parentName:"li"},"abc")," from the ",Object(r.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'removeTags(this, "abc");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Remove tags named ",Object(r.b)("inlineCode",{parentName:"li"},"hello")," using a case-insensitive regex from the ",Object(r.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"removeTags(this, /^hello$/gi)\n")),Object(r.b)("h3",{id:"renametagbot-originaltag-newtag"},Object(r.b)("inlineCode",{parentName:"h3"},"renameTag(bot, originalTag, newTag)")),Object(r.b)("p",null,"Renames the given original tag on the given bot or list of bots to the given new tag.\nIf the original tag does not exist on the bot, then no changes will take place.\nIf the new tag already exists on the bot, then it will be overwritten with the contents of the original tag."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or list of bots that should have the tag renamed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the tag that should be renamed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the new name that the tag should have."),Object(r.b)("h4",{id:"examples-5"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Rename the ",Object(r.b)("inlineCode",{parentName:"li"},"auxColor")," tag to ",Object(r.b)("inlineCode",{parentName:"li"},"color"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'renameTag(this, "auxColor", "color");\n')),Object(r.b)("h3",{id:"changestatebot-statename-groupname"},Object(r.b)("inlineCode",{parentName:"h3"},"changeState(bot, stateName, groupName?)")),Object(r.b)("p",null,"Changes the state that the given bot occupies in the given group.\nIf the state was changed, then the ",Object(r.b)(i.TagLink,{tag:"@[groupName][stateName]OnExit",mdxType:"TagLink"})," and ",Object(r.b)(i.TagLink,{tag:"@[groupName][stateName]OnEnter",mdxType:"TagLink"})," whispers are sent to the ",Object(r.b)("inlineCode",{parentName:"p"},"bot"),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot whose state should be changed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the value that should be set on the bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the name of the tag that should be changed on the bot. If not specified, then the ",Object(r.b)("inlineCode",{parentName:"p"},"#state")," tag will be used."),Object(r.b)("h4",{id:"examples-6"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Change the ",Object(r.b)("inlineCode",{parentName:"li"},"#state"),' of the bot to "Running".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Triggers @stateRunningOnEnter\nchangeState(bot, "Running");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Change the ",Object(r.b)("inlineCode",{parentName:"li"},"#playbackState"),' of the bot to "Playing".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Triggers @playbackStatePlayingOnEnter\nchangeState(bot, "Playing", "playbackState");\n')),Object(r.b)("h3",{id:"getbotsfilters"},Object(r.b)("inlineCode",{parentName:"h3"},"getBots(..filters)")),Object(r.b)("p",null,"Gets an array of bots that match all of the given filter(s). The returned array is sorted alphabetically by the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," tag."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#bot-filters"}),"bot filter"),". If no filters are specified, then all bots in the story are returned.\nIf multiple filters are specified, then only the bots that match all of the filters are returned."),Object(r.b)("h4",{id:"examples-7"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#test"));\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find all bots with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob" ',Object(r.b)("em",{parentName:"li"},"and"),' in the "people" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#name", "bob"), inDimension("people"));\n')),Object(r.b)("h3",{id:"getbotstag-value"},Object(r.b)("inlineCode",{parentName:"h3"},"getBots(tag, value?)")),Object(r.b)("p",null,"Gets an array of bots that match the given tag and value. The returned array is sorted alphabetically by the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," tag."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag. Bots that have this tag will be included as long as they also match the second parameter."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the value the tag should match. If not specified, then all bots with the tag will be included.\nIf specified, then only bots that have the same tag and value will be included. If you specify a function as the value, then it will be used to match tag values."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"})," with ",Object(r.b)(i.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})),Object(r.b)("h4",{id:"examples-8"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all the bots with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#name", "bob");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find all bots with a height larger than 2.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#height", height => height > 2);\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#test");\n')),Object(r.b)("h3",{id:"getbotfilters"},Object(r.b)("inlineCode",{parentName:"h3"},"getBot(...filters)")),Object(r.b)("p",null,"Get the first bot that matches all of the given filter(s). If multiple bots match the given filter(s), then bots are sorted alphabetically by the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," tag and the first one is returned. If no bots match the given filter(s), then ",Object(r.b)("inlineCode",{parentName:"p"},"undefined")," is returned."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"#bot-filters"}),"bot filter"),". If no filters are specified, then the first bot in the story is returned.\nIf multiple filters are specified, then the first bot that matches all of the filters is returned."),Object(r.b)("h4",{id:"examples-9"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Find a bot with the "test" tag.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot(byTag("#test"));\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find a bot with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob" ',Object(r.b)("em",{parentName:"li"},"and"),' in the "people" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot(byTag("#name", "bob"), inDimension("people"));\n')),Object(r.b)("h3",{id:"getbottag-filter"},Object(r.b)("inlineCode",{parentName:"h3"},"getBot(tag, filter?)")),Object(r.b)("p",null,"Gets the first bot that matches the given tag and value. If multiple bots match the given tag and value, then bots are sorted alphabetically by the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," tag and the first one is returned. If no bots match the given tag and value, then ",Object(r.b)("inlineCode",{parentName:"p"},"undefined")," is returned."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag to search for."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the value the tag should match. If not specified, then the first bot with the tag will be returned.\nIf specified, then the first bot that has the same tag and value will be returned. If you specify a function as the value, then it will be used to match tag values."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"getBot(...filters)",mdxType:"ActionLink"})," with ",Object(r.b)(i.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})),Object(r.b)("h4",{id:"examples-10"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find the first bot with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#name", "bob");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find the first bot with a height larger than 2.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#height", height => height > 2);\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Find the first bot with the "test" tag.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let foundBot = getBot("#test");\n')),Object(r.b)("h3",{id:"getbottagvaluestag-filter"},Object(r.b)("inlineCode",{parentName:"h3"},"getBotTagValues(tag, filter?)")),Object(r.b)("p",null,"Gets a list of all the values in the story for the given tag. Optionally accepts a filter for the tag values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag to search for."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the filter that the tag values should match. If not specified, then all the tag values are included.\nIf it is a function, then it will be used to match values. Otherwise, only tags that match the value will be included."),Object(r.b)("h4",{id:"examples-11"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find the number of bots named bot and print it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfBobs = getBotTagValues("#name", "bob").length;\nplayer.toast(numberOfBobs);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find all the bot ages above ",Object(r.b)("inlineCode",{parentName:"li"},"10"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const agesOver10 = getBotTagValues("#age", age => age > 10);\n')),Object(r.b)("h3",{id:"getidbot"},Object(r.b)("inlineCode",{parentName:"h3"},"getID(bot)")),Object(r.b)("p",null,"Gets the ID of the given bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot whose ID should be retrieved.\nIf given a bot ID, then it will be returned. If given ",Object(r.b)("inlineCode",{parentName:"p"},"null")," or something that is not a bot, then ",Object(r.b)("inlineCode",{parentName:"p"},"null")," will be returned."),Object(r.b)("h4",{id:"examples-12"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the ID of the current bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let id = getID(bot);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the ID of a bot with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let id = getID(getBot("#name", "bob"));\n')),Object(r.b)("h3",{id:"getjsondata"},Object(r.b)("inlineCode",{parentName:"h3"},"getJSON(data)")),Object(r.b)("p",null,"Gets the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/JSON"}),"JSON")," representation of the given data."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the data that should be ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Serialization"}),"cloned")," into the JSON format.\nIf given a bot, then the returned JSON will be able to be able to be converted back into a mod via ",Object(r.b)(i.ActionLink,{action:"getMod(bot)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-13"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Store a copy of a bot in a tag.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bob = getBot("#name", "bob");\ntags.savedBot = getJSON(bob);\n')),Object(r.b)("h3",{id:"getmodbot"},Object(r.b)("inlineCode",{parentName:"h3"},"getMod(bot)")),Object(r.b)("p",null,"Gets a mod for the given bot and list of tags. The returned mod will only contain tags that are contained in the given list."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or JSON string that should be cloned into a mod."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"other parameters")," are the tags that should be included in the returned mod.\nIf no other parameters are specified, then all tags are included.\nIf a parameter is a RegEx (",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions"}),"Regular Expression"),"), then it will include all the tags that match the expression."),Object(r.b)("h4",{id:"examples-14"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get a mod with the current bot's tags.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = getMod(bot);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get a mod with only the ",Object(r.b)(i.TagLink,{tag:"color",mdxType:"TagLink"})," and ",Object(r.b)(i.TagLink,{tag:"label",mdxType:"TagLink"})," tags.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let mod = getMod(bot, "color", "label");\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Get a mod with every tag that starts with "on".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let mod = getMod(bot, /^on/g);\n")),Object(r.b)("h3",{id:"webhookoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"webhook(options)")),Object(r.b)("p",null,"Sends a webhook using the given options."),Object(r.b)("p",null,"Returns a Promise that resolves with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"{\n    data: any,\n    status: number,\n    statusText: string,\n    headers: any\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is an object with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The HTTP Method that the request should use.\n     */\n    method: string;\n\n    /**\n     * The URL that the request should be made to.\n     */\n    url: string;\n\n    /**\n     * The headers to include in the request.\n     */\n    headers?: {\n        [key: string]: string;\n    };\n\n    /**\n     * The data to send with the request.\n     */\n    data?: any;\n\n    /**\n     * The shout that should be made when the request finishes.\n     * This is for legacy code. New code should await the returned promise.\n     */\n    responseShout?: string;\n};\n")),Object(r.b)("h4",{id:"examples-15"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a HTTP GET request to ",Object(r.b)("inlineCode",{parentName:"li"},"https://auxplayer.com")," and toast the result.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const response = await webhook({\n    method: 'GET',\n    url: 'https://example.com',\n});\n\nplayer.toast(response);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Send a HTTP PUT request to ",Object(r.b)("inlineCode",{parentName:"li"},"https://example.com")," with some data.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"webhook({\n    method: 'PUT',\n    url: 'https://example.com',\n    data: {\n        some: 'data'\n    }\n});\n")),Object(r.b)("h3",{id:"webhookposturl-data-options"},Object(r.b)("inlineCode",{parentName:"h3"},"webhook.post(url, data?, options?)")),Object(r.b)("p",null,"Sends a HTTP POST request using the given options."),Object(r.b)("p",null,"Returns a Promise that resolves with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"{\n    data: any,\n    status: number,\n    statusText: string,\n    headers: any\n}\n")),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the URL that the request should be sent to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the data that should be included in the request."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is an optional object with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options: {\n    /**\n     * The headers to include in the request.\n     */\n    headers?: {\n        [key: string]: string;\n    };\n\n    /**\n     * The shout that should be made when the request finishes.\n     */\n    responseShout?: string;\n};\n")),Object(r.b)("h4",{id:"examples-16"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a HTTP POST request to ",Object(r.b)("inlineCode",{parentName:"li"},"https://example.com")," and toast the result.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const response = await webhook.post('https://example.com', {\n    some: 'data'\n});\n\nplayer.toast(response);\n")),Object(r.b)("h3",{id:"uuid"},Object(r.b)("inlineCode",{parentName:"h3"},"uuid()")),Object(r.b)("p",null,"Creates a new UUID. Useful for generating a random identifier that is guaranteed to be unique."),Object(r.b)("h4",{id:"examples-17"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Generate a new UUID and toast it:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const id = uuid();\n\nplayer.toast(id);\n")),Object(r.b)("h3",{id:"sleeptime"},Object(r.b)("inlineCode",{parentName:"h3"},"sleep(time)")),Object(r.b)("p",null,"Waits the amount of time provided, in ms."),Object(r.b)("p",null,"Returns a promise that resolves when the time has been waited."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is time in ms to wait. 1 second is 1000ms."),Object(r.b)("h4",{id:"examples-18"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Wait 2 seconds before proceeding.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.shout("Stop!");\nawait sleep(2000);\nplayer.shout("Hammer Time!");\n')),Object(r.b)("h2",{id:"bot-filters"},"Bot Filters"),Object(r.b)("h3",{id:"bytagtag-value"},Object(r.b)("inlineCode",{parentName:"h3"},"byTag(tag, value?)")),Object(r.b)("p",null,"Creates a bot filter that includes bots that have the given tag that matches the given value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the tag. Bots that have this tag will be included as long as they also match the second parameter."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the value that the tag should match. If not specified, then all bots with the tag will be included.\nIf specified, then only bots that have the same tag value will be included. If you specify a function as the value, then it will be used to match tag values."),Object(r.b)("h4",{id:"examples-19"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all the bots with ",Object(r.b)("inlineCode",{parentName:"li"},"#name"),' set to "bob".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#name", "bob"));\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Find all bots with a height larger than 2.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#height", height => height > 2));\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Find all bots with the "test" tag.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(byTag("#test"));\n')),Object(r.b)("h3",{id:"indimensiondimension"},Object(r.b)("inlineCode",{parentName:"h3"},"inDimension(dimension)")),Object(r.b)("p",null,"Creates a bot filter that includes bots that are in the given dimension. That is, they have the given tag set to ",Object(r.b)("inlineCode",{parentName:"p"},"true"),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the dimension."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"byTag(tag, value?)",mdxType:"ActionLink"})," with the `value` parameter set to `true`."),Object(r.b)("h4",{id:"examples-20"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Find all the bots in the "test" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(inDimension("test"));\n')),Object(r.b)("h3",{id:"atpositiondimension-x-y"},Object(r.b)("inlineCode",{parentName:"h3"},"atPosition(dimension, x, y)")),Object(r.b)("p",null,"Creates a bot filter that includes bots that are in the given dimension and at the given X and Y position."),Object(r.b)("p",null,"When this filter is used with ",Object(r.b)(i.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"}),", the returned bots are sorted in the same order that they are stacked.\nThis means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they're stackable)."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the dimension."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the X position. That is, the left-right position of the bots in the dimension."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the Y position. That is, the forward-backward position of the bots in the dimension."),Object(r.b)("h4",{id:"examples-21"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Find all the bots at (1, 2) in the "test" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(atPosition("test", 1, 2));\n')),Object(r.b)("h3",{id:"instackbot-dimension"},Object(r.b)("inlineCode",{parentName:"h3"},"inStack(bot, dimension)")),Object(r.b)("p",null,"Creates a bot filter that includes bots in the same stack as the given bot. The given bot will always be included by this filter as long the given bot is in the given dimension."),Object(r.b)("p",null,"When this filter is used with ",Object(r.b)(i.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"}),", the returned bots are sorted in the same order that they are stacked.\nThis means that the first bot in the array is at the bottom of the stack and the last bot is at the top of the stack (assuming they're stackable)."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that other bots should be in the same stack with."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the dimension."),Object(r.b)("h4",{id:"examples-22"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots in the same stack as ",Object(r.b)("inlineCode",{parentName:"li"},"this"),' in the "test" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(inStack(this, "test"));\n')),Object(r.b)("h3",{id:"bycreatorbot"},Object(r.b)("inlineCode",{parentName:"h3"},"byCreator(bot)")),Object(r.b)("p",null,"Creates a bot filter that includes bots created by the given bot. That is, they have ",Object(r.b)(i.TagLink,{tag:"creator",mdxType:"TagLink"})," set to the ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," of the given bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that created the other bots."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.NormalCode,{mdxType:"NormalCode"},'byTag("creator", getID(bot))'),"."),Object(r.b)("h4",{id:"examples-23"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all the bots created by this bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let bots = getBots(byCreator(this));\n")),Object(r.b)("h3",{id:"byspacespace"},Object(r.b)("inlineCode",{parentName:"h3"},"bySpace(space)")),Object(r.b)("p",null,"Creates a bot filter that includes bots in the given space. That is, they have ",Object(r.b)(i.TagLink,{tag:"space",mdxType:"TagLink"})," set to the given value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the space that the bots are in."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.NormalCode,{mdxType:"NormalCode"},'byTag("space", space)'),"."),Object(r.b)("h4",{id:"examples-24"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots in the ",Object(r.b)("inlineCode",{parentName:"li"},"tempLocal")," space.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots(bySpace("tempLocal"));\n')),Object(r.b)("h3",{id:"bymodmod"},Object(r.b)("inlineCode",{parentName:"h3"},"byMod(mod)")),Object(r.b)("p",null,"Creates a bot filter that includes bots that match the given mod."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that the other bots should match."),Object(r.b)("h4",{id:"examples-25"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all the bots with ",Object(r.b)("inlineCode",{parentName:"li"},"#height")," set to ",Object(r.b)("inlineCode",{parentName:"li"},"1")," and ",Object(r.b)("inlineCode",{parentName:"li"},"#color")," set to ",Object(r.b)("inlineCode",{parentName:"li"},"red"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(byMod({\n    height: 1,\n    color: "red"\n}));\n')),Object(r.b)("h3",{id:"neighboringbot-dimension-direction"},Object(r.b)("inlineCode",{parentName:"h3"},"neighboring(bot, dimension, direction)")),Object(r.b)("p",null,"Creates a bot filter that includes bots which are neighboring the given bot.\nOptionally takes a direction that the neighboring bots must be in."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that the other bots need to be neighboring."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the other bots need to be in."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the neighboring direction to check. If not specified, then all of the supported directions will be checked.\nCurrently, the supported directions are ",Object(r.b)("inlineCode",{parentName:"p"},"front"),", ",Object(r.b)("inlineCode",{parentName:"p"},"right"),", ",Object(r.b)("inlineCode",{parentName:"p"},"back"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"left"),". If an unsupported direction is specified, then no bots will be included."),Object(r.b)("h4",{id:"examples-26"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots in front of ",Object(r.b)("inlineCode",{parentName:"li"},"this")," bot in the ",Object(r.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(neighboring(this, "test", "front"));\n')),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots around ",Object(r.b)("inlineCode",{parentName:"li"},"this")," bot in the ",Object(r.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(neighboring(this, "test"));\n')),Object(r.b)("h3",{id:"eitherfilters"},Object(r.b)("inlineCode",{parentName:"h3"},"either(...filters)")),Object(r.b)("p",null,"Creates a bot filter that includes bots which match any (i.e. one or more) of the given filters."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a bot filter."),Object(r.b)("h4",{id:"examples-27"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots with the ",Object(r.b)("inlineCode",{parentName:"li"},"#name")," ",Object(r.b)("inlineCode",{parentName:"li"},"bob")," or a ",Object(r.b)("inlineCode",{parentName:"li"},"#height")," of 2.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(\n    either(\n        byTag("#name", "bob"),\n        byTag("height", 2)\n    )\n);\n')),Object(r.b)("h3",{id:"notfilter"},Object(r.b)("inlineCode",{parentName:"h3"},"not(filter)")),Object(r.b)("p",null,"Creates a function that includes bots which ",Object(r.b)("em",{parentName:"p"},"do not")," match the given filter."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot filter whose results should be negated."),Object(r.b)("h4",{id:"examples-28"},"Examples."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Find all bots that are not in the ",Object(r.b)("inlineCode",{parentName:"li"},"test")," dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bots = getBots(not(inDimension("test")));\n')),Object(r.b)("h2",{id:"event-actions"},"Event Actions"),Object(r.b)("h3",{id:"shoutname-arg"},Object(r.b)("inlineCode",{parentName:"h3"},"shout(name, arg?)")),Object(r.b)("p",null,"Sends a shout to all bots that are ",Object(r.b)(i.TagLink,{tag:"listening",mdxType:"TagLink"})," and have a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"docs/listen-tags"}),"listen tag")," for the specified name. Optionally includes a custom ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument.\nAlso triggers ",Object(r.b)(i.TagLink,{tag:"@onListen",mdxType:"TagLink"})," and ",Object(r.b)(i.TagLink,{tag:"@onAnyListen",mdxType:"TagLink"}),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the shout. e.g. Using ",Object(r.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger all ",Object(r.b)(i.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listeners."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(r.b)("h4",{id:"examples-29"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a ",Object(r.b)("inlineCode",{parentName:"li"},"@reset")," event to all bots:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'shout("reset");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Send a ",Object(r.b)("inlineCode",{parentName:"li"},"@hello")," event with your name:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'shout("hello", "Bob");\n')),Object(r.b)("h3",{id:"whisperbot-name-arg"},Object(r.b)("inlineCode",{parentName:"h3"},"whisper(bot, name, arg?)")),Object(r.b)("p",null,"Sends a whisper to the specified bot(s) that are ",Object(r.b)(i.TagLink,{tag:"listening",mdxType:"TagLink"})," and have a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"docs/listen-tags"}),"listen tag")," for the given name. Optionally includes a custom ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument.\nAlso triggers ",Object(r.b)(i.TagLink,{tag:"@onListen",mdxType:"TagLink"})," and ",Object(r.b)(i.TagLink,{tag:"@onAnyListen",mdxType:"TagLink"}),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot, array of bots, bot ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"}),", or array of bot ",Object(r.b)(i.TagLink,{tag:"id",mdxType:"TagLink"})," that the whisper should be sent to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the whisper. e.g. Using ",Object(r.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger the ",Object(r.b)(i.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listener for the specified bots."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(r.b)("h4",{id:"examples-30"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a ",Object(r.b)("inlineCode",{parentName:"li"},"@reset")," event to all bots named ",Object(r.b)("inlineCode",{parentName:"li"},"Bob"),":")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'let bots = getBots("#name", "Bob");\nwhisper(bots, "reset");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Send a ",Object(r.b)("inlineCode",{parentName:"li"},"@setColor")," event to ourself:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'whisper(this, "setColor", "red");\n')),Object(r.b)("h3",{id:"supershoutname-arg"},Object(r.b)("inlineCode",{parentName:"h3"},"superShout(name, arg?)")),Object(r.b)("p",null,"Sends a shout to all of the other stories that are loaded."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the shout. e.g. Using ",Object(r.b)("inlineCode",{parentName:"p"},"onClick")," for the name will trigger all the ",Object(r.b)(i.TagLink,{tag:"@onClick",mdxType:"TagLink"})," listeners."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the optional ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument to include with the shout."),Object(r.b)("h4",{id:"examples-31"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a ",Object(r.b)("inlineCode",{parentName:"li"},"hello")," super shout to all the loaded stories.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'superShout("hello");\n')),Object(r.b)("h3",{id:"remoteaction-target"},Object(r.b)("inlineCode",{parentName:"h3"},"remote(action, target?)")),Object(r.b)("p",null,"Sends the given action to another player."),Object(r.b)("p",null,"In CasualOS, all actions are messages which are placed in a queue and processed one at at time."),Object(r.b)("p",null,"For example, the ",Object(r.b)(i.ActionLink,{action:"player.toast(message, duration?)",mdxType:"ActionLink"})," action queues a message which, when processed, will show a toast message.\nHowever, before any action is performed, it is run through the ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener which can decide whether reject an action using ",Object(r.b)(i.ActionLink,{action:"action.reject(action)",mdxType:"ActionLink"}),".\nThis lets you write rules for what actions each player is allowed to take."),Object(r.b)("p",null,"There are a couple special cases. First, when you send/receive an action from someone else (i.e. they sent an action to you using the ",Object(r.b)(i.ActionLink,{action:"remote(action)",mdxType:"ActionLink"})," function), it won't run by default.\nInstead it is wrapped as a ",Object(r.b)("inlineCode",{parentName:"p"},"device")," action and sent to ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," for processing. This lets you decide whether to allow players to send messages to each other and what the effect of those messages are.\nIf you want to perform the action, you can use ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"})," on the inner device action to queue it for execution."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the action to send."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is a object specifing which player to send the action to. If not specified, then the action is sent to the server player.\nIf specified, then the action is sent to all players that match the given values. If given a string, then the action is sent to the player with the matching ID."),Object(r.b)("h4",{id:"examples-32"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a toast message to another player.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"// TODO: Get the bot ID of the other player.\nconst otherPlayerBotId = 'otherPlayerBotId';\n\n// Create a toast action\nconst toastAction = player.toast('My message!');\n\n// Send the action to the other player\n// The toastAction will not be performed locally because\n// it is being sent to another player.\nremote(toastAction, otherPlayerBotId);\n")),Object(r.b)("h3",{id:"remotewhisperplayerid-name-arg"},Object(r.b)("inlineCode",{parentName:"h3"},"remoteWhisper(playerId, name, arg?)")),Object(r.b)("p",null,"Sends a ",Object(r.b)(i.TagLink,{tag:"@onRemoteWhisper",mdxType:"TagLink"})," shout to the player with the given ID or players if given a list of IDs.\nThis is useful for sending arbitrary messages to specific players."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the player ID or list of player IDs that the shout should be sent to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the event that is being sent. This is useful for telling the difference between different messages."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(r.b)("h4",{id:"examples-33"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Send a "custom" message to another player.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const otherPlayerBotId = "otherPlayerBotId";\n\n// The other player will receive a @onRemoteWhisper with \n// that.name === "custom" and that.that === "Hello"\nremoteWhisper(otherPlayerBotId, "custom", "Hello");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Send a message to all other players.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const players = await server.players();\nconst playerId = getID(player.getBot());\nconst otherPlayers = players.filter(id => id !== playerId);\n\n// All other players will receive a @onRemoteWhisper with\n// that.name === "custom" and that.that === "Hello"\nremoteWhisper(otherPlayers, "custom", "Hello");\n')),Object(r.b)("h3",{id:"remoteshoutname-arg"},Object(r.b)("inlineCode",{parentName:"h3"},"remoteShout(name, arg?)")),Object(r.b)("p",null,"Sends a ",Object(r.b)(i.TagLink,{tag:"@onRemoteWhisper",mdxType:"TagLink"})," shout to all the players in the current story.\nThe listener will be triggered on all players connected to the story, including the local player."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the message that is being sent. This is useful for telling the difference between different messages."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the ",Object(r.b)("inlineCode",{parentName:"p"},"that")," argument to send with the shout. You do not need to specify this parameter if you do not want to."),Object(r.b)("h4",{id:"examples-34"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a message to all players.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// All players will receive a @onRemoteWhisper with\n// that.name === "custom" and that.that === "Hello"\nremoteShout("custom", "Hello");\n')),Object(r.b)("h3",{id:"actionperformaction"},Object(r.b)("inlineCode",{parentName:"h3"},"action.perform(action)")),Object(r.b)("p",null,"Queues the given action to be performed at a later time."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the action that should be performed."),Object(r.b)("h4",{id:"examples-35"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Perform a toast message by manually queuing it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"action.perform({\n    type: 'show_toast',\n    message: 'My toast message!',\n    duration: 2000 // 2 seconds in miliseconds\n});\n")),Object(r.b)("h3",{id:"actionrejectaction"},Object(r.b)("inlineCode",{parentName:"h3"},"action.reject(action)")),Object(r.b)("p",null,"Prevents a previous action from being performed."),Object(r.b)("p",null,"This is especially useful when used in a ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener since it lets you reject actions before they are performed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the action that should be prevented/rejected."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Prevent a toast message from being performed.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const toastAction = player.toast("my message");\naction.reject(toastAction);\n')),Object(r.b)("h2",{id:"player-actions"},"Player Actions"),Object(r.b)("h3",{id:"playercheckoutoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"player.checkout(options)")),Object(r.b)("p",null,"Shows a payment screen modal that lets the player purchase something.\nTriggers the ",Object(r.b)(i.TagLink,{tag:"@onCheckout",mdxType:"TagLink"})," shout on the server inside the given processing story."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the options to use to setup the checkout screen."),Object(r.b)(i.Alert,{type:"warning",mdxType:"Alert"},"Note that while this is functional, it is not recommended be used due to potential security issues."),Object(r.b)("h4",{id:"examples-36"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a checkout box for 10 cookies.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.checkout({\n    publishableKey: 'YOUR_PUBLISHABLE_API_KEY',\n    productId: '10_cookies',\n    title: '10 Cookies',\n    description: '$5.00',\n    processingStory: 'cookies_checkout'\n});\n")),Object(r.b)("h3",{id:"playerdownloadbotsbots-filename"},Object(r.b)("inlineCode",{parentName:"h3"},"player.downloadBots(bots, filename)")),Object(r.b)("p",null,"Downloads the given array of bots as a ",Object(r.b)("inlineCode",{parentName:"p"},".aux")," file with the given filename.\nUseful for quickly backing up a set of bots."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the array of bots that should be downloaded."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the file that the bots should be stored in.\n",Object(r.b)("inlineCode",{parentName:"p"},".aux")," will automatically be added to the end of the filename."),Object(r.b)("h4",{id:"examples-37"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Download all the bots in the "abc" dimension as "abcBots.aux".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.downloadBots(getBots(inDimension("abc")), "abcBots");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},'Download the current bot as "currentBot.aux".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.downloadBots([bot], "currentBot");\n')),Object(r.b)("h3",{id:"playerrunscript"},Object(r.b)("inlineCode",{parentName:"h3"},"player.run(script)")),Object(r.b)("p",null,"Runs the given script.\nThe script will be executed in a separate environment with no ",Object(r.b)("inlineCode",{parentName:"p"},"bot"),", ",Object(r.b)("inlineCode",{parentName:"p"},"tags"),", ",Object(r.b)("inlineCode",{parentName:"p"},"this"),", ",Object(r.b)("inlineCode",{parentName:"p"},"data"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"that")," variables.\nThis means that you need to use the ",Object(r.b)(i.ActionLink,{action:"getBot(...filters)",mdxType:"ActionLink"})," or ",Object(r.b)(i.ActionLink,{action:"getBots(...filters)",mdxType:"ActionLink"})," functions to read bot data."),Object(r.b)("p",null,"Returns a promise that resolves with the returned script value after it has been executed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the script that should be executed."),Object(r.b)("h4",{id:"examples-38"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Run a script that says "hello".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.run(\"player.toast('hello');\");\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Run a script from the ",Object(r.b)("inlineCode",{parentName:"li"},"#script")," tag on the current bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.run(tags.script);\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Run a script and toast the result.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const result = await player.run("return 594 + 391");\nplayer.toast(result);\n')),Object(r.b)("h3",{id:"playerreplacedragbotbotormod"},Object(r.b)("inlineCode",{parentName:"h3"},"player.replaceDragBot(botOrMod)")),Object(r.b)("p",null,"Replaces the bot that the user is dragging with the given bot or mod.\nOnly works if called from inside a ",Object(r.b)(i.TagLink,{tag:"@onDrag",mdxType:"TagLink"})," or ",Object(r.b)(i.TagLink,{tag:"@onAnyBotDrag",mdxType:"TagLink"})," listen tag."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or mod that should be dragged.\nIf given a bot, then that bot's ",Object(r.b)(i.TagLink,{tag:"@onDrag",mdxType:"TagLink"})," will be skippped but ",Object(r.b)(i.TagLink,{tag:"@onDrop",mdxType:"TagLink"})," will be called."),Object(r.b)("h4",{id:"examples-39"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Drag a clone of this bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let clone = create(this);\nplayer.replaceDragBot(clone);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Drag a mod that makes other bots red.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.replaceDragBot({\n    "color": "red"\n});\n')),Object(r.b)("h3",{id:"playershowchatplaceholder"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showChat(placeholder?)")),Object(r.b)("p",null,'Shows the "chat bar" at the top of the screen in auxPlayer, optionally using the given text as the placeholder.\nTyping in the chat bar will send ',Object(r.b)(i.TagLink,{tag:"@onChatTyping",mdxType:"TagLink"})," shouts and pressing Enter will send a ",Object(r.b)(i.TagLink,{tag:"@onChat",mdxType:"TagLink"})," shout and clear the chat bar."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the text that the chat bar should show as the placeholder."),Object(r.b)("h4",{id:"examples-40"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show the chat bar.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showChat();\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show the chat bar with some placeholder text.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showChat("hello");\n')),Object(r.b)("h3",{id:"playershowchatoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showChat(options)")),Object(r.b)("p",null,'Shows the "chat bar" at the top of the screen in auxPlayer, using the given options.\nTyping in the chat bar will send ',Object(r.b)(i.TagLink,{tag:"@onChatTyping",mdxType:"TagLink"})," shouts and pressing Enter will send a ",Object(r.b)(i.TagLink,{tag:"@onChat",mdxType:"TagLink"})," shout and clear the chat bar."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is an object with the options that the chat bar should use.\nIt should be an object with the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"placeholder")," - The text that should be shown as a placeholder. (optional)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"prefill")," - The text that should be filled into the chat bar. If the chat bar already has text in it, then setting this property does nothing.")),Object(r.b)("h4",{id:"examples-41"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show the chat bar with a placeholder.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showChat({\n    placeholder: "hello"\n});\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show the chat bar with some prefilled text.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showChat({\n    prefill: "this is prefilled"\n});\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Show the chat bar with some prefilled text and a placeholder.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showChat({\n    prefill: "this is prefilled",\n    placeholder: "hello"\n});\n')),Object(r.b)("h3",{id:"playerhidechat"},Object(r.b)("inlineCode",{parentName:"h3"},"player.hideChat()")),Object(r.b)("p",null,'Hides the "chat bar" at the top of the screen in auxPlayer.'),Object(r.b)("h4",{id:"examples-42"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Hide the chat bar.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.hideChat();\n")),Object(r.b)("h3",{id:"playershowhtmlhtml"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showHtml(html)")),Object(r.b)("p",null,"Shows some HTML to the player in a popup modal. This can be useful for loading a separate webpage or providing some formatted text."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the HTML that should be shown to the user."),Object(r.b)("h4",{id:"examples-43"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a header with some text.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showHtml(`\n  <h1>This is some text!</h1>\n`);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show a YouTube video.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showHtml(`\n  <iframe\n      width="560" \n      height="315"\n      src="https://www.youtube.com/embed/BHACKCNDMW8"\n      frameborder="0"\n      allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture"\n      allowfullscreen>\n  </iframe>\n`);\n')),Object(r.b)("h3",{id:"playerhidehtml"},Object(r.b)("inlineCode",{parentName:"h3"},"player.hideHtml()")),Object(r.b)("p",null,"Closes the HTML popup modal."),Object(r.b)("h4",{id:"examples-44"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Hide the HTML popup.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.hideHtml();\n")),Object(r.b)("h3",{id:"playershareoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"player.share(options)")),Object(r.b)("p",null,"Shares the given URL or text via the device's social share capabilities.\nReturns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://web.dev/promises/"}),"Promise")," that resolves when sharing has succeeded or failed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is an object with at least one the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"url")," - The URL that should be shared. (optional)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"text")," - The text that should be shared. (optional)"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"title")," - The title of the document that is being shared. (optional)")),Object(r.b)("h4",{id:"examples-45"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Share a URL.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.share({\n    url: 'https://example.com'\n});\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Share some text.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.share({\n    text: 'abcdefghijklmnopqrstuvwxyz'\n});\n")),Object(r.b)("h3",{id:"playertoastmessage-duration"},Object(r.b)("inlineCode",{parentName:"h3"},"player.toast(message, duration?)")),Object(r.b)("p",null,'Shows a temporary "toast" notification to the player at the bottom of the screen with the given message.\nOptionally accepts a duration parameter which is the number of seconds that the message should be on the screen.'),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the text that the toast message should show."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the number of seconds that the message should be on the screen. (Default is 2)"),Object(r.b)("h4",{id:"examples-46"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Show a "Hello!" toast message.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.toast("Hello!");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show the player a code for 5 seconds.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.toast("this is the code", 5);\n')),Object(r.b)("h3",{id:"playertweentobot-zoomvalue-rotx-roty-duration"},Object(r.b)("inlineCode",{parentName:"h3"},"player.tweenTo(bot, zoomValue?, rotX?, rotY?, duration?)")),Object(r.b)("p",null,"Smoothly moves the player's view to center on the given bot. Optionally accepts target values for the zoom, rotation X, and rotation Y.\nAdditionally, a duration can be specified for the length of the tween. If the target bot is in the page portal, then the page portal view will be moved.\nIf the bot is in the inventory portal, then the inventory portal view will be moved. If the target bot is not in either portal, then nothing happens."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID that the player's view should be moved to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the zoom value that the camera should be transitioned to. Possible values are between ",Object(r.b)("inlineCode",{parentName:"p"},"0")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Infinity"),". ",Object(r.b)("inlineCode",{parentName:"p"},"1")," is the default.\nIf no value is specified, then the zoom will remain at its current value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the X rotation value that the camera should be transitioned to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the Y rotation value that the camera should be transitioned to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"fifth parameter")," is optional and is the amount of time in seconds that the transition should take to finish."),Object(r.b)("h4",{id:"examples-47"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Transition the player's view to show a bot named bob.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.tweenTo(getBot("#name", "bob"))\n')),Object(r.b)("h3",{id:"playermovetobot-zoomvalue-rotx-roty"},Object(r.b)("inlineCode",{parentName:"h3"},"player.moveTo(bot, zoomValue?, rotX?, rotY?)")),Object(r.b)("p",null,"Instantly moves the player's view to center on the given bot. Optionally accepts target values for the zoom, rotation X, and rotation Y.\nIf the target bot is in the page portal, then the page portal view will be moved. If the bot is in the inventory portal, then the inventory portal view will be moved.\nIf the target bot is not in either portal, then nothing happens."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID that the player's view should be moved to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the zoom value that the camera should be transitioned to. Possible values are between ",Object(r.b)("inlineCode",{parentName:"p"},"0")," and ",Object(r.b)("inlineCode",{parentName:"p"},"Infinity"),". ",Object(r.b)("inlineCode",{parentName:"p"},"1")," is the default.\nIf no value is specified, then the zoom will remain at its current value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the X rotation value that the camera should be transitioned to.\nIf no value is specified, then the X rotation will remain at its current value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"fourth parameter")," is optional and is the Y rotation value that the camera should be transitioned to.\nIf no value is specified, then the Y rotation will remain at its current value."),Object(r.b)("h4",{id:"examples-48"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Move the player's view to show a bot named bob.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.moveTo(getBot("#name", "bob"))\n')),Object(r.b)("h3",{id:"playeropenqrcodescannercamera"},Object(r.b)("inlineCode",{parentName:"h3"},"player.openQRCodeScanner(camera?)")),Object(r.b)("p",null,"Opens the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," scanner. While open, each scanned QR Code will send a ",Object(r.b)(i.TagLink,{tag:"@onQRCodeScanned",mdxType:"TagLink"})," shout.\nOptionally accepts which camera to use for scanning. (front/back)"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is a string specifing which camera to use. Defaults to 'rear'.\nIf the given camera type is not available, then the default camera will be used.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"rear",mdxType:"PossibleValueCode"},"The rear-facing camera. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"front",mdxType:"PossibleValueCode"},"The front-facing camera.")),Object(r.b)("h4",{id:"examples-49"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Open the QR Code scanner.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.openQRCodeScanner();\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Open the QR Code scanner for the front-facing camera.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.openQRCodeScanner("front");\n')),Object(r.b)("h3",{id:"playercloseqrcodescannercamera"},Object(r.b)("inlineCode",{parentName:"h3"},"player.closeQRCodeScanner(camera?)")),Object(r.b)("p",null,"Closes the QR Code scanner."),Object(r.b)("h4",{id:"examples-50"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Close the QR Code scanner.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.closeQRCodeScanner();\n")),Object(r.b)("h3",{id:"playershowqrcodecode"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showQRCode(code)")),Object(r.b)("p",null,"Shows a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," for the given data."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the text or data that the generated QR Code should represent."),Object(r.b)("h4",{id:"examples-51"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Show a QR Code that contains the data "hello".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showQRCode("hello");\n')),Object(r.b)("h3",{id:"playerhideqrcode"},Object(r.b)("inlineCode",{parentName:"h3"},"player.hideQRCode()")),Object(r.b)("p",null,"Closes the QR Code popup modal."),Object(r.b)("h4",{id:"examples-52"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Hides the QR Code popup modal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.hideQRCode();\n")),Object(r.b)("h3",{id:"playershowjoincodestory-dimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showJoinCode(story?, dimension?)")),Object(r.b)("p",null,"Shows a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/QR_code"}),"QR Code")," with a link to join the given story and dimension.\nIf the story and dimension are omitted, then the current story and dimension will be used."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the story that the code should be shown for."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the dimension that the code should be shown for."),Object(r.b)("h4",{id:"examples-53"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a join QR Code.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showJoinCode();\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show a join QR Code for a story and dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showJoinCode("story", "dimension");\n')),Object(r.b)("h3",{id:"playeropenbarcodescannercamera"},Object(r.b)("inlineCode",{parentName:"h3"},"player.openBarcodeScanner(camera?)")),Object(r.b)("p",null,"Opens the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Barcode"}),"Barcode")," scanner. While open, each scanned Barcode will send a ",Object(r.b)(i.TagLink,{tag:"@onBarcodeScanned",mdxType:"TagLink"})," shout.\nOptionally accepts which camera to use for scanning. (front/back)"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is a string specifing which camera to use. Defaults to 'rear'.\nIf the given camera type is not available, then the default camera will be used.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"rear",mdxType:"PossibleValueCode"},"The rear-facing camera. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"front",mdxType:"PossibleValueCode"},"The front-facing camera.")),Object(r.b)("h4",{id:"examples-54"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Open the Barcode scanner.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.openBarcodeScanner();\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Open the Barcode scanner for the front-facing camera.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.openBarcodeScanner("front");\n')),Object(r.b)("h3",{id:"playerclosebarcodescannercamera"},Object(r.b)("inlineCode",{parentName:"h3"},"player.closeBarcodeScanner(camera?)")),Object(r.b)("p",null,"Closes the Barcode scanner."),Object(r.b)("h4",{id:"examples-55"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Close the Barcode scanner.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.closeBarcodeScanner();\n")),Object(r.b)("h3",{id:"playershowbarcodecode-format"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showBarcode(code, format?)")),Object(r.b)("p",null,"Shows a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Barcode"}),"Barcode")," for the given data. Optionally accepts the format that the barcode should be displayed in."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the text or data that the generated Barcode should represent."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the format that the barcode should be displayed in.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"code128",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Code_128"},"Code 128")," barcode format. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"code39",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Code_39"},"Code 39")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"ean13",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/International_Article_Number"},"EAN-13")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"ean8",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/International_Article_Number"},"EAN-8")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"upc",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Universal_Product_Code"},"UPC")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"itf14",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/ITF-14"},"IFT-14")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"msi",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/MSI_Barcode"},"MSI")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"pharmacode",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Pharmacode"},"Pharmacode")," barcode format."),Object(r.b)(i.PossibleValueCode,{value:"codabar",mdxType:"PossibleValueCode"},"The ",Object(r.b)("a",{href:"https://en.wikipedia.org/wiki/Codabar"},"Codabar")," barcode format.")),Object(r.b)("h4",{id:"examples-56"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Show a Barcode that contains the data "hello".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showBarcode("hello");\n')),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Show a UPC Barcode that contains the data "123456".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showBarcode(\"123456\", 'upc');\n")),Object(r.b)("h3",{id:"playerhidebarcode"},Object(r.b)("inlineCode",{parentName:"h3"},"player.hideBarcode()")),Object(r.b)("p",null,"Closes the Barcode popup modal."),Object(r.b)("h4",{id:"examples-57"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Hides the Barcode popup modal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.hideBarcode();\n")),Object(r.b)("h3",{id:"playershowinputvalue-options"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showInput(value?, options?)")),Object(r.b)("p",null,"Shows an input modal with the given value and options.\nWhen shown, the player will be able to change the value."),Object(r.b)("p",null,"Returns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://web.dev/promises/"}),"Promise")," that resolves with the final value when the user is finished editing.\nThis function is similar to ",Object(r.b)(i.ActionLink,{action:"player.showInputForTag(bot, tag, options?)",mdxType:"ActionLink"})," except it doesn't require a bot and a tag."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional  and is the value that should be shown in the input modal,"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the possible cusomization options for the input modal."),Object(r.b)("h4",{id:"examples-58"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a basic text input modal and displays a toast message with the input value.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const value = await player.showInput();\nplayer.toast(value);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show a text input modal with a placeholder.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const name = await player.showInput(null, {\n    placeholder: 'Enter a name'\n});\nplayer.toast(name);\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Show a input modal with a custom title.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const name = await player.showInput('My Name', {\n    title: 'Edit name'\n});\nplayer.toast(name);\n")),Object(r.b)("ol",{start:4},Object(r.b)("li",{parentName:"ol"},"Show a color input modal with a custom title.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const color = await player.showInput('green', {\n    type: 'color',\n    title: 'Enter a custom color'\n});\nplayer.toast(name);\n")),Object(r.b)("h3",{id:"playershowinputfortagbot-tag-options"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showInputForTag(bot, tag, options?)")),Object(r.b)("p",null,"Shows an input modal for the given bot and tag with the given options.\nWhen shown, the player will be able to change the value stored in the given tag.\nTriggers the ",Object(r.b)(i.TagLink,{tag:"@onSaveInput",mdxType:"TagLink"})," whisper when the modal is closed with saving and the ",Object(r.b)(i.TagLink,{tag:"@onCloseInput",mdxType:"TagLink"})," whisper when the modal is closed without saving."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID that the input should be shown for,"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be edited on the bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the possible cusomization options for the input modal."),Object(r.b)("h4",{id:"examples-59"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a basic text input modal for the ",Object(r.b)("inlineCode",{parentName:"li"},"#name")," tag on this bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.showInputForTag(this, "name");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Show a text input modal with a placeholder for the ",Object(r.b)("inlineCode",{parentName:"li"},"#name")," tag.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showInputForTag(this, \"name\", {\n    placeholder: 'Enter a name'\n});\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Show a input modal with a custom title.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showInputForTag(this, \"name\", {\n    title: 'Edit name'\n});\n")),Object(r.b)("ol",{start:4},Object(r.b)("li",{parentName:"ol"},"Show a color input modal with a custom title.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showInputForTag(this, \"color\", {\n    type: 'color',\n    title: 'Enter a custom color'\n});\n")),Object(r.b)("h3",{id:"playersetclipboardtext"},Object(r.b)("inlineCode",{parentName:"h3"},"player.setClipboard(text)")),Object(r.b)("p",null,"Copies the given text to the player's clipboard. On Chrome and Firefox, this will act like a ",Object(r.b)("inlineCode",{parentName:"p"},"Ctrl+C"),"/",Object(r.b)("inlineCode",{parentName:"p"},"Cmd+C"),".\nOn Safari and all iOS browsers this will open a popup which prompts the player to copy the text."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the text that should be copied to the player's clipboard."),Object(r.b)("h4",{id:"examples-60"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Copy "hello" to the player\'s clipboard.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.setClipboard("hello");\n')),Object(r.b)("h3",{id:"playershowuploadauxfile"},Object(r.b)("inlineCode",{parentName:"h3"},"player.showUploadAuxFile()")),Object(r.b)("p",null,'Shows the "Upload AUX File" dialog which lets the user select a ',Object(r.b)("inlineCode",{parentName:"p"},".aux")," file to upload to the story."),Object(r.b)("h4",{id:"examples-61"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Show the "Upload AUX File" dialog.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.showUploadAuxFile();\n")),Object(r.b)("h3",{id:"playerloadstorystory"},Object(r.b)("inlineCode",{parentName:"h3"},"player.loadStory(story)")),Object(r.b)("p",null,"Loads the given univese into the current browser tab. When the story is loaded, the ",Object(r.b)(i.TagLink,{tag:"@onStorySubscribed",mdxType:"TagLink"})," shout will be triggered."),Object(r.b)("p",null,"Note that separate stories cannot interact directly. They must instead interact via super shouts."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the story to load."),Object(r.b)("h4",{id:"examples-62"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Load the ",Object(r.b)("inlineCode",{parentName:"li"},"fun")," story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.loadStory("fun");\n')),Object(r.b)("h3",{id:"playerunloadstory"},Object(r.b)("inlineCode",{parentName:"h3"},"player.unloadStory()")),Object(r.b)("p",null,"Unloads the given story from the current browser tab. When the story is unloaded, the ",Object(r.b)(i.TagLink,{tag:"@onStoryUnsubscribed",mdxType:"TagLink"})," shout will be triggered."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the story to unload."),Object(r.b)("h4",{id:"examples-63"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Unload the ",Object(r.b)("inlineCode",{parentName:"li"},"fun")," story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.unloadStory('fun');\n")),Object(r.b)("h3",{id:"playerdownloadstory"},Object(r.b)("inlineCode",{parentName:"h3"},"player.downloadStory()")),Object(r.b)("p",null,"Downloads all of the shared bots into a ",Object(r.b)("inlineCode",{parentName:"p"},".aux")," file on the player's computer.\nThe file will have the same name as the story."),Object(r.b)("p",null,"Note that this function is almost exactly the same as ",Object(r.b)(i.ActionLink,{action:"player.downloadBots(bots, filename)",mdxType:"ActionLink"}),".\nThe only difference is that all bots in the shared space are included and the file is named for you automatically."),Object(r.b)("h4",{id:"examples-64"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Download the entire story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.downloadStory();\n")),Object(r.b)("h3",{id:"playerenablear"},Object(r.b)("inlineCode",{parentName:"h3"},"player.enableAR()")),Object(r.b)("p",null,"Enables augmented reality on the device."),Object(r.b)("h4",{id:"examples-65"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Enable AR.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.enableAR();\n")),Object(r.b)("h3",{id:"playerdisablear"},Object(r.b)("inlineCode",{parentName:"h3"},"player.disableAR()")),Object(r.b)("p",null,"Disables augmented reality on the device."),Object(r.b)("h4",{id:"examples-66"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Disable AR.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.disableAR();\n")),Object(r.b)("h3",{id:"playerenablevr"},Object(r.b)("inlineCode",{parentName:"h3"},"player.enableVR()")),Object(r.b)("p",null,"Enables virtual reality on the device."),Object(r.b)("h4",{id:"examples-67"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Enable VR.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.enableVR();\n")),Object(r.b)("h3",{id:"playerdisablevr"},Object(r.b)("inlineCode",{parentName:"h3"},"player.disableVR()")),Object(r.b)("p",null,"Disables virtual reality on the device."),Object(r.b)("h4",{id:"examples-68"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Disable VR.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.disableVR();\n")),Object(r.b)("h3",{id:"playergetcurrentstory"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getCurrentStory()")),Object(r.b)("p",null,"Gets the story that the player is in."),Object(r.b)("h4",{id:"examples-69"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a message of the current story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const story = player.getCurrentStory();\nplayer.toast(story);\n")),Object(r.b)("h3",{id:"playergetcurrentdimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getCurrentDimension()")),Object(r.b)("p",null,"Gets the dimension that is loaded into the ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"player.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "pagePortal".'),Object(r.b)("h4",{id:"examples-70"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getCurrentDimension();\nplayer.toast(dimension);\n")),Object(r.b)("h3",{id:"playergetmenudimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getMenuDimension()")),Object(r.b)("p",null,"Gets the dimension that is loaded into the ",Object(r.b)(i.TagLink,{tag:"menuPortal",mdxType:"TagLink"})," portal."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"player.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "menuPortal".'),Object(r.b)("h4",{id:"examples-71"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(r.b)(i.TagLink,{tag:"menuPortal",mdxType:"TagLink"})," portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getMenuDimension();\nplayer.toast(dimension);\n")),Object(r.b)("h3",{id:"playergetinventorydimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getInventoryDimension()")),Object(r.b)("p",null,"Gets the dimension that is loaded into the ",Object(r.b)(i.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"This function behaves exactly like ",Object(r.b)(i.ActionLink,{action:"player.getPortalDimension(portal)",mdxType:"ActionLink"}),' when given "inventoryPortal".'),Object(r.b)("h4",{id:"examples-72"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a message of the dimension that is currently in the ",Object(r.b)(i.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getInventoryDimension();\nplayer.toast(dimension);\n")),Object(r.b)("h3",{id:"playerhasbotininventorybot"},Object(r.b)("inlineCode",{parentName:"h3"},"player.hasBotInInventory(bot)")),Object(r.b)("p",null,"Determines if the given bot is in the dimension that is currently loaded into the ",Object(r.b)(i.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"})," portal."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that should be checked."),Object(r.b)("h4",{id:"examples-73"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a message if a bot named bob is in the inventory.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const bob = getBot("#name", "bob");\nif (player.hasBotInInventory(bob)) {\n    player.toast("bob is in the inventory!");\n}\n')),Object(r.b)("h3",{id:"playergetportaldimensionportal"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getPortalDimension(portal)")),Object(r.b)("p",null,"Gets the dimension that is loaded into the given portal."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the portal that the dimension should be retrieved for.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"}),"."),Object(r.b)(i.PossibleValueCode,{value:"sheet",mdxType:"PossibleValueCode"},"The ",Object(r.b)(i.TagLink,{tag:"sheetPortal",mdxType:"TagLink"}),"."),Object(r.b)(i.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The ",Object(r.b)(i.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"}),"."),Object(r.b)(i.PossibleValueCode,{value:"menu",mdxType:"PossibleValueCode"},"The ",Object(r.b)(i.TagLink,{tag:"menuPortal",mdxType:"TagLink"}),".")),Object(r.b)("h4",{id:"examples-74"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"}),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getPortalDimension('page');\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(r.b)(i.TagLink,{tag:"inventoryPortal",mdxType:"TagLink"}),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getPortalDimension('inventory');\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Get the dimension that is currently showing in the ",Object(r.b)("inlineCode",{parentName:"li"},"#auxCustomPortal")," tag.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const dimension = player.getPortalDimension('auxCustomPortal');\n")),Object(r.b)("h3",{id:"playergetdimensionaldepthdimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getDimensionalDepth(dimension)")),Object(r.b)("p",null,"Gets the distance that the player bot is from the given dimension."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the dimension that should be searched for."),Object(r.b)("p",null,"Possible return values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"-1",mdxType:"PossibleValueCode"},"The player bot cannot access the given dimension."),Object(r.b)(i.PossibleValueCode,{value:"0",mdxType:"PossibleValueCode"},"The player bot is in the given dimension. (dimension tag is true)"),Object(r.b)(i.PossibleValueCode,{value:"1",mdxType:"PossibleValueCode"},"The player bot is viewing the given dimension through a portal. (a portal tag is set to the dimension)")),Object(r.b)("h4",{id:"examples-75"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Get the distance to the "fun" dimension.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const distance = player.getDimensionalDepth("fun");\nif (distance === 0) {\n    player.toast("Player is in the fun dimension");\n} else if(distance === 1) {\n    player.toast("Player is viewing the fun dimension");\n} else {\n    player.toast("Player cannot access the fun dimension");\n}\n')),Object(r.b)("h3",{id:"playergetbot"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getBot()")),Object(r.b)("p",null,"Gets the player bot. This is the bot that represents the player's browser tab."),Object(r.b)("h4",{id:"examples-76"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the player bot and set a username on it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const playerBot = player.getBot();\nplayerBot.tags.username = "bob";\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},'Open the sheet to "testDimension".')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const playerBot = player.getBot();\nplayerBot.tags.sheetPortal = "testDimension";\n')),Object(r.b)("h3",{id:"playergetcamerapositionportal"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getCameraPosition(portal?)")),Object(r.b)("p",null,"Gets the 3D position that the player's camera is at in the given portal."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is the portal that the camera position should be retrieved for.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The camera position in the page portal. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The camera position in the inventory portal.")),Object(r.b)("h4",{id:"examples-77"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the position of the player in the page portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = player.getCameraPosition("page");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the position of the player in the inventory portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = player.getCameraPosition("inventory");\n')),Object(r.b)("h3",{id:"playergetcamerarotationportal"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getCameraRotation(portal?)")),Object(r.b)("p",null,"Gets the 3D rotation that the player's camera is at in the given portal."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is the portal that the camera rotation should be retrieved for.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"page",mdxType:"PossibleValueCode"},"The camera rotation in the page portal. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"inventory",mdxType:"PossibleValueCode"},"The camera rotation in the inventory portal.")),Object(r.b)("h4",{id:"examples-78"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the rotation of the player in the page portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = player.getCameraRotation("page");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the rotation of the player in the inventory portal.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = player.getCameraRotation("inventory");\n')),Object(r.b)("h3",{id:"playergetpointerpositionpointer"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getPointerPosition(pointer?)")),Object(r.b)("p",null,"Gets the position that the given pointer is at."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is the pointer that the position should be retrieved for.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"mouse",mdxType:"PossibleValueCode"},"The position of the mouse pointer. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The position of the left pointer."),Object(r.b)(i.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The position of the right pointer.")),Object(r.b)("h4",{id:"examples-79"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the position of the mouse pointer.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = player.getPointerPosition("mouse");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the position of the left pointer.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const position = player.getPointerPosition("left");\n')),Object(r.b)("h3",{id:"playergetpointerrotationpointer"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getPointerRotation(pointer?)")),Object(r.b)("p",null,"Gets the rotation that the given pointer is at."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is the pointer that the rotation should be retrieved for.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"mouse",mdxType:"PossibleValueCode"},"The rotation of the mouse pointer. (Default)"),Object(r.b)(i.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The rotation of the left pointer."),Object(r.b)(i.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The rotation of the right pointer.")),Object(r.b)("h4",{id:"examples-80"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the rotation of the mouse pointer.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = player.getPointerRotation("mouse");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the rotation of the left pointer.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const rotation = player.getPointerRotation("left");\n')),Object(r.b)("h3",{id:"playergetinputstatecontroller-button"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getInputState(controller, button)")),Object(r.b)("p",null,"Gets the state of the given button on the given controller."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the name of the controller that the button state should be retrieved from.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"mousePointer",mdxType:"PossibleValueCode"},"The mouse."),Object(r.b)(i.PossibleValueCode,{value:"leftPointer",mdxType:"PossibleValueCode"},"The left controller. Sometimes available in VR."),Object(r.b)(i.PossibleValueCode,{value:"rightPointer",mdxType:"PossibleValueCode"},"The right controller. Sometimes available in VR."),Object(r.b)(i.PossibleValueCode,{value:"keyboard",mdxType:"PossibleValueCode"},"The keyboard."),Object(r.b)(i.PossibleValueCode,{value:"touch",mdxType:"PossibleValueCode"},"The touchscreen.")),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the button that you want to get the state of.\nPossible values are:"),Object(r.b)(i.PossibleValuesTable,{mdxType:"PossibleValuesTable"},Object(r.b)(i.PossibleValueCode,{value:"left",mdxType:"PossibleValueCode"},"The left mouse button. Only available on the mouse pointer. On mobile devices this will also be the state of the first touch."),Object(r.b)(i.PossibleValueCode,{value:"right",mdxType:"PossibleValueCode"},"The right mouse button. Only available on the mouse pointer."),Object(r.b)(i.PossibleValueCode,{value:"middle",mdxType:"PossibleValueCode"},"The middle mouse button. Only available on the mouse pointer."),Object(r.b)(i.PossibleValueCode,{value:"primary",mdxType:"PossibleValueCode"},"The primary controller button. Only available on the left and right pointers."),Object(r.b)(i.PossibleValueCode,{value:"squeeze",mdxType:"PossibleValueCode"},"The squeeze controller button. Only available on the left and right pointers."),Object(r.b)(i.PossibleValue,{value:"Any Key",mdxType:"PossibleValue"},"The button for the given key. Only available on the keyboard."),Object(r.b)(i.PossibleValueCode,{value:"0",mdxType:"PossibleValueCode"},"The first touch. Only available on the touchscreen."),Object(r.b)(i.PossibleValueCode,{value:"1",mdxType:"PossibleValueCode"},"The second touch. Only available on the touchscreen."),Object(r.b)(i.PossibleValueCode,{value:"2",mdxType:"PossibleValueCode"},"The third touch. Only available on the touchscreen."),Object(r.b)(i.PossibleValueCode,{value:"3",mdxType:"PossibleValueCode"},"The fourth touch. Only available on the touchscreen."),Object(r.b)(i.PossibleValueCode,{value:"5",mdxType:"PossibleValueCode"},"The fifth touch. Only available on the touchscreen.")),Object(r.b)("h4",{id:"examples-81"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send a toast if the left mouse button is clicked.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const state = player.getInputState("mousePointer", "left");\nif (state) {\n    player.toast("Left mouse button is down!");\n}\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Send a toast if the shift key is down.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const state = player.getInputState("keyboard", "Shift");\nif (state) {\n    player.toast("Shift is down!");\n}\n')),Object(r.b)("h3",{id:"playergetinputlist"},Object(r.b)("inlineCode",{parentName:"h3"},"player.getInputList()")),Object(r.b)("p",null,"Gets the list of supported inputs. The returned strings can be used for the ",Object(r.b)("inlineCode",{parentName:"p"},"controller")," property in ",Object(r.b)(i.ActionLink,{action:"player.getInputState(controller, button)",mdxType:"ActionLink"})," calls."),Object(r.b)("h4",{id:"examples-82"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get a list of inputs and toast them.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const state = player.getInputList();\nplayer.toast(state);\n")),Object(r.b)("h3",{id:"playergotodimensiondimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.goToDimension(dimension)")),Object(r.b)("p",null,"Loads the given dimension into the ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal.\nTriggers the ",Object(r.b)(i.TagLink,{tag:"@onPlayerPortalChanged",mdxType:"TagLink"})," shout."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the dimension that should be loaded."),Object(r.b)("h4",{id:"examples-83"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Load the ",Object(r.b)("inlineCode",{parentName:"li"},"abc")," dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.goToDimension('abc');\n")),Object(r.b)("h3",{id:"playergotourlurl"},Object(r.b)("inlineCode",{parentName:"h3"},"player.goToURL(url)")),Object(r.b)("p",null,"Redirects the current tab to the given URL. Useful for sending the player to another webpage or ambient experience."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," that the player should be sent to. Usually this is a website like ",Object(r.b)("inlineCode",{parentName:"p"},"https://example.com"),"."),Object(r.b)("h4",{id:"examples-84"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Send the player to ",Object(r.b)("inlineCode",{parentName:"li"},"https://example.com"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.goToURL("https://example.com");\n')),Object(r.b)("h3",{id:"playeropenurlurl"},Object(r.b)("inlineCode",{parentName:"h3"},"player.openURL(url)")),Object(r.b)("p",null,"Opens a new tab with the given URL. Useful for opening another webpage without redirecting the current tab."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," that should be loaded. Usually this is a website like ",Object(r.b)("inlineCode",{parentName:"p"},"https://example.com"),"."),Object(r.b)("h4",{id:"examples-85"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Open ",Object(r.b)("inlineCode",{parentName:"li"},"https://example.com")," in a new tab.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.openURL("https://example.com");\n')),Object(r.b)("h3",{id:"playeropendevconsole"},Object(r.b)("inlineCode",{parentName:"h3"},"player.openDevConsole()")),Object(r.b)("p",null,"Opens the developer console which contains a list of errors that scripts have issued."),Object(r.b)("h4",{id:"examples-86"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Open the developer console.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.openDevConsole();\n")),Object(r.b)("h3",{id:"playerplaysoundurl"},Object(r.b)("inlineCode",{parentName:"h3"},"player.playSound(url)")),Object(r.b)("p",null,"Loads and plays the audio (MP3, WAV, etc.) from the given URL."),Object(r.b)("p",null,"Returns a promise that resolves with the ID of the sound when the sound starts playing.\nThe sound ID can then be used with ",Object(r.b)(i.ActionLink,{action:"player.cancelSound(soundID)",mdxType:"ActionLink"})," to stop the sound."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," of the audio/music/sound clip that should be played."),Object(r.b)("h4",{id:"examples-87"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Play a MP3 file from another website.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.playSound("https://www.testsounds.com/track06.mp3");\n')),Object(r.b)("h3",{id:"playerbuffersoundurl"},Object(r.b)("inlineCode",{parentName:"h3"},"player.bufferSound(url)")),Object(r.b)("p",null,"Loads the audio from the given URL without playing it.\nReturns a promise that resolves once the sound has been loaded."),Object(r.b)("p",null,"This is useful for pre-loading a sound so that there will be no delay when playing it with ",Object(r.b)(i.ActionLink,{action:"player.playSound(url)",mdxType:"ActionLink"}),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL")," of the audio/music/sound clip that should be loaded."),Object(r.b)("h4",{id:"examples-88"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Pre-load a MP3 fiel from another website.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.bufferSound("https://www.testsounds.com/track06.mp3");\n')),Object(r.b)("h3",{id:"playercancelsoundsoundid"},Object(r.b)("inlineCode",{parentName:"h3"},"player.cancelSound(soundID)")),Object(r.b)("p",null,"Cancels the sound with the given ID.\nReturns a promise that resolves once the sound has been canceled."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ID of the sound that was returned from ",Object(r.b)(i.ActionLink,{action:"player.playSound(url)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-89"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Cancel a sound that is playing.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const id = await player.playSound("https://www.testsounds.com/track06.mp3");\nplayer.cancelSound(id);\n')),Object(r.b)("h3",{id:"playerisindimensiondimension"},Object(r.b)("inlineCode",{parentName:"h3"},"player.isInDimension(dimension)")),Object(r.b)("p",null,"Gets whether the given dimension is loaded into the ",Object(r.b)(i.TagLink,{tag:"pagePortal",mdxType:"TagLink"})," portal."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the dimension to check for."),Object(r.b)("h4",{id:"examples-90"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a toast if the player is viewing the ",Object(r.b)("inlineCode",{parentName:"li"},"abc")," dimension.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'if (player.isInDimension("abc")) {\n    player.toast("In the dimension!");\n}\n')),Object(r.b)("h3",{id:"playerinsheet"},Object(r.b)("inlineCode",{parentName:"h3"},"player.inSheet()")),Object(r.b)("p",null,"Gets whether the player is in the sheet dimension."),Object(r.b)("h4",{id:"examples-91"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Show a toast if the player is viewing the sheet.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'if (player.inSheet()) {\n    player.toast("You are in the sheet!");\n}\n')),Object(r.b)("h3",{id:"playerimportauxurlorjson"},Object(r.b)("inlineCode",{parentName:"h3"},"player.importAUX(urlOrJSON)")),Object(r.b)("p",null,"Imports an AUX file from the given string."),Object(r.b)("p",null,"If the string contains JSON, then the JSON will be imported as if it was a .aux file.\nIf the string is a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/URL"}),"URL"),", then it will be downloaded and imported."),Object(r.b)("p",null,"This is useful to quickly download a AUX file and load it into the current story from a site such as ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://gist.github.com/"}),"https://gist.github.com/"),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the JSON or URL that the AUX file should be imported from."),Object(r.b)("h4",{id:"examples-92"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Import an AUX file from a file.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const path = '/drives/myFile.aux';\nplayer.importAUX(path);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Import an AUX file from JSON.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'player.importAUX(`{\n    "version": 1,\n    "state": {\n        "079847e4-6a58-423d-9a86-8d4ef8be5970": {\n            "id": "079847e4-6a58-423d-9a86-8d4ef8be5970",\n            "tags": {\n                "color": "red"\n            }\n        }\n    }\n}`);\n')),Object(r.b)("h3",{id:"playerversion"},Object(r.b)("inlineCode",{parentName:"h3"},"player.version()")),Object(r.b)("p",null,"Gets information about the version of auxPlayer."),Object(r.b)("p",null,"The returned value is an object with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const returned: {\n    hash: string;\n    version: string;\n    major: number;\n    minor: number;\n    patch: number;\n};\n")),Object(r.b)("h4",{id:"examples-93"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the current version and popup a message with it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const info = player.version();\nplayer.toast(info.version);\n")),Object(r.b)("h3",{id:"playerdevice"},Object(r.b)("inlineCode",{parentName:"h3"},"player.device()")),Object(r.b)("p",null,"Gets information about the device that the player is using."),Object(r.b)("p",null,"The returned value is an object with the following properties:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const returned: {\n    supportsAR: boolean;\n    supportsVR: boolean;\n};\n")),Object(r.b)("h4",{id:"examples-94"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the device info and popup a message with it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const info = player.device();\nplayer.toast(info);\n")),Object(r.b)("h3",{id:"playerrequestfullscreenmode"},Object(r.b)("inlineCode",{parentName:"h3"},"player.requestFullscreenMode()")),Object(r.b)("p",null,"Attempts to enter fullscreen mode. Depending on which web browser the player is using, this might ask for permission to go fullscreen."),Object(r.b)("p",null,"Note that iPhones currently don't support fullscreen mode."),Object(r.b)("h4",{id:"examples-95"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Enter fullscreen mode.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.requestFullscreenMode();\n")),Object(r.b)("h3",{id:"playerexitfullscreenmode"},Object(r.b)("inlineCode",{parentName:"h3"},"player.exitFullscreenMode()")),Object(r.b)("p",null,"Exists fullscreen mode."),Object(r.b)("h4",{id:"examples-96"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Exit fullscreen mode.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"player.exitFullscreenMode();\n")),Object(r.b)("h2",{id:"server-actions"},"Server Actions"),Object(r.b)("h3",{id:"serverbackuptogithubauth"},Object(r.b)("inlineCode",{parentName:"h3"},"server.backupToGithub(auth)")),Object(r.b)("p",null,"Saves all the stories to GitHub as a private Gist using the given authentication token."),Object(r.b)("p",null,"Just like ",Object(r.b)(i.ActionLink,{action:"server.shell(script)",mdxType:"ActionLink"}),", you need "),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the Github Personal Access Token that should be used to grant access to your Github account.\nSee ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line"}),"https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line")),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"By default, backing up to GitHub is disabled on a story. To enable it, you have to write a custom ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-97"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Backup all the stories to a Github Gist.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.backupToGithub('your auth token');\n")),Object(r.b)("h3",{id:"serverbackupasdownloadtarget"},Object(r.b)("inlineCode",{parentName:"h3"},"server.backupAsDownload(target)")),Object(r.b)("p",null,"Saves all the stories to a zip file and downloads it to the session matching the given target."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is an object that indicates which session the zip file should be downloaded to."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"By default, backing up as a download is disabled on a story. To enable it, you have to write a custom ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-98"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Backup and download to this tab.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.backupAsDownload({\n    session: getID(player.getBot())\n});\n")),Object(r.b)("h3",{id:"serverfinishcheckoutoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"server.finishCheckout(options)")),Object(r.b)("p",null,"Finishes the checkout process by charging payment to the player.\nBest used during the ",Object(r.b)(i.TagLink,{tag:"@onCheckout",mdxType:"TagLink"})," shout."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," are the options needed to finish the checkout process."),Object(r.b)("h4",{id:"examples-99"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Finish the checkout process.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.finishCheckout({\n    secretKey: 'YOUR_SECRET_API_KEY',\n    \n    token: 'token from onCheckout',\n\n    // 1000 cents == $10.00\n    amount: 1000,\n    currency: 'usd',\n    description: 'Description for purchase'\n});\n")),Object(r.b)("h3",{id:"serversetupstorystory-botormod"},Object(r.b)("inlineCode",{parentName:"h3"},"server.setupStory(story, botOrMod?)")),Object(r.b)("p",null,"Sends an action to the server that will create the given story if it does not exist and places a clone of the given bot or mod in it.\nThe new bot will only be added to the story if the story did not exist.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the story has been setup."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the ID of the story that should be setup."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is optional and is the bot or mod that should be cloned into the new story. After the bot is created, ",Object(r.b)(i.TagLink,{tag:"@onCreate",mdxType:"TagLink"})," will be triggered."),Object(r.b)("h4",{id:"examples-100"},"Examples:"),Object(r.b)("p",null,"Before ",Object(r.b)("inlineCode",{parentName:"p"},"server.setupStory()")," will work, you need to setup the ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," tag to execute events from remote devices.\nThis is because when you run ",Object(r.b)("inlineCode",{parentName:"p"},"server.setupStory()"),' from a PC or phone (a.k.a. A "remote device"), it needs to send an event to the server to actually create the new story.\nBy default, AUX does not perform actions that are received from a remote device. You must instruct AUX to execute these yourself.'),Object(r.b)("p",null,"Ensure that ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," is setup properly.\nThe following script will execute ",Object(r.b)("inlineCode",{parentName:"p"},"setup_story")," events that were sent from other devices:"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"// Device actions are actions that were sent to this computer from another device\nif (that.action.type === 'device') {\n\n    // The setup_story action is the action that is created\n    // from server.setupStory()\n    if (that.action.event.type === 'setup_story') {\n\n        // Execute the setup_story action\n        action.perform(that.action.event);\n    }\n}\n")),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Create the "test" story:')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupStory("test");\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},'Create the "test" story with a bot inside it:')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupStory("test", {\n    "name": "bob",\n    "color": "red"\n});\n')),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Create the "test" story with a bot that places a bot in the "abc" dimension:')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'await server.setupStory("test", {\n    "onCreate": `@\n        create({\n            creator: null,\n            label: "This is in the dimension!",\n            color: "blue",\n            abc: true\n        });\n\n        destroy(this);\n    `\n});\n')),Object(r.b)("h3",{id:"serverexportgpiopin-mode"},Object(r.b)("inlineCode",{parentName:"h3"},"server.exportGpio(pin, mode)")),Object(r.b)("p",null,"This exports a GPIO pin (BCM) on the physical server so that you can access them as inputs or outputs.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been exported."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is 'in' or 'out' to set the pin (BCM) as an input pin or an output pin."),Object(r.b)("h4",{id:"examples-101"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Export pin 17 as output.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\n")),Object(r.b)("h3",{id:"serverunexportgpiopin-mode"},Object(r.b)("inlineCode",{parentName:"h3"},"server.unexportGpio(pin, mode)")),Object(r.b)("p",null,"This unexports a GPIO pin (BCM) on the physical server so that it's freed up once you're done with it.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been unexported."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(r.b)("h4",{id:"examples-102"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Unexport pin 17.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\n\nserver.unexportGpio(led_pin);\n")),Object(r.b)("h3",{id:"serversetgpiopin-value"},Object(r.b)("inlineCode",{parentName:"h3"},"server.setGpio(pin, value)")),Object(r.b)("p",null,"This sets a GPIO pin (BCM) on the physical server to either HIGH (1) or LOW (0).\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been set."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is '0' or '1' to set the pin (BCM) as an HIGH or LOW."),Object(r.b)("h4",{id:"examples-103"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Set pin 17 to LOW or 0.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\nserver.setGpio(led_pin, 0);\n")),Object(r.b)("h3",{id:"servergetgpiopin"},Object(r.b)("inlineCode",{parentName:"h3"},"server.getGpio(pin)")),Object(r.b)("p",null,"This reads a given GPIO pin (BCM) and returns the state/value of the pin.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin (BCM) on the physical server."),Object(r.b)("h4",{id:"examples-104"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Shouts the state of pin 17.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 17;\n\nserver.exportGpio(led_pin, 'out');\nlet state = await server.getGpio(led_pin);\nplayer.shout(state);\n\n")),Object(r.b)("h3",{id:"serverrpioinitoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioInit(options)")),Object(r.b)("p",null,"Initialise the bcm2835 library. This will be called automatically by ",Object(r.b)("inlineCode",{parentName:"p"},".open()")," using the default option values if not called explicitly.",Object(r.b)("br",{parentName:"p"}),"\n","The action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when rpio has been initialized."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is an object with the settings to initialize with."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"gpiomem")," can be either ",Object(r.b)("inlineCode",{parentName:"p"},"true")," or ",Object(r.b)("inlineCode",{parentName:"p"},"false"),".\n",Object(r.b)("strong",{parentName:"p"},"mapping")," can be either ",Object(r.b)("inlineCode",{parentName:"p"},"gpio")," or ",Object(r.b)("inlineCode",{parentName:"p"},"physical"),".\n",Object(r.b)("strong",{parentName:"p"},"mock")," can be any of ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-b-r1")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-a")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-b")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-a+")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-b+")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-2")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-3")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-zero")," or ",Object(r.b)("inlineCode",{parentName:"p"},"raspi-zero-w"),".\n",Object(r.b)("strong",{parentName:"p"},"close_on_exit")," can be ",Object(r.b)("inlineCode",{parentName:"p"},"true")," or ",Object(r.b)("inlineCode",{parentName:"p"},"false"),". It is recommended to always be ",Object(r.b)("inlineCode",{parentName:"p"},"true"),"."),Object(r.b)("h4",{id:"examples-105"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Initialize rpio with the default options explicitly stated.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let options = {\n        gpiomem: true,          /* Use /dev/gpiomem */\n        mapping: 'physical',    /* Use the P1-P40 numbering scheme */\n        mock: undefined,        /* Emulate specific hardware in mock mode */\n        close_on_exit: true,    /* On node process exit automatically close rpio */\n}\n\nserver.rpioInit(options);\n")),Object(r.b)("h3",{id:"serverrpioexit"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioExit()")),Object(r.b)("p",null,"Shuts down the rpio library, unmapping and clearing all memory maps. By default this will happen automatically.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when rpio has been exited."),Object(r.b)("h4",{id:"examples-106"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Manually cleanup rpio.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioExit();\n")),Object(r.b)("h3",{id:"serverrpioopenpin-mode-options"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioOpen(pin, mode, options)")),Object(r.b)("p",null,"Open a pin for input or output.\nFor input pins, ",Object(r.b)("inlineCode",{parentName:"p"},"options")," can be used to configure the internal pullup or pulldown resistors.\nFor output pins, ",Object(r.b)("inlineCode",{parentName:"p"},"options")," defines the initial state of the pin, rather than having to issue a separate ",Object(r.b)("inlineCode",{parentName:"p"},".write()")," call.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been configured."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is 'INPUT', 'OUTPUT', or 'PWM' to set the pin as an input pin, an output pin, or for use with PWM."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and either 'HIGH', 'LOW', 'PULL_OFF', 'PULL_DOWN', or 'PULL_UP' to set the pin state."),Object(r.b)("h4",{id:"examples-107"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Configure pin 11 as output.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT');\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Configure pin 11 as output and initialize the pin as 'LOW'.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},"Configure pin 11 as input and initialize the pin as 'PULL_DOWN'.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'INPUT', 'PULL_DOWN');\n")),Object(r.b)("h3",{id:"serverrpiomodepin-mode-options"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioMode(pin, mode, options)")),Object(r.b)("p",null,"Switch a pin that has already been opened in one mode to a different mode.\nThis is provided primarily for performance reasons, as it avoids some of the setup work done by ",Object(r.b)("inlineCode",{parentName:"p"},".open()"),".\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been configured."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is 'INPUT', 'OUTPUT', or 'PWM' to set the pin as an input pin, an output pin, or for use with PWM."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and either 'HIGH', 'LOW', 'PULL_OFF', 'PULL_DOWN', or 'PULL_UP' to set the pin state."),Object(r.b)("h4",{id:"examples-108"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Change pin 11 mode to output and initialize the pin as 'LOW'.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'INPUT');\nserver.rpioMode(led_pin, 'OUTPUT', 'LOW');\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Change pin 11 mode to input and initialize the pin as 'PULL_DOWN'.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT');\nserver.rpioMode(led_pin, 'INPUT', 'PULL_DOWN');\n")),Object(r.b)("h3",{id:"serverrpioreadpin"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioRead(pin)")),Object(r.b)("p",null,"Read the current value of pin, returning either ",Object(r.b)("inlineCode",{parentName:"p"},"1")," (high) or ",Object(r.b)("inlineCode",{parentName:"p"},"0")," (low).\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("h4",{id:"examples-109"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Shout the state of pin 11.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\n\nserver.rpioOpen(led_pin, 'OUTPUT');\nlet state = await server.rpioRead(led_pin);\n\nplayer.shout(state);\n\n")),Object(r.b)("h3",{id:"serverrpioreadsequencepin-length"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioReadSequence(pin, length)")),Object(r.b)("p",null,"Read length bits from pin into buffer as fast as possible.\nThis is useful for devices which send out information faster than the JavaScript function call overhead can handle, e.g. if you need microsecond accuracy.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been read."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the length of the buffer to read."),Object(r.b)("h4",{id:"examples-110"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Read the value of Pin 16 10 times in a row")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.rpioReadSequence(16, 10);\n")),Object(r.b)("h3",{id:"serverrpiowritepin-value"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioWrite(pin, value)")),Object(r.b)("p",null,"Set the specified pin either high or low.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been set."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is 'HIGH' or 'LOW' to set the pin as an HIGH or LOW."),Object(r.b)("h4",{id:"examples-111"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Set pin 11 to HIGH.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\n\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioWrite(led_pin, 'HIGH');\n")),Object(r.b)("h3",{id:"serverrpiowritesequencepin-buffer"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioWriteSequence(pin, buffer)")),Object(r.b)("p",null,"Write length bits to pin from buffer as fast as possible.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been written to."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is array of numbers."),Object(r.b)("h4",{id:"examples-112"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Write a sequence of numbers to Pin 13 ")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"\nserver.rpioWriteSequence(13, [10, 10]);\n\n")),Object(r.b)("h3",{id:"serverrpioclosepin-options"},Object(r.b)("inlineCode",{parentName:"h3"},"server.rpioClose(pin, options)")),Object(r.b)("p",null,"Indicate that the pin will no longer be used, and clear any poll events associated with it.\nThe action is only executed if ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," has been configured to perform events in ",Object(r.b)("inlineCode",{parentName:"p"},"device")," actions."),Object(r.b)("p",null,"Returns a promise that resolves when the pin has been closed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the pin on the physical server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is 'PIN_RESET' or 'PIN_PRESERVE' and can be used to configure the state that pin will be left in after close."),Object(r.b)("h4",{id:"examples-113"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Close pin 11 and let the state reset by default.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioClose(led_pin);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Close pin 11 and preserve the state.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"var led_pin = 11;\nserver.rpioOpen(led_pin, 'OUTPUT', 'LOW');\nserver.rpioClose(led_pin, 'PIN_PRESERVE');\n")),Object(r.b)("h3",{id:"serverbrowsehistory"},Object(r.b)("inlineCode",{parentName:"h3"},"server.browseHistory()")),Object(r.b)("p",null,"Loads the ",Object(r.b)("inlineCode",{parentName:"p"},"history")," space into the current story.\nThe ",Object(r.b)("inlineCode",{parentName:"p"},"history")," space is read-only and contains all the marks that have been created for the story.\nEach mark is a bot that is placed in the ",Object(r.b)("inlineCode",{parentName:"p"},"#history")," dimension."),Object(r.b)("p",null,"Returns a promise that resolves when the history bots are loaded."),Object(r.b)("h4",{id:"examples-114"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Load the ",Object(r.b)("inlineCode",{parentName:"li"},"history")," space.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.browseHistory();\n")),Object(r.b)("h3",{id:"servermarkhistoryoptions"},Object(r.b)("inlineCode",{parentName:"h3"},"server.markHistory(options)")),Object(r.b)("p",null,"Marks the current state as a save point in history. This save point can be restored by using the ",Object(r.b)(i.ActionLink,{action:"server.restoreHistoryMark(mark)",mdxType:"ActionLink"})," action.\nNote that this only saves bots in the ",Object(r.b)("inlineCode",{parentName:"p"},"shared")," space. ",Object(r.b)("inlineCode",{parentName:"p"},"local")," and ",Object(r.b)("inlineCode",{parentName:"p"},"tempLocal")," bots are unaffected."),Object(r.b)("p",null,"Returns a promise that resolves when the history mark has been created."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," are the options that should be used to mark the history point.\nIt should be an object with the following properties:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"message")," - The message that the new mark should have. Use this as a way to communicate what was special about this save point.")),Object(r.b)("h4",{id:"examples-115"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Save the current state of the ",Object(r.b)("inlineCode",{parentName:"li"},"shared")," space.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.markHistory({\n    message: 'First Version of my AUX'\n});\n")),Object(r.b)("h3",{id:"serverrestorehistorymarkmark"},Object(r.b)("inlineCode",{parentName:"h3"},"server.restoreHistoryMark(mark)")),Object(r.b)("p",null,"Restores the current state to the state that was saved by the given mark.\nThis will create a new mark with any unsaved changes and another mark with the state that was saved by the given mark."),Object(r.b)("p",null,"Returns a promise that resolves when the history mark has been restored."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID of the mark that should be restored. You can find available marks in the current story by using the ",Object(r.b)(i.ActionLink,{action:"server.browseHistory()",mdxType:"ActionLink"})," action."),Object(r.b)("h4",{id:"examples-116"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Restore the state to a given mark.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Find a random mark that was loaded by server.browseHistory()\nlet mark = getBot(byTag("#history", true));\n\n// Restore the current state to the given mark.\nawait server.restoreHistoryMark(mark);\n')),Object(r.b)("h3",{id:"serverrestorehistorymarktostorymark-story"},Object(r.b)("inlineCode",{parentName:"h3"},"server.restoreHistoryMarkToStory(mark, story)")),Object(r.b)("p",null,"Restores the state in the given story to the state that was saved by the given mark.\nThis will create a new mark with any unsaved changes in the story and another mark with the state that was saved by the given mark."),Object(r.b)("p",null,"Returns a promise that resolves when the history mark has been restored."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot or bot ID of the mark that should be restored. You can find available marks in the current story by using the ",Object(r.b)(i.ActionLink,{action:"server.browseHistory()",mdxType:"ActionLink"})," action."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the story that the state should be restored to. If ",Object(r.b)("inlineCode",{parentName:"p"},"null")," or an empty string, then the current story will be restored."),Object(r.b)("h4",{id:"examples-117"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Restore the state of the ",Object(r.b)("inlineCode",{parentName:"li"},"test")," story to a given mark.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Find a random mark that was loaded by server.browseHistory()\nlet mark = getBot(byTag("#history", true));\n\n// Restore the current state to the given mark.\nawait server.restoreHistoryMarkToStory(mark, "test");\n')),Object(r.b)("h3",{id:"servershellscript"},Object(r.b)("inlineCode",{parentName:"h3"},"server.shell(script)")),Object(r.b)("p",null,"Executes the given script on the server."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the shell script that should be executed."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"By default, shell scripts are disabled on a story. To enable them, you have to write a custom ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(r.b)("h3",{id:"serverloadfilepath-options"},Object(r.b)("inlineCode",{parentName:"h3"},"server.loadFile(path, options?)")),Object(r.b)("p",null,"Loads a file from the server at the given path."),Object(r.b)("p",null,"Note that on a Raspberry PI, all USB storage devices are mapped into the ",Object(r.b)("inlineCode",{parentName:"p"},"/drives")," directory based on the port they were plugged into.\nLoading a file from a USB drive is as simple as specifying the file name.\nIf multiple USB drives are plugged in and have files with the same name, then the file from the USB drive in the smallest numbered port is used."),Object(r.b)("p",null,"Returns a promise that resolves with the data in the file."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the path that the file should be loaded from. This is usually just the full name of the file to load. (name + file extension)"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," are the options that should be used for loading the file."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"By default, loading files is disabled on a story. To enable it, you have to write a custom ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-118"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Load a file named "book.txt" and trigger a ',Object(r.b)("inlineCode",{parentName:"li"},"@onBookLoaded")," shout when it is loaded.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.loadFile('book.txt', {\n    callbackShout: 'onBookLoaded'\n});\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},'Load a file named "book.txt" from drive ',Object(r.b)("inlineCode",{parentName:"li"},"2")," and trigger a ",Object(r.b)("inlineCode",{parentName:"li"},"@onBookLoaded")," shout when it is loaded.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.loadFile('/2/book.txt', {\n    callbackShout: 'onBookLoaded'\n});\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Load a file named "book.txt" and toast the contents.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const result = await server.loadFile('book.txt');\nplayer.toast(result.data);\n")),Object(r.b)("h3",{id:"serversavefilepath-data-options"},Object(r.b)("inlineCode",{parentName:"h3"},"server.saveFile(path, data, options?)")),Object(r.b)("p",null,"Saves a file at the given path with the given data.\nIf the file already exists, then the options are used to determine if the file should be overwritten. By default the file will not be overwritten."),Object(r.b)("p",null,"Note that on a Raspberry PI, all USB storage devices are mapped into the ",Object(r.b)("inlineCode",{parentName:"p"},"/drives")," directory based on the port they were plugged into.\nSaving a file to a USB drive is as simple as specifying the file name.\nIf multiple USB drives are plugged in and a drive is not specified, then the file will be saved to the first drive."),Object(r.b)("p",null,"Returns a promise that resolves when the file has been saved."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the path that the file should be saved to. This is usually just the full name of the file to save. (name + file extension)"),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the data that should be saved into the file."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," are the options that should be used for saving the file."),Object(r.b)(i.Alert,{type:"info",mdxType:"Alert"},"By default, saving files is disabled on a story. To enable it, you have to write a custom ",Object(r.b)(i.TagLink,{tag:"@onStoryAction",mdxType:"TagLink"})," listener on the config bot and run an ",Object(r.b)(i.ActionLink,{action:"action.perform(action)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-119"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Save a file named "book.txt" and trigger a ',Object(r.b)("inlineCode",{parentName:"li"},"@onBookSaved")," shout when it is saved.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.saveFile('book.txt', 'My memoirs', {\n    callbackShout: 'onBookSaved'\n});\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},'Save a file named "book.txt" to drive ',Object(r.b)("inlineCode",{parentName:"li"},"2")," and trigger a ",Object(r.b)("inlineCode",{parentName:"li"},"@onBookSaved")," shout when it is loaded.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.saveFile('/2/book.txt', 'My memoirs', {\n    callbackShout: 'onBookSaved',\n    overwriteExistingFile: true\n});\n")),Object(r.b)("ol",{start:3},Object(r.b)("li",{parentName:"ol"},'Save a file named "book.txt" and send a toast when it is finished.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await server.saveFile('/2/book.txt', 'My memoirs', {\n    overwriteExistingFile: true\n});\n\nplayer.toast(\"File Saved!\");\n")),Object(r.b)("h3",{id:"serverloaderrorsbot-tag"},Object(r.b)("inlineCode",{parentName:"h3"},"server.loadErrors(bot, tag)")),Object(r.b)("p",null,"Loads the errors for the given bot and tag.\nNote that the bots don't load immediately. They will automatically be added to the story state once they have been loaded."),Object(r.b)("p",null,"Can be called multiple times for the same bot/tag combination to load errors that have been created since the last time they were loaded."),Object(r.b)("p",null,"Finds bots by searching the error space for bots with the following tags:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"error")," must be set to true."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"errorBot")," must be the ID of the bot that was specified."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"errorTag")," must be the tag that was specified.")),Object(r.b)("p",null,"Returns a promise that resolves with the list of bots that were loaded."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the Bot or Bot ID that the errors should be loaded for."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name of the tag that the errors should be loaded for."),Object(r.b)("h4",{id:"examples-120"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Load all errors that have occurred for this script:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"let bots = await server.loadErrors(this, tagName);\n")),Object(r.b)("h3",{id:"serverdestroyerrors"},Object(r.b)("inlineCode",{parentName:"h3"},"server.destroyErrors()")),Object(r.b)("p",null,"Destroys all the error bots."),Object(r.b)("p",null,"Returns a promise that resolves once the bots are destroyed."),Object(r.b)("h4",{id:"examples-121"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Destroy all the error bots in this story:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"server.destroyErrors();\n")),Object(r.b)("h3",{id:"serverstoryplayercountstory"},Object(r.b)("inlineCode",{parentName:"h3"},"server.storyPlayerCount(story?)")),Object(r.b)("p",null,"Gets the number of players that are viewing the current story.\nOptionally takes a parameter which is the story that the number of players should be retrieved for. If omitted, then the current story will be checked.\nReturns a promise that resolves with the number of active players."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is optional and is the name of the story that the number of players should be retrieved for.\nIf not specified, then the current story ",Object(r.b)(i.ActionLink,{action:"player.getCurrentStory()",mdxType:"ActionLink"},"current story")," will be used."),Object(r.b)("h4",{id:"examples-122"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the number of players in the current story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfPlayers = await server.storyPlayerCount();\n\nplayer.toast("Number of Players: " + numberOfPlayers);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Get the number of players in the ",Object(r.b)("inlineCode",{parentName:"li"},"test")," story.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const numberOfPlayers = await server.storyPlayerCount('test');\n\nplayer.toast(\"Number of Players: \" + numberOfPlayers);\n")),Object(r.b)("h3",{id:"servertotalplayercount"},Object(r.b)("inlineCode",{parentName:"h3"},"server.totalPlayerCount()")),Object(r.b)("p",null,"Gets the number of players that are connected to the server.\nReturns a promise that resolves with the number of active players."),Object(r.b)("h4",{id:"examples-123"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the number of players on the server.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const numberOfPlayers = await server.totalPlayerCount();\n\nplayer.toast("Number of Players: " + numberOfPlayers);\n')),Object(r.b)("h3",{id:"serverstories"},Object(r.b)("inlineCode",{parentName:"h3"},"server.stories()")),Object(r.b)("p",null,"Gets the list of stories that are stored on the server.\nReturns a promise that resolves with the list of story names."),Object(r.b)("h4",{id:"examples-124"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the list of stories on the server.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const stories = await server.stories();\n\nplayer.toast(\"Stories \" + stories.join(','));\n")),Object(r.b)("h3",{id:"serverstorystatuses"},Object(r.b)("inlineCode",{parentName:"h3"},"server.storyStatuses()")),Object(r.b)("p",null,"Gets the list of stories that are stored on the server along with the last time that they were updated.\nReturns a promise that resolves with the list of stories."),Object(r.b)("p",null,"The resolved list is sorted by the most recently updated first and the least recently updated last."),Object(r.b)("h4",{id:"examples-125"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the list of stories on the server along with their status.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const stories = await server.storyStatuses();\n\nplayer.toast("Stories " + getJSON(stories));\n')),Object(r.b)("h3",{id:"serverplayers"},Object(r.b)("inlineCode",{parentName:"h3"},"server.players()")),Object(r.b)("p",null,"Gets the list of player IDs that are connected to the current story.\nReturns a promise that resolves with the list of player IDs."),Object(r.b)("p",null,"The resolved list will always have at least one value that represents the current player."),Object(r.b)("h4",{id:"examples-126"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the list of player IDs.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const players = await server.players();\n\nplayer.toast(\"Players \" + players.join(','));\n")),Object(r.b)("h2",{id:"utility-actions"},"Utility Actions"),Object(r.b)("h3",{id:"settagbot-tag-value"},Object(r.b)("inlineCode",{parentName:"h3"},"setTag(bot, tag, value)")),Object(r.b)("p",null,"Sets the given tag to the given value on the given bot, list of bots, or mod."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot, list of bots, or mod that the tag should be set on."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be changed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the value that should be placed into the tag(s)."),Object(r.b)("h4",{id:"examples-127"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Set a bot's ",Object(r.b)(i.TagLink,{tag:"color",mdxType:"TagLink"})," to ",Object(r.b)("inlineCode",{parentName:"li"},"green"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'setTag(this, "#color", "green");\n')),Object(r.b)("h3",{id:"gettagbot-tag"},Object(r.b)("inlineCode",{parentName:"h3"},"getTag(bot, tag)")),Object(r.b)("p",null,"Gets the given tag value from the given bot."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot that the tag should be retrieved from."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the tag that should be retrieved."),Object(r.b)("h4",{id:"examples-128"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Get the ",Object(r.b)(i.TagLink,{tag:"color",mdxType:"TagLink"})," tag from ",Object(r.b)("inlineCode",{parentName:"li"},"this")," bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const color = getTag(this, "#color");\n')),Object(r.b)("h2",{id:"math-actions"},"Math Actions"),Object(r.b)("h3",{id:"mathsumlist"},Object(r.b)("inlineCode",{parentName:"h3"},"math.sum(list)")),Object(r.b)("p",null,"Calculates the numerical sum of the given values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the list of values that should be summed up.\nIf any value in the list is not a number, it will be converted to one.\nIf the list is not actually a list, then it will be converted to a number and returned."),Object(r.b)("h4",{id:"examples-129"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the sum of a list of numbers.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const total = math.sum([92, 123, 21]);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the total ",Object(r.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const totalAge = math.sum(getBotTagValues('#age'));\n")),Object(r.b)("h3",{id:"mathavglist"},Object(r.b)("inlineCode",{parentName:"h3"},"math.avg(list)")),Object(r.b)("p",null,"Calculates the arithmetic mean of the given list of values.\nThat is, the sum of the values divided by the number of values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the list of values that average should be calculated for."),Object(r.b)("h4",{id:"examples-130"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the average of a list of numbers.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const average = math.avg([4, 54.2, 31]);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the average ",Object(r.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const averageAge = math.avg(getBotTagValues('#age'));\n")),Object(r.b)("h3",{id:"mathsqrtvalue"},Object(r.b)("inlineCode",{parentName:"h3"},"math.sqrt(value)")),Object(r.b)("p",null,"Calculates the square root of the given value."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the value that the square root should be calculated for."),Object(r.b)("h4",{id:"examples-131"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the square root of ",Object(r.b)("inlineCode",{parentName:"li"},"4"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const rootOf4 = math.sqrt(4);\n")),Object(r.b)("h3",{id:"mathabsnumber"},Object(r.b)("inlineCode",{parentName:"h3"},"math.abs(number)")),Object(r.b)("p",null,"Calculates the absolute value of the given number."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the number that the absolute value should be calculated for."),Object(r.b)("h4",{id:"examples-132"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the absolute value for the number ",Object(r.b)("inlineCode",{parentName:"li"},"-42"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const _42 = math.abs(-42);\n")),Object(r.b)("h3",{id:"mathstddevlist"},Object(r.b)("inlineCode",{parentName:"h3"},"math.stdDev(list)")),Object(r.b)("p",null,"Calculates the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Standard_deviation"}),"standard deviation")," for the given list of values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the list of values that the standard deviation should be calculated for."),Object(r.b)("h4",{id:"examples-133"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the standard deviation of a list of numbers.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const standardDeviation = math.stdDev([2, 97, 745]);\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the standard deviation of the ",Object(r.b)("inlineCode",{parentName:"li"},"#age")," of all the bots.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const ageDeviation = math.stdDev(getBotTagValues('#age'));\n")),Object(r.b)("h3",{id:"mathrandomintmin-max"},Object(r.b)("inlineCode",{parentName:"h3"},"math.randomInt(min, max)")),Object(r.b)("p",null,"Generates a random integer number between the given minimum and maximum values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the smallest allowed value that can be generated."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the largest allowed value that can be generated."),Object(r.b)("h4",{id:"examples-134"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Generate a random number between ",Object(r.b)("inlineCode",{parentName:"li"},"5")," and ",Object(r.b)("inlineCode",{parentName:"li"},"10"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const number = math.randomInt(5, 10);\n")),Object(r.b)("h3",{id:"mathrandommin-max"},Object(r.b)("inlineCode",{parentName:"h3"},"math.random(min, max)")),Object(r.b)("p",null,"Generates a random number between the given minimum and maximum values."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the smallest allowed value that can be generated."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the largest allowed value that can be generated."),Object(r.b)("h4",{id:"examples-135"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Generate a random number between ",Object(r.b)("inlineCode",{parentName:"li"},"0")," and ",Object(r.b)("inlineCode",{parentName:"li"},"Math.PI"),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const number = math.random(0, Math.PI);\n")),Object(r.b)("h2",{id:"crypto-actions"},"Crypto Actions"),Object(r.b)("h3",{id:"cryptosha256data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.sha256(...data)")),Object(r.b)("p",null,"Calculates the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-256")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(r.b)("p",null,"Hashes are generally useful for validating that a piece of data did not change or for checking to see if two values are the same thing."),Object(r.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a piece of data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(r.b)("h4",{id:"examples-136"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the hash of a string.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha256("hello, world");\nplayer.toast(hash);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the hash of an object.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha256({\n    abc: "def"\n});\nplayer.toast(hash);\n')),Object(r.b)("h3",{id:"cryptosha512data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.sha512(...data)")),Object(r.b)("p",null,"Calculates the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-512")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(r.b)("p",null,"Hashes are generally useful for validating that a piece of data did not change or for checking to see if two values are the same thing."),Object(r.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"Each parameter")," is a piece of data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(r.b)("h4",{id:"examples-137"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the hash of a string.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha512("hello, world");\nplayer.toast(hash);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the hash of an object.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.sha512({\n    abc: "def"\n});\nplayer.toast(hash);\n')),Object(r.b)("h3",{id:"cryptohmacsha256key-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.hmacSha256(key, ...data)")),Object(r.b)("p",null,"Calculates the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HMAC"}),"HMAC")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-256")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(r.b)("p",null,"HMAC hashes are generally useful for validating that a piece of data was sent from someone else who has a particular password."),Object(r.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to create the HMAC."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"other parameters")," are the data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(r.b)("h4",{id:"examples-138"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the HMAC of a string with a key.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha256("key", "hello, world");\nplayer.toast(hash);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the HMAC of an object.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha256("key", {\n    abc: "def"\n});\nplayer.toast(hash);\n')),Object(r.b)("h3",{id:"cryptohmacsha512key-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.hmacSha512(key, ...data)")),Object(r.b)("p",null,"Calculates the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/HMAC"}),"HMAC")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/SHA-2"}),"SHA-512")," ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Cryptographic_hash_function"}),"hash")," of the given data.\nReturns a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Hexadecimal"}),"hexadecimal")," string that represents the computed hash."),Object(r.b)("p",null,"HMAC hashes are generally useful for validating that a piece of data was sent from someone else who has a particular password."),Object(r.b)("p",null,"Supports calculating hashes of strings, numbers, booleans, objects, arrays, and bots."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to create the HMAC."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"other parameters")," are the data that should be included in the hash. If multiple pieces of data are included, they will be concatenated."),Object(r.b)("h4",{id:"examples-139"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Calculate the HMAC of a string with a key.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha512("key", "hello, world");\nplayer.toast(hash);\n')),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Calculate the HMAC of an object.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const hash = crypto.hmacSha512("key", {\n    abc: "def"\n});\nplayer.toast(hash);\n')),Object(r.b)("h3",{id:"cryptoencryptpassword-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.encrypt(password, data)")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Encrypts")," the given data using the given password and returns the result."),Object(r.b)("p",null,"Use the ",Object(r.b)(i.ActionLink,{action:"crypto.decrypt(password, data)",mdxType:"ActionLink"})," function to decrypt the data."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Always use a strong and unique password.")," Use a password manager such as LastPass or 1Password to help you create and keep track of them."),Object(r.b)("p",null,"Assuming a strong password, this method will return a string of encrypted data that is ",Object(r.b)("em",{parentName:"p"},"confidential")," (unreadable without the password),\n",Object(r.b)("em",{parentName:"p"},"reliable")," (the encrypted data cannot be changed without making it unreadable), and ",Object(r.b)("em",{parentName:"p"},"authentic")," (decryptability proves that the password was used to encrypt the data)."),Object(r.b)("p",null,"As a consequence, encrypting the same data with the same password will produce different results.\nThis is to ensure that an attacker cannot correlate different pieces of data to potentially deduce the original plaintext."),Object(r.b)("p",null,"Encrypts the given data using an authenticated encryption mechanism\nbased on ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xsalsa20"}),"XSalsa20")," (An encryption cipher) and ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Poly1305"}),"Poly1305")," (A message authentication code).\nAdditionally uses ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Scrypt"}),"scrypt")," for ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Key_derivation_function"}),"password-based key derivation"),". "),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to encrypt the data. Use a strong an unique password for maximum security."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the string data that should be encrypted."),Object(r.b)("h4",{id:"examples-140"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Encrypt the given data and toast it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const encrypted = crypto.encrypt("key", "hello, world");\nplayer.toast(encrypted);\n')),Object(r.b)("h3",{id:"cryptodecryptpassword-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.decrypt(password, data)")),Object(r.b)("p",null,Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Encryption"}),"Decrypts")," the given data using the given password and returns the result."),Object(r.b)("p",null,"Use the ",Object(r.b)(i.ActionLink,{action:"crypto.encrypt(password, data)",mdxType:"ActionLink"})," function to encrypt the data."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to decrypt the data. This should be the same password that was used to encrypt the data."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the data from ",Object(r.b)(i.ActionLink,{action:"crypto.encrypt(password, data)",mdxType:"ActionLink"})," that should be decrypted."),Object(r.b)("h4",{id:"examples-141"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Decrypt the given data and toast it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const decrypted = crypto.decrypt("key", "v1.vWUhsdfiKkxXi9Rt+BBNbcP/TiHZpxUL.iikPvWN6rNncY3j045gM0268MoRi0NNf.IpWYgzXQmjRea4MNLDXB1GmrinWLSSOMw+NfqeE=");\nplayer.toast(decrypted);\n')),Object(r.b)("h3",{id:"cryptokeypairpassword"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.keypair(password)")),Object(r.b)("p",null,"Creates a keypair that can be used to ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Digital_signature"}),"digitially sign")," and verify data."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.sign(keypair, password, data)",mdxType:"ActionLink"})," and ",Object(r.b)(i.ActionLink,{action:"crypto.verify(keypair, signature, data)",mdxType:"ActionLink"})," to sign and verify the data."),Object(r.b)("p",null,"Keypairs are made up of a private key and a public key.\nThe private key is a special value that can be used to create digital signatures and\nthe public key is a related value that can be used to verify that a digitital signature was created by the private key."),Object(r.b)("p",null,'The private key is called "private" because it is encrypted using the given password\nwhile the public key is called "public" because it is not encrypted so anyone can use it if they have access to it.'),Object(r.b)("p",null,"Note that both the private and public keys are randomly generated, so while the public is unencrypted, it won't be able to be used by someone else unless\nthey have access to it."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to encrypt the private key of the keypair."),Object(r.b)("h4",{id:"examples-142"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Create a keypair and toast it.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'const keypair = crypto.keypair("password");\nplayer.toast(keypair);\n')),Object(r.b)("h3",{id:"cryptsignkeypair-password-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypt.sign(keypair, password, data)")),Object(r.b)("p",null,"Calculates the digital signature for the given data using the given keypair and password."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.keypair(password)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.verify(keypair, signature, data)",mdxType:"ActionLink"})," to validate signatures."),Object(r.b)("p",null,"Digital signatures are used to verifying the authenticity and integrity of data."),Object(r.b)("p",null,"This works by leveraging asymetric encryption but in reverse."),Object(r.b)("p",null,"If we can encrypt some data such that only the public key of a keypair can decrypt it, then we can prove that\nthe data was encrypted (i.e. signed) by the corresponding private key."),Object(r.b)("p",null,"And since the public key is available to everyone but the private\nkey is only usable when you have the password, we can use this to prove that a particular piece of data was signed by whoever knows the password."),Object(r.b)("p",null,"Note that because of how digital signatures work, signing the same data with the same keypair will produce the same signature."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the keypair that should be used to sign the data."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the password that was used to encrypt the private key of the keypair."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the string data that should be signed."),Object(r.b)("h4",{id:"examples-143"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Create a signature for the string ",Object(r.b)("inlineCode",{parentName:"li"},'"hello"'),".")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Returned from crypto.keypair()\nconst keypair = "vK1.qaG7S8rjXL5G03lbCwMsYybi/M6xFHEo6TDpofyx2Uc=.djEuRWp5TGZjRVNmTXNGZ2Q4SXArcjRSbXNVRXdTK2ZzK2wuZHhNM0RiM2VPNWgwNk5FQitVVW91YStWS1RyRkVLSzEuTkVjZDZtd0hGNDltT0hGWC9OODQxb2JqbWs0QU1yNndTWWxsSGlMS0M1UEs4ZW9vem83WVFieUxVcGJJcW4vcUZDbTVWZWhpdmRteHF0enlmQjNEeEQraklRVFRKcU1aaFpkYkZtdFFnZ2M9";\n\nconst signature = crypto.sign(keypair, "password", "hello");\nplayer.toast(signature);\n')),Object(r.b)("h3",{id:"cryptoverifykeypair-signature-data"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.verify(keypair, signature, data)")),Object(r.b)("p",null,"Validates that the given signature was created by the given keypair for the given data.\nReturns true if the signature is valid. Returns false otherwise."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.keypair(password)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.sign(keypair, password, data)",mdxType:"ActionLink"})," to create signatures."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the keypair that was used to create the signature."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the signature that was returned from ",Object(r.b)(i.ActionLink,{action:"crypto.sign(keypair, password, data)",mdxType:"ActionLink"}),"."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the data that was used in the call to ",Object(r.b)(i.ActionLink,{action:"crypto.sign(keypair, password, data)",mdxType:"ActionLink"}),"."),Object(r.b)("h4",{id:"examples-144"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Validate a signature.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'// Returned from crypto.keypair()\nconst keypair = "vK1.qaG7S8rjXL5G03lbCwMsYybi/M6xFHEo6TDpofyx2Uc=.djEuRWp5TGZjRVNmTXNGZ2Q4SXArcjRSbXNVRXdTK2ZzK2wuZHhNM0RiM2VPNWgwNk5FQitVVW91YStWS1RyRkVLSzEuTkVjZDZtd0hGNDltT0hGWC9OODQxb2JqbWs0QU1yNndTWWxsSGlMS0M1UEs4ZW9vem83WVFieUxVcGJJcW4vcUZDbTVWZWhpdmRteHF0enlmQjNEeEQraklRVFRKcU1aaFpkYkZtdFFnZ2M9";\n\n// Returned from crypto.sign()\nconst signature = "vS1./su0SXu8r9PvsVgELmKPCdfYr9GlLCChAfITsqt40PXEr74H/MMwcO5oaZCLXtZHOiSy9AHZiRYqLPFPiaRkDg==";\n\nconst valid = crypto.verify(keypair, signature, "hello");\nplayer.toast(valid);\n')),Object(r.b)("h3",{id:"cryptocreatecertificatecertificate-password-keypair"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.createCertificate(certificate, password, keypair)")),Object(r.b)("p",null,"Creates a new certified bot (also known as a certificate) from the given keypair that is signed by the given certified bot using the given password.\nReturns a promise that resolves with the new bot."),Object(r.b)("p",null,"Certificates are useful for creating signatures for tag values that CasualOS is aware of and will validate for you."),Object(r.b)("p",null,"Certificates are similar to keypairs except that they themselves are signed by another certificate.\nThis creates a ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Chain_of_trust"}),"chain of trust"),' that can be used to establish the validity of any arbitrary certificate.\nThe certificate that created the signature is called the "signing/signer certificate" and the certificate that recieved the signature is called the "signee certificate".'),Object(r.b)("p",null,"Each certificate contains the following information:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"A keypair."),Object(r.b)("li",{parentName:"ul"},"A reference to the signing certificate."),Object(r.b)("li",{parentName:"ul"},"A signature from the signing certificate.")),Object(r.b)("p",null,"In CasualOS, there are two types of certificates:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Root certificates."),Object(r.b)("li",{parentName:"ol"},"Non-root certificates.")),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Root certificates")," are certificates that are both signee and signer. This means that the certificate used its own keypair to create the signature.\nAs such, the validity of the certificate cannot be checked apart from simply trusting it. Only one root certificate is allowed per story on a first-come first-serve basis.\nOnce a root certificate is created for a story, another cannot be created."),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"Non-root certificates")," are certificates that are signed by another certificate. This means that another certificate's keypair was used to create the signature.\nAs such, the validity of the certificate can be checked by following the chain of trust back to the root certificate.\nIf the chain does not end at the root certificate for the story, then the certificate is invalid and any signatures created by it will also be invalid."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.keypair(password)",mdxType:"ActionLink"})," to create a keypair that can be used to create signatures."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.signTag(certificate, password, bot, tag)",mdxType:"ActionLink"})," to create signatures for a certificate."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the certified bot that should be used to sign the new certificate. If given null, then the new bot will be self-signed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the password that should be used to decrypt the private key. If the first parameter is null, then this should be the password for the keypair."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the keypair that the new certificate should have."),Object(r.b)("h4",{id:"examples-145"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Create a root certificate and toast the Bot ID:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const keypair = await crypto.keypair('passwordForRootCert');\nconst cert = await crypto.createCertificate(null, 'passwordForRootCert', keypair);\n\nplayer.toast(getID(cert));\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Create a non-root certificate and toast the Bot ID:")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const rootKeypair = getBot('id', rootCertID);\n\nconst nonRootKeypair = await crypto.keypair('passwordForNonRootCert');\nconst nonRoot = await crypto.createCertificate(rootCert, 'passwordForRootCert', nonRootKeypair);\n\nplayer.toast(getID(nonRoot));\n")),Object(r.b)("h3",{id:"cryptosigntagcertificate-password-bot-tag"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.signTag(certificate, password, bot, tag)")),Object(r.b)("p",null,"Creates a signature for the given bot, tag, and current value using the given certificate and password.\nReturns a promise that resolves once the tag value has been signed."),Object(r.b)("p",null,"When a signature is created for a tag value, the value is considered valid until it is changed or the certificate is revoked."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the certificate bot that should be used to create the signature."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the password used to decrypt the private key of the certificate."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is the bot whose tag value should be signed."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"fourth parameter")," is the tag whose value should be signed."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.createCertificate(certificate, password, keypair)",mdxType:"ActionLink"})," to create certificates that can be used with this function."),Object(r.b)("p",null,"Use ",Object(r.b)(i.ActionLink,{action:"crypto.verifyTag(bot, tag)",mdxType:"ActionLink"})," to verify that a tag has a valid signature."),Object(r.b)("h4",{id:"examples-146"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Sign the ",Object(r.b)("inlineCode",{parentName:"li"},"@onClick")," script on a bot.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const cert = getBot('id', certID);\nawait crypto.signTag(cert, 'passwordForCert', bot, 'onClick');\n")),Object(r.b)("h3",{id:"cryptoverifytagbot-tag"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.verifyTag(bot, tag)")),Object(r.b)("p",null,"Validates that the tag value stored in the given tag on the given bot has been signed by a valid certificate.\nReturns true if the tag value is valid. Returns false otherwise."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the bot whose tag value should be checked."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the tag whose value should be checked."),Object(r.b)("h4",{id:"examples-147"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Check if the ",Object(r.b)("inlineCode",{parentName:"li"},"@onClick")," script is signed.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const valid = crypto.verifyTag(bot, 'onClick');\n\nif (valid) {\n    player.toast('onClick is valid!');\n} else {\n    player.toast('onClick is not valid.');\n}\n")),Object(r.b)("h3",{id:"cryptorevokecertificatecertificate-password-signer"},Object(r.b)("inlineCode",{parentName:"h3"},"crypto.revokeCertificate(certificate, password, signer?)")),Object(r.b)("p",null,"Revokes the given certificate and any signatures that it has created.\nIn effect, this deletes the certificate bot from the story.\nAdditionally, any tags signed with the given certificate will no longer be verified."),Object(r.b)("p",null,"Returns a promise that resolves when the certificate has been revoked."),Object(r.b)("p",null,"Revoking a certificate works by creating another record (called a revocation) that is signed by either the original certificate\nor an ancestor of the original certificate. This record is then stored in the shared space and lets everyone see that the certificate is no longer valid."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the certificate that should be revoked."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the password that should be used to decrypt the corresponding certificate's private key.\nIf the signer parameter is specified, then this is the password for the signer certificate.\nIf the signer parameter is omitted, then this is the password for the certificate that is being revoked."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"third parameter")," is optional and is the certificate that should be used to perform the revocation process.\nIf not specified, then the revocation will be signed by the revoked certificate (self-signed revocation).\nIf specified, then the revocation will be signed using the given certificate.\nNote that any certificate that is specified must either be the original certificate or an ancestor of the original certificate."),Object(r.b)("h4",{id:"examples-148"},"Examples:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Revoke a certificate with itself.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const cert = getBot('id', certificateId);\nawait crypto.revokeCertificate(cert, 'passwordForCert');\n\nplayer.toast('Certificate revoked!');\n")),Object(r.b)("ol",{start:2},Object(r.b)("li",{parentName:"ol"},"Revoke a certificate using another certificate.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"const certToRevoke = getBot('id', certToRevokeId);\nconst signingCert = getBot('id', signingCertId);\n\nawait crypto.revokeCertificate(certToRevoke, 'passwordForSigningCert', signingCert);\n\nplayer.toast('Certificate revoked!');\n")),Object(r.b)("h2",{id:"admin-actions"},"Admin Actions"),Object(r.b)("h3",{id:"adminspaceunlockpassword"},Object(r.b)("inlineCode",{parentName:"h3"},"adminSpace.unlock(password)")),Object(r.b)("p",null,"Unlocks the admin space using the given password.\nReturns a Promise that resolves once the space is unlocked.\nThe promise will be rejected if the space was unable to be unlocked."),Object(r.b)("p",null,"If given the correct password, admin space will be unlocked and become editable."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that should be used to unlock admin space."),Object(r.b)("h4",{id:"examples-149"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Unlock admin space.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'try {\n    await adminSpace.unlock("my-password");\n    player.toast("Admin Space Unlocked!");\n} catch(err) {\n    player.toast("Failed to unlock admin space " + err);\n}\n')),Object(r.b)("h3",{id:"adminspacesetpasswordoldpassword-newpassword"},Object(r.b)("inlineCode",{parentName:"h3"},"adminSpace.setPassword(oldPassword, newPassword)")),Object(r.b)("p",null,"Sets the password that should be used to unlock admin space.\nReturns a Promise that resolves once the password is changed."),Object(r.b)("p",null,"If given the correct password, admin space will use the new password."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the password that is currently used to unlock admin space."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the password that should be used to unlock admin space."),Object(r.b)("h4",{id:"examples-150"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Change the admin space password.")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'try {\n    await adminSpace.setPassword("old-password", "new-password");\n    player.toast("Admin Space Password Changed!");\n} catch(err) {\n    player.toast("Failed to change the password " + err);\n}\n')),Object(r.b)("h2",{id:"experimental-actions"},"Experimental Actions"),Object(r.b)("h3",{id:"experimentlocalformanimationbot-animation"},Object(r.b)("inlineCode",{parentName:"h3"},"experiment.localFormAnimation(bot, animation)")),Object(r.b)("p",null,"Locally plays the given animation on the given bot."),Object(r.b)("p",null,"If an animation is already playing, it will be interrupted.\nWhen the given animation is finished playing, the interrupted animation will be restored."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"first parameter")," is the Bot or Bot ID that the animation should be played on."),Object(r.b)("p",null,"The ",Object(r.b)("strong",{parentName:"p"},"second parameter")," is the name or index of the animation that should be played."),Object(r.b)("h4",{id:"examples-151"},"Examples"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},'Play the "jump" animation on this bot.')),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'experiment.localFormAnimation(this, "jump");\n')))}p.isMDXComponent=!0}}]);